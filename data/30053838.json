{
  "_id": 30053838,
  "_isComplete": true,
  "__v": 24469,
  "_lastUpdate": "2017-02-17T08:06:36.940Z",
  "appealsEndDate": "2016-05-01T03:26:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Topcoder Direct AWS Lambda Function - Add Payment",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<h2><span>Background&nbsp;</span></h2>\n\n<p><span>Topcoder is considering to refactor the TC Direct application by using RESTful APIs instead of calling various EJBs and directly contacting the underline database, which will allow us to begin decoupling TC Direct from its existing backend and provide exposure to some of its core services. As a first step, we want to avoid rewriting some of the complex business logic.</span></p>\n\n<p><span>For the initial stage, we&#39;d like to use AWS Lambda Function and AWS API Gateway to wrap around the EJB calls and database calls, and make the TC Direct to call the AWS API gateway instead. &nbsp;This way we isolate the depenencies between TC Direct and EJB services/informix, then we can move ahead quickly.</span></p>\n\n<h2><span>Scope</span></h2>\n\n<p><span>Previously in we have launched severeal challenges like&nbsp;<strong>Proof Of Concept - AWS Lambda Function to Invoke Direct EJB Service etc,&nbsp;</strong>and sorted out the way to use AWS Lambda Function to wrap arround the EJB calls and &nbsp;Database calls.</span></p>\n\n<p><span>For this challenge, we&#39;d like to follow the same approach to create AWS Lambda Function for add payment for member.</span></p>\n\n<h3><span><u><span>Requirements</span></u></span></h3>\n\n<p><span>1.&nbsp;</span><span style=\"font-family:source sans pro,arial,helvetica,sans-serif\">Currently in legacy applications, there are many places that contains the functionality for paying members. like&nbsp;</span></p>\n\n<ul>\n\t<li><span>https://coder.topcoder.com/internal/web_module/trunk/src/main/com/topcoder/utilities/pacts/ProcessJiraPayments.java</span></li>\n\t<li>https://coder.topcoder.com/tcs/clients/cronos/applications/online_review/trunk/src/java/main/com/cronos/onlinereview/actions/projectpayments/</li>\n\t<li>...</li>\n</ul>\n\n<p>They are all calling the&nbsp;<span>PactsClientServices EJB by delegation, which handles the real creation of payments.</span></p>\n\n<p><span style=\"font-family:source sans pro,arial,helvetica,sans-serif\">2. All Pacts related code logic can be found by&nbsp;</span><span>https://coder.topcoder.com/internal/web_module/trunk/src/main/com/topcoder/web/ejb/pacts directory</span></p>\n\n<p>3. For this challenge, we are going to reimplment the addPayment functionality similar as&nbsp;</p>\n\n<p><u>com.topcoder.web.ejb.pacts.PactsServicesBean#addPayment(BasePayment payment, long operatorUserId) throws SQLException</u></p>\n\n<p>4. &nbsp;Instead of calling the EJB in jboss remotely, you are expected directly contact the database as the implementation in PactsServicesBean.</p>\n\n<p>5. There are many implementations of <u>BasePayment</u>, you are expected to properly defined the Input JSON format, and in the Lambda Function it will recreate the corresponding concrete instance, so we can easily handle all different payments.</p>\n\n<p><span style=\"color:#FF0000\">You are not going to create all logic for creating payment object from the JSON format, but you should include the general approach which we can follow to support more payment types.</span></p>\n\n<p>You may be able to use&nbsp;BasePayment#<span style=\"color:rgb(255, 198, 109)\">createPayment</span><span>(</span><span style=\"color:rgb(204, 120, 50)\">int </span><span>paymentTypeId</span><span style=\"color:rgb(204, 120, 50)\">, long </span><span>coderId</span><span style=\"color:rgb(204, 120, 50)\">, double </span><span>grossAmount</span><span style=\"color:rgb(204, 120, 50)\">, long </span><span>referenceId</span><span style=\"color:rgb(204, 120, 50)\">, int </span><span>placed)</span></p>\n\n<p>6. &nbsp;This lambda function is needed to cover the logic for paying one member.</p>\n\n<p><span>7. Please create the swagger api doc for the created aws lambda function, please following the example provided in forum, and properly desribe the input JSON for various payment.</span></p>\n\n<p><span>8. Please use&nbsp;<span>AWS lambda swagger&nbsp;<a href=\"https://github.com/awslabs/aws-apigateway-importer\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102);\"><span>https://github.com/awslabs/aws-apigateway-importer</span></a>&nbsp;to create api gateway endpoint using the created swagger api doc, and hook it with the aws lambda function</span></span></p>\n\n<p><span>9. The json response should be simple and clear, and properly handle the error cases with proper messages.</span></p>\n\n<h2><span>Reference</span></h2>\n\n<p><span>1. Competitors need to request your own VM for development and testing.</span></p>\n\n<p><span>2. To verify the payment is created properly, you can check the payment page in legacy www, like&nbsp;</span><span>https://tc.cloud.topcoder.com/PactsMemberServlet?module=PaymentHistory&amp;full_list=false or directly checking the database.</span></p>\n\n<p><span>3. Please reuse any components instead of creating your own if possible, like shared.jar,&nbsp;</span><span>PactsServices.jar (don&#39;t use the EJB related class)</span></p>\n\n<p><span>5. The previous challenges will be provided in forum for reference.</span></p>\n\n<h2><span>VM ENVIRONMENT</span></h2>\n\n<p><span>If you need a Topcoder VM to work on this challenge, Please request the VM in the challenge forum.</span></p>\n\n<p><span>Information about VM can be found below:</span></p>\n\n<p><span>VM specific information is found here:&nbsp;<a href=\"http://www.topcoder.com/wiki/display/docs/VM+Image+2.5\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">http://www.topcoder.com/wiki/display/docs/VM+Image+2.5</a></span></p>\n\n<p><span>Upon registration as a submitter or reviewer you will need to request a VM based on the new TopCoder Cockpit/Direct image. To request your image, please use the forum. Before requesting your VM, you need to ensure that you have an SSH key created and in your member profile. Instructions to do so are here:&nbsp;<a href=\"http://www.topcoder.com/wiki/display/projects/Generate+SSH+Key\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">http://www.topcoder.com/wiki/display/projects/Generate+SSH+Key</a>, and instructions to connect afterwards are here:<a href=\"http://www.topcoder.com/wiki/display/projects/Connect+Using+SSH+Key\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">http://www.topcoder.com/wiki/display/projects/Connect+Using+SSH+Key</a>.</span></p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30053838",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<ul>\n\t<li>Complete source code for aws lambda function</li>\n\t<li>Working VM and aws lambda function for testing</li>\n\t<li>Deployment Guide and Verification Documentation</li>\n</ul>\n",
  "forumId": 32733,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=32733",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 27,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2016-04-20T15:26:00.000Z",
      "actualStartTime": "2016-04-20T15:26:00.000Z",
      "scheduledEndTime": "2016-04-27T15:26:00.000Z",
      "actualendTime": "2016-04-27T15:26:00.000Z",
      "_id": "58a6af0c5d036c0bbdd5fd54"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2016-04-20T15:31:00.000Z",
      "actualStartTime": "2016-04-20T15:31:00.000Z",
      "scheduledEndTime": "2016-04-27T15:26:00.000Z",
      "actualendTime": "2016-04-27T15:26:00.000Z",
      "_id": "58a6af0c5d036c0bbdd5fd53"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2016-04-27T15:26:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-04-29T15:26:00.000Z",
      "actualendTime": null,
      "_id": "58a6af0c5d036c0bbdd5fd52"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2016-04-29T15:26:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-04-30T15:26:00.000Z",
      "actualendTime": null,
      "_id": "58a6af0c5d036c0bbdd5fd51"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2016-04-30T15:26:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-05-01T03:26:00.000Z",
      "actualendTime": null,
      "_id": "58a6af0c5d036c0bbdd5fd50"
    }
  ],
  "platforms": [
    "AWS"
  ],
  "postingDate": "2016-04-20T15:26:00.000Z",
  "prize": [
    600,
    300
  ],
  "projectId": 9512,
  "registrants": [
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2016-04-20T15:37:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4f"
    },
    {
      "handle": "bannie2492",
      "reliability": "n/a",
      "registrationDate": "2016-04-20T15:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4e"
    },
    {
      "handle": "panoptimum",
      "reliability": "n/a",
      "registrationDate": "2016-04-20T18:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4d"
    },
    {
      "handle": "duxiaoyang",
      "reliability": "n/a",
      "registrationDate": "2016-04-20T18:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4c"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2016-04-20T23:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4b"
    },
    {
      "handle": "Standlove",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T00:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd4a"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T01:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd49"
    },
    {
      "handle": "dingjian",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T01:22:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd48"
    },
    {
      "handle": "kolath",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T02:31:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd47"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T11:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd46"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T14:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd45"
    },
    {
      "handle": "tcdevels",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T16:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd44"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2016-04-21T19:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd43"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2016-04-22T04:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd42"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2016-04-22T15:11:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd41"
    },
    {
      "handle": "vinoh",
      "reliability": "n/a",
      "registrationDate": "2016-04-23T01:22:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd40"
    },
    {
      "handle": "sah2ed",
      "reliability": "n/a",
      "registrationDate": "2016-04-23T11:38:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3f"
    },
    {
      "handle": "gooty12",
      "reliability": "n/a",
      "registrationDate": "2016-04-24T09:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3e"
    },
    {
      "handle": "wood387",
      "reliability": "n/a",
      "registrationDate": "2016-04-24T12:09:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3d"
    },
    {
      "handle": "joasgarcia",
      "reliability": "n/a",
      "registrationDate": "2016-04-25T23:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3c"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-04-26T00:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3b"
    },
    {
      "handle": "tracyfan",
      "reliability": "n/a",
      "registrationDate": "2016-04-26T09:59:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd3a"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-04-26T13:46:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd39"
    },
    {
      "handle": "fivestarwy",
      "reliability": "n/a",
      "registrationDate": "2016-04-27T02:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd38"
    },
    {
      "handle": "hizhaojun",
      "reliability": "n/a",
      "registrationDate": "2016-04-27T10:15:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd37"
    },
    {
      "handle": "hnghhhhhh",
      "reliability": "n/a",
      "registrationDate": "2016-04-27T11:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd36"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2016-04-27T13:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6af0c5d036c0bbdd5fd35"
    }
  ],
  "registrationEndDate": "2016-04-27T15:26:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-04-27T15:26:00.000Z",
  "submissions": [],
  "technology": [
    "Java"
  ]
}