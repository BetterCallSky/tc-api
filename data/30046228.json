{
  "_id": 30046228,
  "_isComplete": true,
  "__v": 0,
  "_lastUpdate": "2016-10-27T17:49:32.616Z",
  "appealsEndDate": "2014-10-15T06:51:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Release Assembly - Turkification API",
  "challengeType": "Assembly Competition",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<h2><span style=\"color:rgb(255, 0, 0)\">Project Overview</span></h2>\n\n<p>Our client want to use Amazon mturk to invite game players to play set of games. Each Human Intelligence Task (HIT) will be for completing a &quot;task&quot; (analogous to a subset of levels in the game versions) in exchange for payment. Ideally, we would keep this as short and simple as possible - i.e. one &quot;task&quot; gets the payment (instead of multiple progressive levels).</p>\n\n<p>Game players will need to navigate to client website in order to play the games, client will user mturk API to login players, and to perform some other mturk operations. Also client wants to allow multiple teams to user same mturk account but with limited access. We will be launching multiple challenges to build the infrastructure to automate and simplify this process.</p>\n\n<h2><span style=\"color:rgb(255, 0, 0)\">Competition Task Overview</span></h2>\n\n<p>In this challenge we will build a REST API for common functionality that game developer teams will need access to in order to automate HIT manipulation.</p>\n\n<h3><span style=\"color:#FF0000\">Technology Stack</span></h3>\n\n<ul>\n\t<li>ExpressJS framework</li>\n\t<li>PostgreSQL DB</li>\n\t<li>Any compatible ORM node module (i.e. node-orm2, sequelizejs, .. <a href=\"http://stackoverflow.com/questions/8041846/any-postgres-compatible-orm-for-node-js\">others</a>)</li>\n\t<li>OAuth 2.0</li>\n</ul>\n\n<h3><span style=\"color:#FF0000\">OAuth Server</span></h3>\n\n<p>API needs to be protected behind an OAuth server, here is how we will do it :</p>\n\n<ul>\n\t<li>We will have a user model that define users who have access to the API (same users will have access admin portal that we will build in future ), the user schema will be similar to this :\n\t<ul>\n\t\t<li>user email</li>\n\t\t<li>password</li>\n\t\t<li>domain id\n\t\t<ul>\n\t\t\t<li>We need to control who can manipulate HITs under of each game development team, so we need to support multi-tenancy where HITs are associated with domains.</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>role - each user may have roles associated to his/her account, roles will be related to domains, i.e. user can have admin access domain A but user access to domain B, roles are :\n\t\t<ul>\n\t\t\t<li>global admin : user with this role can have read/write access to any domain.</li>\n\t\t\t<li>admin : user with this role can have read/write access to the associated domain.</li>\n\t\t\t<li>user : user with this role can have read access to the associated domain.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>We will use OAuth 2.0 Server</li>\n\t<li>OAuth server will support creating oauth tokens via two grant types :\n\t<ul>\n\t\t<li>Authorization Code Grant</li>\n\t\t<li>Resource Owner Password Credentials Grant</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><span style=\"color:#FF0000\">API Requirements</span></h3>\n\n<p>We will implement the following API endpoints in this challenge :</p>\n\n<ul>\n\t<li>Create/Disable/Extend HIT :\n\t<ul>\n\t\t<li>They will work as wrapper to mturk API :\n\t\t<ul>\n\t\t\t<li><a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_CreateHITOperation.html\">Create HIT</a></li>\n\t\t\t<li><a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_DisableHITOperation.html\">Disable HIT</a></li>\n\t\t\t<li><a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_ExtendHITOperation.html\">Extend HIT</a></li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>These operations require at least &#39;admin&#39; role.</li>\n\t\t<li>We will have a Task model to store information about HIT, the model will updated in all three operations, the schema :\n\t\t<ul>\n\t\t\t<li>mturk_hit_id - the mturk HIT id and will work as the primary id of the model</li>\n\t\t\t<li>mturk title</li>\n\t\t\t<li>task id - this will store the task id team will use to associate created HIT with the task to be used when rendering the game for mturk workers.</li>\n\t\t\t<li>domain id</li>\n\t\t\t<li>created by</li>\n\t\t\t<li>created date</li>\n\t\t\t<li>modified by</li>\n\t\t\t<li>modified date</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Endpoints routes :\n\t\t<ul>\n\t\t\t<li>POST /hits\n\t\t\t<ul>\n\t\t\t\t<li>this will be used for creating hits</li>\n\t\t\t\t<li>Each item input to this method will be identical to input of <a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_CreateHITOperation.html\">mturk create hit api operation</a> including the task id.</li>\n\t\t\t\t<li>The flow :\n\t\t\t\t<ul>\n\t\t\t\t\t<li>There must be valid user with &#39;admin&#39; role to access this operation.</li>\n\t\t\t\t\t<li>Create mturk HIT</li>\n\t\t\t\t\t<li>If previous step is successful then insert new Task record and return it to caller with response code 200</li>\n\t\t\t\t\t<li>If failed, propagate the error from mturk to caller</li>\n\t\t\t\t\t<li>If any other errors happen, then propagate to caller</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>PUT /hits\n\t\t\t<ul>\n\t\t\t\t<li>this will be used to extending hits</li>\n\t\t\t\t<li>Input to this method will be identical to input of <a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_ExtendHITOperation.html\">mturk extend hit api operation</a>.</li>\n\t\t\t\t<li>The flow :\n\t\t\t\t<ul>\n\t\t\t\t\t<li>There must be valid user with &#39;admin&#39; role to access this operation.</li>\n\t\t\t\t\t<li>call mturk to extend HIT</li>\n\t\t\t\t\t<li>If previous step is successful then update HIT record and return 204 http status code to caller.</li>\n\t\t\t\t\t<li>If failed, propagate the error from mturk to caller</li>\n\t\t\t\t\t<li>If any other errors happen, then propagate to caller</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>DELETE /hits\n\t\t\t<ul>\n\t\t\t\t<li>this will be used to disable hits</li>\n\t\t\t\t<li>call mturk disable HIT to <a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_DisableHITOperation.html\">disable HIT</a></li>\n\t\t\t\t<li>If previous step is successful then update HIT record and return 204 http status code to caller.</li>\n\t\t\t\t<li>If failed, propagate the error from mturk to caller</li>\n\t\t\t\t<li>If any other errors happen, then propagate to caller</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>Get ALL Hits\n\t<ul>\n\t\t<li>Endpiont route : GET /hits</li>\n\t\t<li>This operation requires at least user with &#39;user&#39; role to access it.</li>\n\t\t<li>Retrieve all Tasks associated with the logged in user domain id.</li>\n\t\t<li>Return results to caller.</li>\n\t</ul>\n\t</li>\n\t<li>Get HIT\n\t<ul>\n\t\t<li>endpoint route : GET /hit/:mturk_hit_id</li>\n\t\t<li>The operation requires at least user with &#39;user&#39; role to access it.</li>\n\t\t<li>the target hit should be under same domain as the authorized user domain id.</li>\n\t\t<li>The flow will be :\n\t\t<ul>\n\t\t\t<li>retireve Task from db.</li>\n\t\t\t<li>retrieve corresponding HIT from mturk using <a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_GetHITOperation.html\">Get Hit operation.</a></li>\n\t\t\t<li>populate task with all additional returned properties from previous step.</li>\n\t\t\t<li>return the task to caller.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><span style=\"color:#FF0000\">Postman REST Client</span></h3>\n\n<ul>\n\t<li><a href=\"http://www.getpostman.com/\">http://www.getpostman.com/</a></li>\n\t<li>Create a Postman json file with request for all operations in scope in addition to the OAuth server requests.</li>\n\t<li>Include sample requests</li>\n\t<li>Don&#39;t include sample environment data</li>\n</ul>\n\n<h3><span style=\"color:#FF0000\">Folder Structure</span></h3>\n\n<ul>\n\t<li>We are going to have a private git repository</li>\n\t<li>The folder structure will follow this structure:\n\t<ul>\n\t\t<li>moduledir/\n\t\t<ul>\n\t\t\t<li>controllers/</li>\n\t\t\t<li>services/</li>\n\t\t\t<li>models/</li>\n\t\t\t<li>views/</li>\n\t\t\t<li>confg/\n\t\t\t<ul>\n\t\t\t\t<li>All sensitive information, db connection info, specific environment variables must be set in configuration.</li>\n\t\t\t\t<li>Configuration file should have default values.</li>\n\t\t\t\t<li>Use .env environment variable to override default values.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>package.json</li>\n\t\t\t<li>app.js</li>\n\t\t\t<li>jakefile.js</li>\n\t\t\t<li>jake.sh</li>\n\t\t\t<li>jake.bat</li>\n\t\t\t<li>postman.json</li>\n\t\t\t<li>readme.md</li>\n\t\t\t<li>.gitignore (include common files and folders to be excluded in nodejs application)</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li><strong>If you need to add any file or directory to the above folder structure you need to get explicit confirmation from Copilot in forums.</strong></li>\n\t<li>Dependency modules will be added to package.json as dependencies will be installed by executing <em>npm install</em> along with the public nodejs modules</li>\n</ul>\n\n<p>&nbsp;</p>\n",
  "digitalRunPoints": 810,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30046228",
  "finalFixEndDate": "2014-10-15T17:29:00.000Z",
  "finalSubmissionGuidelines": "<h2><strong><span style=\"color:#FF0000\"><span>Submission Deliverables</span></span></strong></h2>\n\n<p><span style=\"font-size:12px\">Below is an overview of the deliverables:</span></p>\n\n<ul>\n\t<li>a git folder with same structure as outlined above.</li>\n\t<li>A readme.md file detailing all information needed to setup and test the API. Use github flavored markup text. It should be part of the git folder submitted</li>\n\t<li>postman.json - it should be part of the git folder submitted</li>\n\t<li>text file with any notes to reviewer.</li>\n\t<li>You don&#39;t need to submit a word document for deployment guide.</li>\n\t<li>Submitting a video for how to setup and test api is a plus.</li>\n</ul>\n\n<h2><span style=\"color:#FF0000\"><strong>Final Submission</strong></span></h2>\n\n<p><span style=\"font-size:12px\">For each member, the final submission should be uploaded via the challenge detail page on <a href=\"http://www.topcoder.com\">topcoder.com</a>.</span></p>\n",
  "forumId": 25937,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=25937",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 25,
  "numberOfSubmissions": 2,
  "postingDate": "2014-10-06T15:27:00.000Z",
  "projectId": 5104,
  "registrationEndDate": "2014-10-08T15:28:00.000Z",
  "reliabilityBonus": 360,
  "reviewScorecardId": 30001470,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": 30000412,
  "submissionEndDate": "2014-10-11T15:24:00.000Z",
  "submissions": [
    {
      "handle": "Sky_",
      "placement": 1,
      "screeningScore": 100,
      "initialScore": 98.97,
      "finalScore": 99.7,
      "points": 567,
      "submissionStatus": "Active",
      "submissionDate": "2014-10-09T18:08:00.000Z",
      "_id": "58123e2ce61fd730185a3a18"
    },
    {
      "handle": "BharathMG",
      "placement": 2,
      "screeningScore": 100,
      "initialScore": 74.95,
      "finalScore": 78.46,
      "points": 243,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-11T12:47:00.000Z",
      "_id": "58123e2ce61fd730185a3a17"
    }
  ],
  "phases": [
    {
      "type": "Specification Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-10-06T13:28:00.000Z",
      "actualStartTime": "2014-10-06T13:28:00.000Z",
      "scheduledEndTime": "2014-10-06T13:29:00.000Z",
      "actualendTime": "2014-10-06T13:29:00.000Z",
      "_id": "58123e2ce61fd730185a3a16"
    },
    {
      "type": "Specification Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-06T13:29:00.000Z",
      "actualStartTime": "2014-10-06T13:29:00.000Z",
      "scheduledEndTime": "2014-10-06T15:27:00.000Z",
      "actualendTime": "2014-10-06T15:27:00.000Z",
      "_id": "58123e2ce61fd730185a3a15"
    },
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2014-10-06T15:27:00.000Z",
      "actualStartTime": "2014-10-06T15:27:00.000Z",
      "scheduledEndTime": "2014-10-08T15:28:00.000Z",
      "actualendTime": "2014-10-08T15:28:00.000Z",
      "_id": "58123e2ce61fd730185a3a14"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-10-06T15:32:00.000Z",
      "actualStartTime": "2014-10-06T15:32:00.000Z",
      "scheduledEndTime": "2014-10-11T15:24:00.000Z",
      "actualendTime": "2014-10-11T15:24:00.000Z",
      "_id": "58123e2ce61fd730185a3a13"
    },
    {
      "type": "Screening",
      "status": "Closed",
      "scheduledStartTime": "2014-10-11T15:24:00.000Z",
      "actualStartTime": "2014-10-11T15:24:00.000Z",
      "scheduledEndTime": "2014-10-12T01:37:00.000Z",
      "actualendTime": "2014-10-12T01:37:00.000Z",
      "_id": "58123e2ce61fd730185a3a12"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-12T01:37:00.000Z",
      "actualStartTime": "2014-10-12T01:37:00.000Z",
      "scheduledEndTime": "2014-10-14T13:06:00.000Z",
      "actualendTime": "2014-10-14T13:06:00.000Z",
      "_id": "58123e2ce61fd730185a3a11"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2014-10-14T13:06:00.000Z",
      "actualStartTime": "2014-10-14T13:06:00.000Z",
      "scheduledEndTime": "2014-10-14T22:55:00.000Z",
      "actualendTime": "2014-10-14T22:55:00.000Z",
      "_id": "58123e2ce61fd730185a3a10"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2014-10-14T22:55:00.000Z",
      "actualStartTime": "2014-10-14T22:55:00.000Z",
      "scheduledEndTime": "2014-10-15T06:51:00.000Z",
      "actualendTime": "2014-10-15T06:51:00.000Z",
      "_id": "58123e2ce61fd730185a3a0f"
    },
    {
      "type": "Aggregation",
      "status": "Closed",
      "scheduledStartTime": "2014-10-15T06:51:00.000Z",
      "actualStartTime": "2014-10-15T06:51:00.000Z",
      "scheduledEndTime": "2014-10-15T09:42:00.000Z",
      "actualendTime": "2014-10-15T09:42:00.000Z",
      "_id": "58123e2ce61fd730185a3a0e"
    },
    {
      "type": "Final Fix",
      "status": "Closed",
      "scheduledStartTime": "2014-10-15T09:42:00.000Z",
      "actualStartTime": "2014-10-15T09:42:00.000Z",
      "scheduledEndTime": "2014-10-15T17:29:00.000Z",
      "actualendTime": "2014-10-15T17:29:00.000Z",
      "_id": "58123e2ce61fd730185a3a0d"
    },
    {
      "type": "Final Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-15T17:29:00.000Z",
      "actualStartTime": "2014-10-15T17:29:00.000Z",
      "scheduledEndTime": "2014-10-15T21:57:00.000Z",
      "actualendTime": "2014-10-15T21:57:00.000Z",
      "_id": "58123e2ce61fd730185a3a0c"
    },
    {
      "type": "Approval",
      "status": "Closed",
      "scheduledStartTime": "2014-10-15T21:57:00.000Z",
      "actualStartTime": "2014-10-15T21:57:00.000Z",
      "scheduledEndTime": "2014-10-20T21:58:00.000Z",
      "actualendTime": "2014-10-20T21:58:00.000Z",
      "_id": "58123e2ce61fd730185a3a0b"
    }
  ],
  "registrants": [
    {
      "handle": "mayank8888",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T18:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a0a"
    },
    {
      "handle": "Sky_",
      "reliability": "100%",
      "registrationDate": "2014-10-06T15:32:00.000Z",
      "submissionDate": "2014-10-09T18:08:00.000Z",
      "rating": "2090",
      "colorStyle": "color: #DDCC00",
      "_id": "58123e2ce61fd730185a3a09"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T15:33:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a08"
    },
    {
      "handle": "BharathMG",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T15:37:00.000Z",
      "submissionDate": "2014-10-11T12:47:00.000Z",
      "rating": "607",
      "colorStyle": "color: #999999",
      "_id": "58123e2ce61fd730185a3a07"
    },
    {
      "handle": "panoptimum",
      "reliability": "0%",
      "registrationDate": "2014-10-06T15:39:00.000Z",
      "submissionDate": null,
      "rating": "1256",
      "colorStyle": "color: #6666FF",
      "_id": "58123e2ce61fd730185a3a06"
    },
    {
      "handle": "woodjhon",
      "reliability": "0%",
      "registrationDate": "2014-10-06T16:00:00.000Z",
      "submissionDate": null,
      "rating": "782",
      "colorStyle": "color: #999999",
      "_id": "58123e2ce61fd730185a3a05"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T16:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a04"
    },
    {
      "handle": "rajeshk87",
      "reliability": "0%",
      "registrationDate": "2014-10-06T16:24:00.000Z",
      "submissionDate": null,
      "rating": "600",
      "colorStyle": "color: #999999",
      "_id": "58123e2ce61fd730185a3a03"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T16:32:00.000Z",
      "submissionDate": null,
      "rating": "514",
      "colorStyle": "color: #999999",
      "_id": "58123e2ce61fd730185a3a02"
    },
    {
      "handle": "roarky",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T17:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a01"
    },
    {
      "handle": "esteer",
      "reliability": "30%",
      "registrationDate": "2014-10-06T18:01:00.000Z",
      "submissionDate": null,
      "rating": "1156",
      "colorStyle": "color: #00A900",
      "_id": "58123e2ce61fd730185a3a00"
    },
    {
      "handle": "TMALBONPH",
      "reliability": "0%",
      "registrationDate": "2014-10-06T18:14:00.000Z",
      "submissionDate": null,
      "rating": "58",
      "colorStyle": "color: #999999",
      "_id": "58123e2ce61fd730185a39ff"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2014-10-06T23:04:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39fe"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T02:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39fd"
    },
    {
      "handle": "cyberjag",
      "reliability": "0%",
      "registrationDate": "2014-10-07T02:37:00.000Z",
      "submissionDate": null,
      "rating": "1213",
      "colorStyle": "color: #6666FF",
      "_id": "58123e2ce61fd730185a39fc"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T04:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39fb"
    },
    {
      "handle": "kiri4a",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T04:59:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39fa"
    },
    {
      "handle": "gjw99",
      "reliability": "0%",
      "registrationDate": "2014-10-07T06:10:00.000Z",
      "submissionDate": null,
      "rating": "1031",
      "colorStyle": "color: #00A900",
      "_id": "58123e2ce61fd730185a39f9"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T10:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39f8"
    },
    {
      "handle": "pfilippi",
      "reliability": "0%",
      "registrationDate": "2014-10-07T11:22:00.000Z",
      "submissionDate": null,
      "rating": "1088",
      "colorStyle": "color: #00A900",
      "_id": "58123e2ce61fd730185a39f7"
    },
    {
      "handle": "yo123",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T14:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39f6"
    },
    {
      "handle": "OldTramp",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T15:13:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39f5"
    },
    {
      "handle": "jol",
      "reliability": "n/a",
      "registrationDate": "2014-10-07T16:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39f4"
    },
    {
      "handle": "dezl",
      "reliability": "n/a",
      "registrationDate": "2014-10-08T05:35:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a39f3"
    },
    {
      "handle": "yedtoss",
      "reliability": "20%",
      "registrationDate": "2014-10-08T15:00:00.000Z",
      "submissionDate": null,
      "rating": "1126",
      "colorStyle": "color: #00A900",
      "_id": "58123e2ce61fd730185a39f2"
    }
  ],
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "prize": [
    1800,
    900
  ],
  "technology": [
    "API",
    "Node.js",
    "Other",
    "PostgreSQL"
  ],
  "platforms": [
    "AWS"
  ]
}