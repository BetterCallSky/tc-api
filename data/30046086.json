{
  "_id": 30046086,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T11:00:40.884Z",
  "appealsEndDate": "2014-09-30T20:04:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Amazon S3 NodeJS Dataloader",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-10-26T19:57:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -63298940,
  "currentStatus": "Completed",
  "detailedRequirements": "<h2>Task Overview</h2>\n\n<p>The goal of this challenge is to build an Amazon S3 data loader that can be hosted and run on heroku.</p>\n\n<h2>Task Requirements</h2>\n\n<h3><span style=\"color:#DAA520\">General Requirements</span></h3>\n\n<ul>\n\t<li>The application should will be using <a href=\"http://expressjs.com/\">express.js</a> web framework, with <a href=\"http://getbootstrap.com/\">bootstrap</a> in frontend, <a href=\"https://github.com/awssum/awssum-amazon-s3\" target=\"_blank\">awssum amazon s3</a> node module to interact with amaon s3, and hosted in <a href=\"http://heroku.com\" target=\"_blank\">heroku</a>.</li>\n\t<li>Expected application structure should be as follow :\n\t<ul>\n\t\t<li>package.json</li>\n\t\t<li>app.js - contains the logic</li>\n\t\t<li>.gitignore - should include files that should be ignored, including .env, node_modules, ..etc</li>\n\t\t<li>env-sample - this file is sample of .env file</li>\n\t\t<li>public - contains public files</li>\n\t\t<li>view - contains the view pages</li>\n\t\t<li>node_modules</li>\n\t\t<li>README.md</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><span style=\"color:#DAA520\">Frontend Requirements</span></h3>\n\n<p>The application should have the following pages and flow :</p>\n\n<ul>\n\t<li>Login page - will contain the following fields\n\t<ul>\n\t\t<li>route : /login</li>\n\t\t<li>&quot;Data Source&quot; : (required) a drop down list with<span style=\"background-color:transparent; color:#000000; font-family:arial; font-size:15px\"> <span style=\"font-size:12px\">S3 as the only option for now.</span></span></li>\n\t\t<li>&quot;AWS Access Key ID&quot; : (required) input field</li>\n\t\t<li>&quot;AWS Secret Key&quot; : (required) input field</li>\n\t\t<li>&quot;Bucket Name&quot; : (optional) Amazon S3 Bucket Name</li>\n\t\t<li>For successful login :\n\t\t<ul>\n\t\t\t<li>If user specified valid bucket name then take user to &quot;Bucket Details&quot; page</li>\n\t\t\t<li>If user specified invalid bucket name or did not provide bucket name, then take user to &quot;All Buckets&quot; listing page.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>&quot;All Buckets&quot; Listing page\n\t<ul>\n\t\t<li>route : /buckets</li>\n\t\t<li>this page list the authenticated user&#39;s buckets\n\t\t<ul>\n\t\t\t<li>Columns will include bucket name and creation date</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>selecting or clicking on a bucket name will take user to bucket details page</li>\n\t</ul>\n\t</li>\n\t<li>&quot;Bucket Details&quot; page\n\t<ul>\n\t\t<li>route : /bucket/:bucket-name/?:object-path</li>\n\t\t<li>this page list all objects (folder and files) in selected bucket</li>\n\t\t<li>the table should include : object name, size (if avaiable), and last modified date\n\t\t<ul>\n\t\t\t<li>If the object is folder then clicking/selecting it will take user to same page with objects under that selected folder.</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Selecting a file will take user to &quot;File Viewer&quot; details page.</li>\n\t</ul>\n\t</li>\n\t<li>&quot;File Viewer&quot; details page :\n\t<ul>\n\t\t<li>route : /bucket/:bucket-name/:object-path/:file-name</li>\n\t\t<li>we are only limiting the viewer to support only a comma seperated csv file.</li>\n\t\t<li>The csv file will be displayed in a responsive table, the csv file&#39;s first row will represents table header, rest are data rows.</li>\n\t</ul>\n\t</li>\n\t<li>&quot;Upload File&quot; page :\n\t<ul>\n\t\t<li>route : /bucket/upload</li>\n\t\t<li>This page will be used to upload csv file to S3</li>\n\t\t<li>It will contains\n\t\t<ul>\n\t\t\t<li>a form for uploading file, and it should only be limited to uploading csv files.</li>\n\t\t\t<li>drop down list to pick the bucket to upload the file to</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>We will support only uploading single file at a time.</li>\n\t\t<li>It will show upload loading indicator.</li>\n\t\t<li>Cancel upload button should be added to allow user to cancel upload.</li>\n\t</ul>\n\t</li>\n\t<li>Navigation\n\t<ul>\n\t\t<li>There should be general navigation contains the following (Only appears for Logged in users):\n\t\t<ul>\n\t\t\t<li>Home - take user to bucket listing page</li>\n\t\t\t<li>Upload File</li>\n\t\t\t<li>Logout</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>breadcrumb and proper titles should be used in each nested page that we navigate to it from other pages</li>\n\t</ul>\n\t</li>\n\t<li>Error/Info messages :\n\t<ul>\n\t\t<li>Properly use bootstrap alert boxes to show user errors and success messages.</li>\n\t\t<li>Messages should be either dismissed when clicking on them or when user navigate between pages, or when user make an action in the page itself (i.e. Clicking on upload button).</li>\n\t\t<li>Error messages must be user friendly, make sure to convert error code messages from s3 to friendly user messages.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><span style=\"color:#DAA520\">Technical Requirements</span></h3>\n\n<ul>\n\t<li>Configuration file should read any sensitive data from environment variables (.env file).</li>\n\t<li>Login functionality - we assume that sometimes user will make mistake when inputting bucket name in login form, so when authenticating user don&#39;t pass bucket name, the flow should be :\n\t<ul>\n\t\t<li>If bucket exists and user has access to it, take user to bucket details page.</li>\n\t\t<li>If bucket does not exist, then take user to &quot;All buckets&quot; page and display error message returned from checking the bucket.</li>\n\t\t<li>On successful authentication\n\t\t<ul>\n\t\t\t<li>Store the aws credentials in session encrypted</li>\n\t\t\t<li>validate that bucket exists https://github.com/awssum/awssum-amazon-s3#checkbucket</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Authenticating user as in this <a href=\"https://github.com/awssum/awssum-amazon-s3#example\">example</a>.\n\t\t<ul>\n\t\t\t<li>If authentication failed, return user back to login page with proper error returned from amazon s3.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>All buckets functionality\n\t<ul>\n\t\t<li>You will use <a href=\"https://github.com/awssum/awssum-amazon-s3#listbuckets\">List bucket </a>method to list all buckets that user have access to.</li>\n\t</ul>\n\t</li>\n\t<li>Bucket details functionality\n\t<ul>\n\t\t<li>You will use <a href=\"https://github.com/awssum/awssum-amazon-s3#listobjects\">List Objects</a> method to retrieve objects under selected bucket.</li>\n\t\t<li>There is a possibility that a bucket would contain more than 1000 objects, so you need to support pagination by adding &quot;view more&quot; button at the bottom that load more content via ajax call. You will be able to determine if there is more data to load by checking isTruncated attribute from the last request made. If it is included then you display &quot;view more&quot;, if not, then hide it (this applies in both ajax and non-ajax requests).</li>\n\t</ul>\n\t</li>\n\t<li>File Viewer functionality\n\t<ul>\n\t\t<li>You will use <a href=\"https://github.com/awssum/awssum-amazon-s3#getobject\">Get Object method</a> to retrieve object.</li>\n\t\t<li>We will only support csv files, so before retrieving the object we need to validate that object is a csv by checking it&#39;s metadat using <a href=\"https://github.com/awssum/awssum-amazon-s3#getobjectmetadata\">get object metdata method.</a> (you will check content-type)</li>\n\t\t<li>If the file is not csv then return user to bucket details page with error that selected file is not viewable in this version.</li>\n\t\t<li>If the file is csv then parse first row as the column names, and rest as data rows.</li>\n\t\t<li>The data will be rendered in File Viewer page on a table, and we need to render FULL rows at a time with pagination capability via ajax.\n\t\t<ul>\n\t\t\t<li>This part is very tricky, we need to only stream part of the file directly from S3 each time we need to view more data so you need to use &#39;Range&#39; capability to retrieve part of the files. So we assume you can retrieve 10kb of the file in first attempt, and parse the file and count number of FULL rows, send them to frontend and set the next range start byte to be the last byte value from the last full row retrieved.</li>\n\t\t\t<li>In next &quot;view more&quot; calls, it will use the next range start byte we passed to frontend + 10kbyte of byte to retieve next rows.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>Upload file functinality :\n\t<ul>\n\t\t<li>We want to support large file upload (i.e &gt; 100MB), so we need to use Mutipart Upload, check the node module for the methods used to support multipart.</li>\n\t\t<li>Check the file being uploaded, don&#39;t allow upload if it is not csv file.</li>\n\t\t<li>We want to show user the progress of upload, so properly utilize the methods to send user an upload progress status.</li>\n\t\t<li>Use <a href=\"https://github.com/awssum/awssum-amazon-s3#abortmultipartupload\">abort multipart upload</a> to properly abort uploading the file when user decide to cancel upload.</li>\n\t</ul>\n\t</li>\n\t<li>Decrypt aws credentials helper\n\t<ul>\n\t\t<li>After successful login, we will keep aws credentials on session so we don&#39;t ask user to login each time we need to make a request to s3.</li>\n\t\t<li>Middleware will decrypt the aws credentials if exists on session.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><span style=\"color:#DAA520\">Amazon S3 Credentials</span></h3>\n\n<p>We will provide credentials in challenge forums for testing purpose.</p>\n\n<h2>Deliverables</h2>\n\n<ul>\n\t<li>Full application implementing the functionality outlined above as .git repo.</li>\n\t<li>README file to configure and deploy the application on heroku, use https://help.github.com/articles/github-flavored-markdown</li>\n</ul>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30046086",
  "finalSubmissionGuidelines": "<p>.</p>\n",
  "forumId": 25777,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=25777",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 16,
  "numberOfSubmissions": 4,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2014-09-26T19:57:00.000Z",
      "actualStartTime": "2014-09-26T19:57:00.000Z",
      "scheduledEndTime": "2014-10-26T19:57:00.000Z",
      "actualendTime": null,
      "_id": "58132fd8550dfb3b52b8c7c6"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-09-27T04:36:00.000Z",
      "actualStartTime": "2014-09-27T04:36:00.000Z",
      "scheduledEndTime": "2014-09-27T08:46:00.000Z",
      "actualendTime": "2014-09-27T08:46:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c5"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-09-26T20:02:00.000Z",
      "actualStartTime": "2014-09-26T20:02:00.000Z",
      "scheduledEndTime": "2014-10-26T20:02:00.000Z",
      "actualendTime": null,
      "_id": "58132fd8550dfb3b52b8c7c4"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-09-27T08:47:00.000Z",
      "actualStartTime": "2014-09-27T08:47:00.000Z",
      "scheduledEndTime": "2014-09-27T09:47:00.000Z",
      "actualendTime": "2014-09-27T09:47:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c3"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-09-27T18:54:00.000Z",
      "actualStartTime": "2014-09-27T18:54:00.000Z",
      "scheduledEndTime": "2014-09-28T11:21:00.000Z",
      "actualendTime": "2014-09-28T11:21:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c2"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-09-28T21:51:00.000Z",
      "actualStartTime": "2014-09-28T21:51:00.000Z",
      "scheduledEndTime": "2014-09-30T20:04:00.000Z",
      "actualendTime": "2014-09-30T20:04:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c1"
    }
  ],
  "platforms": [
    "Heroku",
    "NodeJS"
  ],
  "postingDate": "2014-09-26T19:57:00.000Z",
  "prize": [
    800
  ],
  "projectId": 8111,
  "registrants": [
    {
      "handle": "cipher_aes",
      "reliability": "n/a",
      "registrationDate": "2014-09-26T20:55:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7c0"
    },
    {
      "handle": "savon_cn",
      "reliability": "n/a",
      "registrationDate": "2014-09-26T23:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7bf"
    },
    {
      "handle": "capitalist",
      "reliability": "n/a",
      "registrationDate": "2014-09-26T23:52:00.000Z",
      "submissionDate": "2014-09-28T21:51:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7be"
    },
    {
      "handle": "norcimo5",
      "reliability": "n/a",
      "registrationDate": "2014-09-27T03:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7bd"
    },
    {
      "handle": "gmagniez",
      "reliability": "n/a",
      "registrationDate": "2014-09-27T06:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7bc"
    },
    {
      "handle": "mulish",
      "reliability": "n/a",
      "registrationDate": "2014-09-27T11:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7bb"
    },
    {
      "handle": "arshadasif0312",
      "reliability": "n/a",
      "registrationDate": "2014-09-27T12:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7ba"
    },
    {
      "handle": "samsundar88",
      "reliability": "n/a",
      "registrationDate": "2014-09-27T13:51:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b9"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-09-28T00:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b8"
    },
    {
      "handle": "m8",
      "reliability": "n/a",
      "registrationDate": "2014-09-28T18:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b7"
    },
    {
      "handle": "kaiGG",
      "reliability": "n/a",
      "registrationDate": "2014-09-29T16:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b6"
    },
    {
      "handle": "shankarkamble",
      "reliability": "n/a",
      "registrationDate": "2014-09-29T16:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b5"
    },
    {
      "handle": "spanhawk",
      "reliability": "n/a",
      "registrationDate": "2014-09-29T18:47:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b4"
    },
    {
      "handle": "purpleheart",
      "reliability": "n/a",
      "registrationDate": "2014-09-29T20:31:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b3"
    },
    {
      "handle": "vinoh",
      "reliability": "n/a",
      "registrationDate": "2014-09-30T15:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b2"
    },
    {
      "handle": "xiaobeitu",
      "reliability": "n/a",
      "registrationDate": "2014-10-08T13:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fd8550dfb3b52b8c7b1"
    }
  ],
  "registrationEndDate": "2014-10-26T19:57:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2014-10-26T20:02:00.000Z",
  "submissions": [
    {
      "handle": "capitalist",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-09-27T04:35:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7ca"
    },
    {
      "handle": "capitalist",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-09-27T05:53:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c9"
    },
    {
      "handle": "capitalist",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2014-09-28T21:51:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c8"
    },
    {
      "handle": "capitalist",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-09-27T18:53:00.000Z",
      "_id": "58132fd8550dfb3b52b8c7c7"
    }
  ],
  "technology": [
    "API",
    "Bootstrap",
    "CSS",
    "HTML",
    "JavaScript",
    "Node.js",
    "Web Services"
  ]
}