{
  "_id": 30046954,
  "_isComplete": true,
  "__v": 25367,
  "_lastUpdate": "2017-02-17T08:01:27.631Z",
  "appealsEndDate": "2014-11-13T14:33:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Release Assembly - CSFV User Photo Enhancement",
  "challengeType": "Assembly Competition",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-11-09T14:33:00.000Z",
  "currentPhaseName": "Submission",
  "currentPhaseRemainingTime": -71774759,
  "currentStatus": "Cancelled - Client Request",
  "detailedRequirements": "<h2><span style=\"color:rgb(255, 0, 0)\">Project Overview</span></h2>\n\n<p><span>This project, the CSFV Community Gaming website project will provide the web site infrastructure and integration of the games. This will be a web site that is available on the Internet, and also will be delivered in a form where the server and the games can be installed and used behind a firewall</span><span style=\"font-size:12px\">.</span></p>\n\n<h2><span style=\"color:rgb(255, 0, 0)\">Challenge Task Overview</span></h2>\n\n<p>We are using gm node module to resize, crop and render user photo in the website. We execute the gm each time we request the image, with the increase of user base in the website it started to affect performance, consuming lots of CPU and memory.</p>\n\n<p>We are improving this in this challenge.</p>\n\n<h2><span style=\"color:rgb(255, 0, 0)\">Challenge Task Requirement</span></h2>\n\n<h3><span style=\"color:#DAA520\">Render Photo - Exiting Logic</span></h3>\n\n<ol>\n\t<li>In frontend pages we render the user photo by calling /photo/:username/:width?/:height? endpoint, i.e. http://verigames.com/photo/elkhawajah/200/200 or http://verigames.com/photo/elkhawajah</li>\n\t<li>It is configured in config/configuration.js to forward the route in step (1) to <a href=\"https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/UserPrivateProfile.js#L859\">UserPrivateProfile#getProfilePicture</a></li>\n\t<li>getProfilePicture returns the User entity using logged in user session or passed in :username parameter, then it retrieves attachment of the user from Attachment user user.photo field. It then reads width and height if it is provided, find proper height/width to crop and resize the photo. Then it sends it back to the caller.</li>\n\t<li>Cache header is set for the downloaded image and it is currently hardcoded to be 30 seconds. The reason is that when you cache it for longer than that, it will remain cached in browser side even if user uploaded another photo.</li>\n</ol>\n\n<p>Problems with approach that it always call backend to render and resize the image.</p>\n\n<h3><span style=\"color:#DAA520\">Photo Upload - Existing Logic Flow</span></h3>\n\n<ol>\n\t<li>We initiate a middleware that handles uploading of the file\n\t<ul>\n\t\t<li>https://github.com/topcoderinc/csfv_frontend_module/blob/master/app.js#L301-L319</li>\n\t\t<li>Middlewares exists in csfv_utilities_module : <a href=\"https://github.com/topcoderinc/csfv_utilities_module/blob/master/services/LocalStorageUploadMiddleware.js\">LocalStorageUploadMiddleware</a> and <a href=\"https://github.com/topcoderinc/csfv_utilities_module/blob/master/services/S3UploadMiddleware.js\">S3UploadMiddleware</a></li>\n\t</ul>\n\t</li>\n\t<li>Then it forwards the call to <a href=\"https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/UserPublicProfile.js#L990\">UserPublicProfile.uploadAttachment</a></li>\n\t<li>After successful upload it will save the new photo in user profile by calling <a href=\"https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/UserPrivateProfile.js#L589\">UserPrivateProfile#saveProfileConfiguration</a></li>\n</ol>\n\n<h3><span style=\"color:#DAA520\">Render and Upload Photo - New Logic and Flow</span> <span style=\"color:#FFFFFF\"><span style=\"background-color:rgb(255, 0, 0)\">(This what you need to address in this challenge!)</span></span></h3>\n\n<p>There are two parts to fix the problem with user photos :</p>\n\n<ol>\n\t<li>When user upload new photos we need to execute the following :\n\t<ol>\n\t\t<li>Change how we store file names in the upload middleware : locally and Amazon S3.\n\t\t<ul>\n\t\t\t<li>The middleware should expect a &#39;useFileName&#39; flag indicate whether to use the file name uploaded or not, if equal to false then generate timestamp in milleseconds and store it as file name. i.e. the final file directory + name is &lt;username&gt;/MemberPhoto/&lt;timestamp&gt;</li>\n\t\t\t<li>Update Amazon S3 to set caching headers. By default it should be cached for 1 year. Make that value configurable. The field can be S3CacheMaxAage</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>When saving the photo, run a sync helper function that don&#39;t block the execution block that resize, crop and store photos of the uploaded photo.\n\t\t<ul>\n\t\t\t<li>It will be called in this block https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/UserPrivateProfile.js#L602-L603</li>\n\t\t\t<li>The resize will run against a configurable array of allowed dimsensions.\n\t\t\t<ul>\n\t\t\t\t<li>The file name should read from Attachment#fileName and append height/width to it, i.e. &lt;username&gt;/MemberPhoto/&lt;timestamp&gt;<strong>-</strong>&lt;height&gt;<strong>-</strong>&lt;width&gt;</li>\n\t\t\t\t<li>You will also need to initiate a middleware here that either use S3 or Local storage from csfv_utilities_module to upload generated photos.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Proceed in the logic as it is currently implemented.</li>\n\t</ol>\n\t</li>\n\t<li>When retrieving user photo :\n\t<ol>\n\t\t<li>Validate that the requested height/width are allowed, validate against the configurable array of allowed dimensions.\n\t\t<ul>\n\t\t\t<li>If requested dimensions are not valid, return message to use &#39;requested dimensions are not supported, contact &lt;support email&gt; to request adding this dimension to photo rendering&quot;</li>\n\t\t\t<li>We assume the logic will be placed here&nbsp; https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/UserPrivateProfile.js#L859</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Check if the requested height/width size already exists by checking the file exists.</li>\n\t\t<li>If file does not exists, then generate the image with the requested dimension, store it using middlewares as we done when storing the photo (mentioned above).\n\t\t<ul>\n\t\t\t<li>We are using this code to retrieve and resize the image https://github.com/topcoderinc/csfv_frontend_module/blob/master/controllers/ControllerHelper.js#L452</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Based on the storage used, if it is S3 then redirect caller to the URL. Otherwise, stream the file to the caller.\n\t\t<ul>\n\t\t\t<li>Create new middleware in csfv_utilities_module that is used to either redirect user to http/https URL (S3) or to stream the image (stored locally) to user.</li>\n\t\t</ul>\n\t\t</li>\n\t</ol>\n\t</li>\n</ol>\n\n<h3><span style=\"color:rgb(255, 0, 0)\">Testing</span></h3>\n\n<ul>\n\t<li>Use user profile to upload photo. When hovering over user photo it will show you &#39;edit&#39; button, you can upload photo from there.</li>\n\t<li>We are using the /photo/:username/:height/:width everywhere in the website, you can scan the views for this route (search for /photo/), navigate to that view to test the rendering.</li>\n</ul>\n\n<div>\n<h2><span><span style=\"color:rgb(255, 0, 0)\">Github Code</span></span></h2>\n\n<p>The code is hosted in priviate github repositories :</p>\n\n<ul>\n\t<li><span><a href=\"https://github.com/topcoderinc/csfv_frontend_module\">csfv_frontend_module</a> - The main website web application</span>.</li>\n\t<li><a href=\"https://github.com/topcoderinc/csfv_utilities_module\">csfv_utilities_module</a> - Helper module that contains middleware controllers/services to handle uploading.</li>\n</ul>\n\n<p>If you cannot view these repositories, then post in challenge forums with your github account username to be added to Github repo.</p>\n\n<div class=\"previewMask\">\n<div class=\"previewMask\">\n<div class=\"previewMask\">\n<h3><span><span><span><span><strong><span style=\"color:#FF0000\"><span>Submission Deliverables</span></span></strong></span></span></span></span></h3>\n\n<p><span><span><span><span><span style=\"font-size:12px\">Below is an overview of the deliverables:</span></span></span></span></span></p>\n\n<ul>\n\t<li><span><span><span><span>Patch file of the changes, include the hash commit used as basis for the work.</span></span></span></span></li>\n\t<li><span><span><span><span><span style=\"font-size:12px\">A complete and detailed deployment document explaining how to deploy the application including configuration information.</span></span></span></span></span></li>\n</ul>\n\n<h2><span><span><span><span><span style=\"color:#FF0000\"><strong>Final Submission</strong></span></span></span></span></span></h2>\n\n<p><span><span><span><span><span style=\"font-size:12px\">For each member, the final submission should be uploaded to the Online Review Tool.</span></span></span></span></span></p>\n</div>\n</div>\n</div>\n</div>\n",
  "digitalRunPoints": 450,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30046954",
  "finalFixEndDate": "2014-11-15T02:33:00.000Z",
  "finalSubmissionGuidelines": "<p>.</p>\n",
  "forumId": 26485,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=26485",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 12,
  "numberOfSubmissions": 0,
  "postingDate": "2014-11-05T14:33:00.000Z",
  "projectId": 5104,
  "registrationEndDate": "2014-11-07T14:33:00.000Z",
  "reliabilityBonus": 200,
  "reviewScorecardId": 30001470,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": 30000412,
  "submissionEndDate": "2014-11-09T14:33:00.000Z",
  "submissions": [],
  "phases": [
    {
      "type": "Specification Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-11-05T13:41:00.000Z",
      "actualStartTime": "2014-11-05T13:41:00.000Z",
      "scheduledEndTime": "2014-11-05T13:43:00.000Z",
      "actualendTime": "2014-11-05T13:43:00.000Z",
      "_id": "58a6add75d036c0bbdd5acb0"
    },
    {
      "type": "Specification Review",
      "status": "Closed",
      "scheduledStartTime": "2014-11-05T13:43:00.000Z",
      "actualStartTime": "2014-11-05T13:43:00.000Z",
      "scheduledEndTime": "2014-11-05T14:33:00.000Z",
      "actualendTime": "2014-11-05T14:33:00.000Z",
      "_id": "58a6add75d036c0bbdd5acaf"
    },
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2014-11-05T14:33:00.000Z",
      "actualStartTime": "2014-11-05T14:33:00.000Z",
      "scheduledEndTime": "2014-11-07T14:33:00.000Z",
      "actualendTime": "2014-11-07T14:33:00.000Z",
      "_id": "58a6add75d036c0bbdd5acae"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-11-05T14:39:00.000Z",
      "actualStartTime": "2014-11-05T14:39:00.000Z",
      "scheduledEndTime": "2014-11-09T14:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5acad"
    },
    {
      "type": "Screening",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-09T14:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-10T02:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5acac"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-10T02:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-12T02:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5acab"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-12T02:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-13T02:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5acaa"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-13T02:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-13T14:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5aca9"
    },
    {
      "type": "Aggregation",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-13T14:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-14T02:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5aca8"
    },
    {
      "type": "Final Fix",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-14T02:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-15T02:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5aca7"
    },
    {
      "type": "Final Review",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-15T02:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-15T14:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5aca6"
    },
    {
      "type": "Approval",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-15T14:33:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-20T14:33:00.000Z",
      "actualendTime": null,
      "_id": "58a6add75d036c0bbdd5aca5"
    }
  ],
  "registrants": [
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2014-11-05T18:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5aca4"
    },
    {
      "handle": "peakpado",
      "reliability": "6%",
      "registrationDate": "2014-11-05T19:27:00.000Z",
      "submissionDate": null,
      "rating": "915",
      "colorStyle": "color: #00A900",
      "_id": "58a6add75d036c0bbdd5aca3"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-11-06T03:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5aca2"
    },
    {
      "handle": "Schpotsky",
      "reliability": "0%",
      "registrationDate": "2014-11-06T08:11:00.000Z",
      "submissionDate": null,
      "rating": "1447",
      "colorStyle": "color: #6666FF",
      "_id": "58a6add75d036c0bbdd5aca1"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2014-11-06T08:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5aca0"
    },
    {
      "handle": "rakeshk_87",
      "reliability": "n/a",
      "registrationDate": "2014-11-06T08:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5ac9f"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2014-11-06T13:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5ac9e"
    },
    {
      "handle": "JGeeks",
      "reliability": "n/a",
      "registrationDate": "2014-11-06T13:40:00.000Z",
      "submissionDate": null,
      "rating": "528",
      "colorStyle": "color: #999999",
      "_id": "58a6add75d036c0bbdd5ac9d"
    },
    {
      "handle": "rajeshk87",
      "reliability": "0%",
      "registrationDate": "2014-11-06T18:36:00.000Z",
      "submissionDate": null,
      "rating": "600",
      "colorStyle": "color: #999999",
      "_id": "58a6add75d036c0bbdd5ac9c"
    },
    {
      "handle": "woodjhon",
      "reliability": "0%",
      "registrationDate": "2014-11-07T05:12:00.000Z",
      "submissionDate": null,
      "rating": "782",
      "colorStyle": "color: #999999",
      "_id": "58a6add75d036c0bbdd5ac9b"
    },
    {
      "handle": "sidthekid",
      "reliability": "n/a",
      "registrationDate": "2014-11-07T13:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6add75d036c0bbdd5ac9a"
    },
    {
      "handle": "SePulTribe",
      "reliability": "0%",
      "registrationDate": "2014-11-07T13:56:00.000Z",
      "submissionDate": null,
      "rating": "400",
      "colorStyle": "color: #999999",
      "_id": "58a6add75d036c0bbdd5ac99"
    }
  ],
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "prize": [
    1000,
    500
  ],
  "technology": [
    "MongoDB",
    "Node.js"
  ],
  "platforms": [
    "Other"
  ]
}