{
  "_id": 30051637,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T10:05:56.817Z",
  "appealsEndDate": "2015-11-11T21:11:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "SunShot - MySunBody Python Code Challenge",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p dir=\"ltr\">MySunBuddy is a peer-to-peer platform to facilitate the purchase and selling of solar net metering credits.</p>\n\n<p dir=\"ltr\">The scope of this challenge is to build MySunBuddy platform frontend/backend with basic UI bootstrap theme.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<p dir=\"ltr\">You will address the following in this challenge :</p>\n\n<h3 dir=\"ltr\"><u>UI Requirements</u></h3>\n\n<p dir=\"ltr\">We don&rsquo;t have a UI prototype or a design, you will build simple website UI :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use default bootstrap UI theme for the look and feel.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The UI should look good.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use AngularJS or JQuery as frontend JS library.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Database Schema</u></h3>\n\n<p dir=\"ltr\">This is a proposed schema, you can make any suggestion that is needed :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Users table</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- username</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- password</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- email address</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- zip code</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- phone number</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- tou (termsOfUse) : true.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- role : seller or buyer</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- credit</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- file</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- file_location</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- user_id</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Deals table</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- seller_user_id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- buyer_user_id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- price</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- quantity</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- demand_date : represents the month the deal is covering</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- transaction_date</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- status (Pending Seller, Pending Buyer, Deny by Seller, Deny by Buyer, Approved, Completed)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Pages and Functionality Requirements</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">You will build REST API backend that communicates with frontend AngularJS code.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Signup Page</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Information to be collected are :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Type (Seller, Buyer) : user must select a type, and this type will be stored as a field in User table.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- username</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- password</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- zip code</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- e-mail address</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- phone number (optional)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- communication preferences (email or sms)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- If user picked &ldquo;Seller&rdquo; type then the following additional fields get displayed:</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Utility Bill upload form - to upload file</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Panel Type drop down - possible values should be taken from module_type</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- System Capacity input field &nbsp;- possible range : 0.05 to 500000</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Using the the Panel Type, System Capacity and Address :</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Use <a href=\"https://developer.nrel.gov/docs/solar/pvwatts-v5/\">PVWatts V5 API</a> to calculate the seller solar production.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Panel Type corresponds to module_type in the api.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- System capacity corresponds to system_capacity input parameter in the api.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Address corresponds to address input parameter.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- We need &ldquo;ac_annual&rdquo; response field which is in kWh.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Calculate &ldquo;Credits to Sell&rdquo; using the following formula:</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- (ac_annual - ExpectedNetDemand*SafetyFactor)</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- ExpectedNetDemand should be read from configurations, the value should be 8000kWh in this challenge, we will replace it with a value when integrating with GreenButton in future.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- SafetyFactor should be a configurable value, i.e. &ldquo;1.1&rdquo;</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Once we determine the &ldquo;Credits to Sell&rdquo;, the user should be prompted to agree to the amount, and a warning message that &ldquo;It may sell more than they use, causing them to have to pay an electricity bill.&rdquo;</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Give user a range field to change that value where max value is credits to sell and lowest value is 1%.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- The credits to sell should be stored in database.</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- If user picked &ldquo;Buyer&rdquo; then we assume the annual usage is 8000 kWh, we will display following for the user :</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Display a range option with four ranges, 25%, 50%, 75%, and 100% of buyer net monthly demand which she will seek to offset using net metering credits.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- This &ldquo;credits to buy&rdquo; information should be stored in database.</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Form should include &lsquo;agree to terms of use&rsquo; and this check should be added to backend and user model.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Proper validation and error handling must be addressed in frontend js and backend code.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Send verification email to user, user should not be allowed to login until they verify their account.</p>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Login</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Login should be either by email or username. The same endpoint should accept email or username.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- On successful login user is redirected to Seller page if user is seller or Buyer page if user is Buyer.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Add links to forgot password and sign up in this page.</p>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Forgot and Reset Password</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The Forgot password logic should be as follow :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- User provides username or email to ask kor reset password email.</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If user with email exists or not exists, send an email :</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- if user exists then reset password email should be sent.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- If user with email does not exist then send email to user that no user associated with the email and give them a signup form.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If user with username exists then send reset email password.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- There should be expiration date for the reset password.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Add validation for email in frontend and backend.</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Email templates and email options should be configurable.</p>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The reset password email</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Validate that reset password for that user has not expired yet, if expired then display friendly message that it was expired.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- The reset password form should have two password input fields, one for new password, and the other one to re-type the new password.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- On successful reset redirect user to login page.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Add proper validation for emails in both frontend and backend.</p>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Logout functionality</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- For logged in user there should be logout button always in header.</p>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Account Settings Page</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- There should be a link to Account Settings page from header.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- User should be able to update the following information :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- All User Table information.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- For Buyers they will get percentage of net metering they want to buy. This will be the range field same as in registration.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- For Sellers they will get percentage of net metering they want to sell. This will be a range field same as in registration.</p>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Seller Page</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This is landing page for Sellers.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It will show two tables, one for pending sales and the other for past transactions.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Pending deals table :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Read from deals table where the sales_user_id = to seller id and status &ldquo;Pending Seller&rdquo;.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- There should be an action column with two options : Approve/Deny.</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If Deny then update the deals table to &ldquo;Cancelled By Seller&rdquo;.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If Approve is clicked then</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Send email to buyer about the deal</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Update status to &ldquo;Pending Buyer&rdquo;</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Past transactions table :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- This should load all deals where status is not Pending Seller or Pending Buyer status, and sales_user_id = the user id.</p>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer Page</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This is the landing page for Buyers</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It will show tables, one for pending purchases, and the other for past transactions.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It will also show historical dollar amounts, savings, GHG impact.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Pending deals</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Read from deals table where the buyer_user_id = to user id and status &ldquo;Pending Buyer&rdquo;.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- There should be an action column with two options : Approve/Deny.</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If deny then</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- update the deals table to &ldquo;Cancelled By Buyer&rdquo;</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- send email to seller notifying about cancellation of the deal.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- If &ldquo;Approve&rdquo; is clicked then</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Send email to seller about the deal.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Update status to &ldquo;Approved&rdquo;.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Send email to both seller and buyer about the success of the transaction.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- If user has past purchases we will display a google map with pins indicating where the energy are coming from.</p>\n\t\t</li>\n\t</ol>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer/Seller matching job scheduler</p>\n\n\t<ol>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The job scheduler will match qualifying partners based on location and quantitative constraints :</p>\n\n\t\t<ol>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Algorithm to match partners - We will implement a first in first out algorithm to do matching between seller and buyers, the matching will work like this :</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Exclude buyer/seller that already have matching/deals for current month that cover the buyer/seller buy/sell credits.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Group sellers and buyers by ISO-load Zone and utility provider using buyer/seller address. So for each user (buyer/seller) retrieve the zip code and find the ISO-load Zone and utility provider</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- You are provided with sample sheet for ISO-zones utility provider and zip codes, create a lookup table in database that contains same information, and use it to retrieve load zone and utility provider of the provided zip code, you can generate more test data if you want to.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Sort buyers by create date (represents the registration date)</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Sort sellers by create date (represents registration date)</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For each buyer :</p>\n\n\t\t\t\t<ol>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Get required remaining buying credit to cover.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Based on remained selling credits from all sellers, calculate number of sellers needed to cover the buyer remaining buy credits.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- For each matching we create a deal record in database with following information :</p>\n\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- seller_id</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- buyer_id</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- quantity</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- price</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- demand_date (represents current month date)</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- transaction_date</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t\t<p dir=\"ltr\">- status &nbsp;: &ldquo;Pending Seller&rdquo;</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Remove seller that covered all selling credits from array.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ol>\n\t\t</li>\n\t</ol>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>General Note</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Logging, validation, error handling must be properly implemented.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- All sensitive information, and environment specific information should be configurable.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Hosting</u></h3>\n\n<p dir=\"ltr\">It is preferred if you host your solution in Heroku.</p>\n\n<h3 dir=\"ltr\"><u>Python Framework</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use <a href=\"http://www.django-rest-framework.org/\">Django REST Framework</a> to build the REST API backend.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use ORM module for database, either django rest one or <a href=\"http://www.sqlalchemy.org/\">sqlalchemy</a>.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Technology</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Python version 3.x running on Ubuntu</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Postgres 9.4</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Django 1.8.x</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- AngularJS</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Bootstrap</p>\n\t</li>\n</ul>\n\n<h4 dir=\"ltr\"><u>Abstracting and Design Patterns</u></h4>\n\n<p dir=\"ltr\">Please make sure to create helper/interface to include the common code/functionality.</p>\n\n<p dir=\"ltr\">Also please make sure your design is flexible, use facade design pattern and adapter design pattern (and any other proper design pattern) to enable future extensibility of the solution.</p>\n\n<h4 dir=\"ltr\"><u>Coding Standard</u></h4>\n\n<p dir=\"ltr\">Follow python coding best practices : <a href=\"http://www.python.org/dev/peps/pep-0008/\">PEP 8</a> for the main text, and<a href=\"http://www.python.org/dev/peps/pep-0257/\"> PEP 257</a> for docstring conventions</p>\n\n<h4 dir=\"ltr\"><u>Documentation</u></h4>\n\n<p dir=\"ltr\">Your solution must be well documented.</p>\n\n<h4 dir=\"ltr\"><u>Readme</u></h4>\n\n<p dir=\"ltr\">Provide a detailed readme file using Markdown language with following information :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Overview</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Setup Prerequisites</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Configurations</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Deployment</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Any details about any limitations of your solution.</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Please note, we&#39;re judging this competition not just on the code, but also on the quality of the documentation, and ease of use.</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30051637",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<h1>Submission Deliverables</h1>\n\n<p><span>Below is an overview of the deliverables:</span></p>\n\n<ul>\n\t<li><span>- All source code and files that implement above requirements.</span></li>\n\t<li><span>- README file.</span></li>\n\t<li><span>- Detailed&nbsp;Verification steps document.</span></li>\n</ul>\n\n<h2>Final Submission</h2>\n\n<p>For each member, the final submission should be uploaded via the challenge detail page on <a href=\"http://www.topcoder.com\">topcoder.com</a>.</p>\n",
  "forumId": 30749,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=30749",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 25,
  "numberOfSubmissions": 2,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-11-02T19:34:00.000Z",
      "actualStartTime": "2015-11-02T19:34:00.000Z",
      "scheduledEndTime": "2015-11-08T19:40:00.000Z",
      "actualendTime": "2015-11-08T19:40:00.000Z",
      "_id": "58132304550dfb3b52b3b3e1"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-11-02T19:40:00.000Z",
      "actualStartTime": "2015-11-02T19:40:00.000Z",
      "scheduledEndTime": "2015-11-08T19:40:00.000Z",
      "actualendTime": "2015-11-08T19:40:00.000Z",
      "_id": "58132304550dfb3b52b3b3e0"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2015-11-08T19:40:00.000Z",
      "actualStartTime": "2015-11-08T19:40:00.000Z",
      "scheduledEndTime": "2015-11-10T19:38:00.000Z",
      "actualendTime": "2015-11-10T19:38:00.000Z",
      "_id": "58132304550dfb3b52b3b3df"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2015-11-10T19:38:00.000Z",
      "actualStartTime": "2015-11-10T19:38:00.000Z",
      "scheduledEndTime": "2015-11-11T19:38:00.000Z",
      "actualendTime": "2015-11-11T19:38:00.000Z",
      "_id": "58132304550dfb3b52b3b3de"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2015-11-11T19:38:00.000Z",
      "actualStartTime": "2015-11-11T19:38:00.000Z",
      "scheduledEndTime": "2015-11-11T21:11:00.000Z",
      "actualendTime": "2015-11-11T21:11:00.000Z",
      "_id": "58132304550dfb3b52b3b3dd"
    }
  ],
  "platforms": [
    "Other"
  ],
  "postingDate": "2015-11-02T19:34:00.000Z",
  "prize": [
    1500,
    750
  ],
  "projectId": 9156,
  "registrants": [
    {
      "handle": "ananthhh",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T04:11:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3dc"
    },
    {
      "handle": "jaindsonvs",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T11:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3db"
    },
    {
      "handle": "yassine123",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T02:25:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3da"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T20:22:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d9"
    },
    {
      "handle": "gondzo",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T20:56:00.000Z",
      "submissionDate": "2015-11-08T18:58:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d8"
    },
    {
      "handle": "vvvpig",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T22:24:00.000Z",
      "submissionDate": "2015-11-08T12:09:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d7"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T22:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d6"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T01:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d5"
    },
    {
      "handle": "Luckyodell",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T01:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d4"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T05:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d3"
    },
    {
      "handle": "deedee",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T06:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d2"
    },
    {
      "handle": "mulish",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T07:38:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d1"
    },
    {
      "handle": "DHEERAJSONI",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T09:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3d0"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T10:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3cf"
    },
    {
      "handle": "okuni",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T12:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3ce"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T13:12:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3cd"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T16:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3cc"
    },
    {
      "handle": "PeterBest",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T11:46:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3cb"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T13:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3ca"
    },
    {
      "handle": "JithuRJacob",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T14:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c9"
    },
    {
      "handle": "esteer",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T17:24:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c8"
    },
    {
      "handle": "java1980",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T12:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c7"
    },
    {
      "handle": "Ganesh_Madhu",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T02:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c6"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T13:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c5"
    },
    {
      "handle": "SPChoria",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T21:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132304550dfb3b52b3b3c4"
    }
  ],
  "registrationEndDate": "2015-11-08T19:40:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-08T19:40:00.000Z",
  "submissions": [
    {
      "handle": "vvvpig",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 88.75,
      "finalScore": 91.25,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2015-11-08T12:09:00.000Z",
      "_id": "58132304550dfb3b52b3b3e3"
    },
    {
      "handle": "gondzo",
      "placement": 2,
      "screeningScore": null,
      "initialScore": 71.25,
      "finalScore": 71.25,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2015-11-08T18:58:00.000Z",
      "_id": "58132304550dfb3b52b3b3e2"
    }
  ],
  "technology": [
    "Angular.js",
    "Bootstrap",
    "CSS",
    "JavaScript",
    "PostgreSQL",
    "Python"
  ]
}