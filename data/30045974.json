{
  "_id": 30045974,
  "_isComplete": true,
  "__v": 2234,
  "_lastUpdate": "2016-11-05T11:04:58.358Z",
  "appealsEndDate": "2014-10-03T03:58:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "[serenity] Simple Discussion model",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-09-29T15:58:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -66337534,
  "currentStatus": "Cancelled - Client Request",
  "detailedRequirements": "<p><em>This challenge is part of Project SERENITY: a refresh of the topcoder challenge lifecycle. There are many challenges before it and will be many after it but you should be able to clone this repo: https://github.com/topcoderinc/serenity-core, grok the README and be up to speed in a few minutes. &nbsp; This project pulls heavily from the MEAN.io stack but with PostgreSQL support.</em></p>\n\n<p><br />\nFor this challenge we would like to explore a simple custom discussion module. &nbsp;This will serve as the same purpose as the forums: &nbsp;a member asks a question; a moderator answers it. &nbsp; For now we will forgo @mentions and #tags or any advanced features but keep it simple: &nbsp; Title, Body, Author, Object, &lsquo;Objectid&rsquo; and parent_discussion_id. &nbsp;The first three fields should &nbsp;be pretty obvious. &nbsp; &nbsp;Object will give us the opportunity to attach the discussion module on more than one thing. &nbsp; For starters the object will always be &lsquo;challenge&rsquo; since that is the primary place we think of challenges, &nbsp; However we would like to use this same module for the scorecard appeal process. &nbsp; In that example the Object would be &lsquo;scorecard&rsquo; &nbsp; The ObjectId in this case would be the challenge id and the parent_discussion_id would be null when a person starts a new thread, however if the record is a reply then the parent_discussion_id would be the id of the original message. &nbsp; This should give us the flexibility to nest messages many layers deep.</p>\n\n<p><br />\n<strong>Requirements.</strong></p>\n\n<p>1. &nbsp;Create a new module &lsquo;discussion&rsquo; that will allow us to add a threaded discussion directive any where. &nbsp;&nbsp;<br />\n2. &nbsp;We plan to use this same pattern for the scorecard comment/appeal process so please keep that in mind when designing a solution.<br />\n3. &nbsp;Solution should be a directive that can be place anywhere into the app that will allow us to create/store/retrieve/search threaded discussions.<br />\n4. &nbsp; Add your solution to the challenge detail page.<br />\n5. &nbsp; Add a migration script for your solution. &nbsp; See the migration doc in the readme for help<br />\n6. &nbsp; Please provide a detailed document describing your solution. &nbsp;Describe the steps to include your solution into a new section of the app.&nbsp;</p>\n\n<p>&nbsp;</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30045974",
  "finalSubmissionGuidelines": "<p>1. &nbsp;Create a quick video of you solution in action<br />\n2. &nbsp;Include all the project code in a zip file&nbsp;<br />\n3. &nbsp;Create a readme called discussion.md file in the docs directory that describes your solution.</p>\n",
  "forumId": 25671,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=25671",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 1,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2014-09-22T14:58:00.000Z",
      "actualStartTime": "2014-09-22T14:58:00.000Z",
      "scheduledEndTime": "2014-09-29T15:58:00.000Z",
      "actualendTime": null,
      "_id": "581dbcda550dfb3b52be207a"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-09-22T15:03:00.000Z",
      "actualStartTime": "2014-09-22T15:03:00.000Z",
      "scheduledEndTime": "2014-09-29T15:58:00.000Z",
      "actualendTime": null,
      "_id": "581dbcda550dfb3b52be2079"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2014-09-29T15:58:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-10-01T15:58:00.000Z",
      "actualendTime": null,
      "_id": "581dbcda550dfb3b52be2078"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2014-10-01T15:58:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-10-02T15:58:00.000Z",
      "actualendTime": null,
      "_id": "581dbcda550dfb3b52be2077"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2014-10-02T15:58:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-10-03T03:58:00.000Z",
      "actualendTime": null,
      "_id": "581dbcda550dfb3b52be2076"
    }
  ],
  "platforms": [
    "NodeJS"
  ],
  "postingDate": "2014-09-22T14:58:00.000Z",
  "prize": [
    750,
    550,
    200
  ],
  "projectId": 7971,
  "registrants": [
    {
      "handle": "lovefreya",
      "reliability": "n/a",
      "registrationDate": "2014-09-22T15:06:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbcda550dfb3b52be2075"
    }
  ],
  "registrationEndDate": "2014-09-29T15:58:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2014-09-29T15:58:00.000Z",
  "submissions": [],
  "technology": [
    "Angular.js",
    "PostgreSQL"
  ]
}