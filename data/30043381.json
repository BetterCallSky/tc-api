{
  "_id": 30043381,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T11:00:09.247Z",
  "appealsEndDate": "2014-06-15T12:21:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Brivo Labs SAM API - Access Reservation Schedule Buffer Feature",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-07-10T18:46:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -72634368,
  "currentStatus": "Completed",
  "detailedRequirements": "<p>&nbsp;</p>\n\n<div class=\"previewMask\">\n<h2><span><span><span><span><span><span><span>Task Overview</span></span></span></span></span></span></span></h2>\n\n<div class=\"projectDescDetails\">\n<p>The goal of this challenge is to add schedule buffer concept to Access Reservation endpoints.</p>\n</div>\n\n<h2><span><span><span><span><span><span><span>Task Requirements</span></span></span></span></span></span></span></h2>\n\n<p><span><span>Add schedule buffer concept in Access Reservation controller (basically you are updating all endpoints to have this new feature - add/update/retrieve) </span>:</span></p>\n\n<ul>\n\t<li>\n\t<p><span>Add to two new optional parameters (<strong>scheduleGracePeriodPre </strong>and<strong> scheduleGracePeriodPost</strong>)<strong> </strong>of the AccessReservation:</span></p>\n\n\t<ul>\n\t\t<li>\n\t\t<p><span>Both Integers</span></p>\n\t\t</li>\n\t\t<li>\n\t\t<p><span>Both represent seconds</span></p>\n\t\t</li>\n\t\t<li>\n\t\t<p><span>Default is zero</span></p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>\n\t<p><span>When evaluating that the current time is within a schedule for that AccessReservation, adjust for the gracePeriod before (pre) or after (post). Make sure this logic is updated everywhere that it is done (consolidate if feasible).</span></p>\n\t</li>\n\t<li>\n\t<p><span>Provide a DDL script to create the new database columns.</span></p>\n\t</li>\n\t<li>\n\t<p><span>update postman and io docs accordingly</span></p>\n\t</li>\n</ul>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Documentation</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>Address documentation as clarfiied in section <em>6. Code Documentation </em>in <em>Brivo_Labs_SAM_API-Coding_Standards.doc</em> for both controller and model.</span></span></span></span></span></span></span></p>\n\n<ul>\n\t<li><span><span><span><span>The input parameters to the method must be documented clearly, we have 4 different type of input params : </span> </span> </span> </span>\n\n\t<ul>\n\t\t<li><span><span><span><span>path params : list the parameters set in the URL path</span></span></span></span></li>\n\t\t<li><span><span><span><span>querystring params : list any querystring parameter</span></span></span></span></li>\n\t\t<li><span><span><span><span>body params : list the body of the request in details</span></span></span></span></li>\n\t\t<li><span><span><span><span>custom headers : should list any custom header read by the method</span></span></span></span></li>\n\t</ul>\n\t<span> <span> <span> <span> </span></span></span></span></li>\n\t<li><span><span><span><span><span><span><span>It is important to write down a list of responses, it should include both successful and failed reponses with their status code.</span></span></span></span></span></span></span></li>\n\t<li><span><span><span><span><span><span><span>It is also important to document the parameters validation info, possible values, optional or required, and default value.</span></span></span></span></span></span></span></li>\n\t<li><span><span><span><span><span><span><span>All responses must be in JSON format.</span></span></span></span></span></span></span></li>\n</ul>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Responses</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span>All responses must be updated from being nested to be naked. i.e. GET /sites return sites in nested format &quot;{ sites : [ array of sites ]}&quot;, the naked response should not nest the array under &#39;sites&#39; attribute, i.e. resonse will be &quot;[array of sites]&quot;.</span></span></span></span></span></span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Error Handling</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>When some server error occurs, it will send error in the response. It should&nbsp;follow the error codes responses <a href=\"https://dev.twitter.com/docs/error-codes-responses\">here</a> and return json error message (error message should be optional), note that message should not disclouse any value from the passed in parameters or from database. It should only mention the problem in general or by specifying the NAME of the resource/parameter ..etc.</span></span></span></span></span></span></span></p>\n\n<p><span><span><span><span><span><span>Use The built-in <a href=\"http://mcavage.me/node-restify/#Error-handling\">Restify Rest Errors</a> (RestError). </span> </span> </span> </span></span></span></p>\n\n<p><span>In access reservation, we improved the error repsonse to include error code to help consumer application to better understand the errors.</span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Validation</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>Validation for input parameters and between callbacks must be performed as needed.</span></span></span></span></span></span></span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Style Checker and Correction</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>We have integrate with <a href=\"http://www.coffeelint.org/\">Coffeelint</a> to force style checking against the code. Your updated code must pass coffee lint</span> with the rules we set in coffeelint config file.</span></span></span></span></span></span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Some other coding standards.</span></span></span></span></span></span></span></span></h3>\n\n<ul>\n\t<li><span><span><span><span><span><span><span>Enforce conditional statements to follow <a href=\"https://github.com/polarmobile/coffeescript-style-guide#conditionals\">this pattern</a>, It does not have a rule in coffeelint, so this needs to be manually fixed until we have a custom rule written in coffeelint. It should be used also in returning errors.</span></span></span></span></span></span></span></li>\n\t<li><span><span><span><span><span><span><span>Use <a href=\"https://github.com/caolan/async\">async</a> module for callbacks, it should replace <a href=\"https://github.com/wdavidw/node-each\">each</a> and <a href=\"http://underscorejs.org/\">underscore</a> modules when dealing with callbacks and organizing code.</span></span></span></span></span></span></span></li>\n\t<li><span><span><span><span><span><span><span>Use <a href=\"http://underscorejs.org/\">underscore</a> </span></span></span>for utilitize functions not supported by <span><span><span><a href=\"https://github.com/caolan/async\">async</a> </span></span></span>, it should replace <span><span><span><a href=\"https://github.com/wdavidw/node-each\">each</a></span></span></span> module.</span></span></span></span></li>\n</ul>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">Build Tool</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span>We are using<span> <a href=\"http://gruntjs.com/\">Grunt</a> to automate running coffeelint and mocha testing.</span></span></span></span></span></span></span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">README.md</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>Readme file should be updated with configuration, and steps needed to run coffeelint and test cases.</span></span></span></span></span></span></span></p>\n\n<h3><span><span><span><span><span><span><span><span style=\"color:#DAA520\">IO Docs and Postman Doc</span></span></span></span></span></span></span></span></h3>\n\n<p><span><span><span><span><span><span><span>Update io docs and postman json files if there were any changes or a missing endpoint.</span></span></span></span></span></span></span></p>\n\n<h2><span><span><span><span><span><span><span>API Code</span></span></span></span></span></span></span></h2>\n\n<p><span><span><span><span><span><span><span>The code is provided in challenge forums.</span></span></span></span></span></span></span></p>\n\n<h2><span><span><span><span><span><span><span>Deliverables</span></span></span></span></span></span></span></h2>\n\n<p><span><span><span><span><span><span><span>Patch file of the changed files. WIth text file about any note you want to mention to reviewer when testing your submission.</span></span></span></span></span></span></span></p>\n</div>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30043381",
  "event": {
    "id": 3437,
    "description": "2014 TopCoder(R) Open",
    "shortDescription": "tco14"
  },
  "finalSubmissionGuidelines": "<p>.</p>\n",
  "forumId": 23496,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=23496",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 3,
  "numberOfSubmissions": 4,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2014-06-10T18:46:00.000Z",
      "actualStartTime": "2014-06-10T18:46:00.000Z",
      "scheduledEndTime": "2014-07-10T18:46:00.000Z",
      "actualendTime": null,
      "_id": "58132fb9550dfb3b52b8a458"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-06-11T20:26:00.000Z",
      "actualStartTime": "2014-06-11T20:26:00.000Z",
      "scheduledEndTime": "2014-06-13T13:42:00.000Z",
      "actualendTime": "2014-06-13T13:42:00.000Z",
      "_id": "58132fb9550dfb3b52b8a457"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-06-10T18:51:00.000Z",
      "actualStartTime": "2014-06-10T18:51:00.000Z",
      "scheduledEndTime": "2014-07-10T18:51:00.000Z",
      "actualendTime": null,
      "_id": "58132fb9550dfb3b52b8a456"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-06-14T09:30:00.000Z",
      "actualStartTime": "2014-06-14T09:30:00.000Z",
      "scheduledEndTime": "2014-06-15T12:21:00.000Z",
      "actualendTime": "2014-06-15T12:21:00.000Z",
      "_id": "58132fb9550dfb3b52b8a455"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-06-13T13:47:00.000Z",
      "actualStartTime": "2014-06-13T13:47:00.000Z",
      "scheduledEndTime": "2014-06-13T15:40:00.000Z",
      "actualendTime": "2014-06-13T15:40:00.000Z",
      "_id": "58132fb9550dfb3b52b8a454"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-06-13T15:52:00.000Z",
      "actualStartTime": "2014-06-13T15:52:00.000Z",
      "scheduledEndTime": "2014-06-13T19:28:00.000Z",
      "actualendTime": "2014-06-13T19:28:00.000Z",
      "_id": "58132fb9550dfb3b52b8a453"
    }
  ],
  "platforms": [
    "Brivo Labs"
  ],
  "postingDate": "2014-06-10T18:46:00.000Z",
  "prize": [
    150
  ],
  "projectId": 7163,
  "registrants": [
    {
      "handle": "Dansvidania",
      "reliability": "n/a",
      "registrationDate": "2014-06-10T22:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fb9550dfb3b52b8a452"
    },
    {
      "handle": "gfhuertac",
      "reliability": "n/a",
      "registrationDate": "2014-06-11T14:14:00.000Z",
      "submissionDate": "2014-06-14T09:30:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fb9550dfb3b52b8a451"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-06-12T05:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fb9550dfb3b52b8a450"
    }
  ],
  "registrationEndDate": "2014-07-10T18:46:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": null,
  "screeningScorecardId": null,
  "submissionEndDate": "2014-07-10T18:51:00.000Z",
  "submissions": [
    {
      "handle": "gfhuertac",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-06-11T20:26:00.000Z",
      "_id": "58132fb9550dfb3b52b8a45c"
    },
    {
      "handle": "gfhuertac",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-06-13T13:47:00.000Z",
      "_id": "58132fb9550dfb3b52b8a45b"
    },
    {
      "handle": "gfhuertac",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2014-06-14T09:30:00.000Z",
      "_id": "58132fb9550dfb3b52b8a45a"
    },
    {
      "handle": "gfhuertac",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-06-13T15:51:00.000Z",
      "_id": "58132fb9550dfb3b52b8a459"
    }
  ],
  "technology": [
    "API",
    "CoffeeScript",
    "Node.js",
    "PostgreSQL"
  ]
}