{
  "_id": 30047518,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T09:54:36.716Z",
  "appealsEndDate": "2014-12-08T12:22:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "[serenity]  Kue Refactor",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p>Until now our [serenity] project has mostly relied &nbsp;on CRUD operations, but now we are ready to work on some time based workflows and event based workflows. &nbsp;For example when a user launches a challenge the status is set to &quot;SUBMISSION&quot; which means the challenge is accepting submissions. &nbsp; When the SubEndAt (Submission End time ) hits the challenge.status needs to switch to &quot;REVIEW&quot;. &nbsp; Another example is of an event base workflow. &nbsp; When a challenge is in &quot;SUMBISSION&quot; and a participant creates a &#39;discussion&#39; (a simpler version of forum post) to a challenge all the other participants (Owners, Reviewers and Submitters) need to get notified via email. &nbsp;For this challenge we will focus on the first example. &nbsp;And this should be a COOL challenge you won&#39;t want to miss since I am already supplying you with working code.</p>\n\n<p>We are looking at Super Kool&nbsp;<a href=\"https://github.com/learnboost/kue\">kue</a>&nbsp;by the learnBoost folks to help us process challenges that need to switch status from SUBMISSION to REVIEW. &nbsp; Look at this <a href=\"https://github.com/appirio-tech/lc1-event-service\">repo</a>&nbsp; and grok the readme. &nbsp; It comes with two sets of consumers and produces that will find all the records that need the status changed, make the update &nbsp;(files with 3 prefix). &nbsp; As well as a set that can be used to swap them back (files with 4 prefix) to the SUBMISSION status so you can continue testing.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Requirements</strong>.</p>\n\n<p>1. Refactor the two files with the &#39;3&#39; prefix to follow Node best practices, and remove the interval from the producer since we will schedule it later with Heroku scheduler. &nbsp;Break code into named functions so it can easily be modified or patterned for other workers.<br />\n2. Implement error handling and describe your approach.<br />\n3. That is basically it for the must have requirements, the following are exploratory options to give us a better understanding of capabilities of kue. &nbsp; This is the first of many workers we have planned. &nbsp;The email notification (described above) &nbsp;should come out later this week, so start thinking about that as well.<br />\n4. We would like to know if it make sense for the produces to check for jobs already in the queue before they add them to avoid duplicates? &nbsp; If this is a viable approach implement it, if not support your answer.<br />\n5. &nbsp;The consumer gets an http response when the PUT call is made. &nbsp; Does it make sense to add the job before done() is called? &nbsp; Is this even possible? &nbsp; If it is a sound choice then do it.<br />\n6. &nbsp;My first consumer processed 10 records at a time since it was only writing to the console. &nbsp; I removed this concurrency option since I had to make individual http calls. &nbsp; Is their any advantages to concurrent processing of http calls? &nbsp;Would there be any impact to the challenge-service? &nbsp;Describe or demonstrate you answer.<br />\n7. Describe a retry approach for both record updates and email notification.<br />\n8. We have an option to run these producers and consumer from a new standalone heroku app, or deploy them with our challenge-app as worker dynos. &nbsp;There are pros and cons of each choice. &nbsp; Pick a side and convince us why you are right.</p>\n\n<p>Since the dev challenge service is shared by a number of devleopers you will need to be carefull that others aren&#39;t moving your records around. You may need to color your data to make sure you are the one updateing it. For example in your setters you may add your handle to the title or set the source to your handle. You may also need to modify your getters to get a smaller subset of controlled records. Look at the <a href=\"http://dev-lc1-challenge-service.herokuapp.com/docs/\">swagger docs</a> for the challenge service and pay attention to the filters and fields parmeters.</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30047518",
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "finalSubmissionGuidelines": "<p>1. Submit your src as a single zip file which includes the .git dir<br />\n2. Submit a short video of your solution in action (links to screencast, youtube, dropbox are prefered over video file uploads.) &nbsp;If English is not your first language you are welcome to annotate you video with text over narration.<br />\n3. Submit a detail description of you implementation and recommendation. &nbsp;</p>\n",
  "forumId": 26966,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=26966",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 7,
  "numberOfSubmissions": 2,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2014-12-02T03:00:00.000Z",
      "actualStartTime": "2014-12-02T03:00:00.000Z",
      "scheduledEndTime": "2014-12-04T15:59:00.000Z",
      "actualendTime": "2014-12-04T15:59:00.000Z",
      "_id": "5813205c550dfb3b52b2b790"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-12-02T03:05:00.000Z",
      "actualStartTime": "2014-12-02T03:05:00.000Z",
      "scheduledEndTime": "2014-12-04T16:01:00.000Z",
      "actualendTime": "2014-12-04T16:01:00.000Z",
      "_id": "5813205c550dfb3b52b2b78f"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2014-12-04T16:01:00.000Z",
      "actualStartTime": "2014-12-04T16:01:00.000Z",
      "scheduledEndTime": "2014-12-07T00:19:00.000Z",
      "actualendTime": "2014-12-07T00:19:00.000Z",
      "_id": "5813205c550dfb3b52b2b78e"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2014-12-07T00:19:00.000Z",
      "actualStartTime": "2014-12-07T00:19:00.000Z",
      "scheduledEndTime": "2014-12-08T00:19:00.000Z",
      "actualendTime": "2014-12-08T00:19:00.000Z",
      "_id": "5813205c550dfb3b52b2b78d"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2014-12-08T00:19:00.000Z",
      "actualStartTime": "2014-12-08T00:19:00.000Z",
      "scheduledEndTime": "2014-12-08T12:22:00.000Z",
      "actualendTime": "2014-12-08T12:22:00.000Z",
      "_id": "5813205c550dfb3b52b2b78c"
    }
  ],
  "platforms": [
    "NodeJS"
  ],
  "postingDate": "2014-12-02T03:00:00.000Z",
  "prize": [
    350,
    150
  ],
  "projectId": 7971,
  "registrants": [
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-12-03T01:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b78b"
    },
    {
      "handle": "lovefreya",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T03:24:00.000Z",
      "submissionDate": "2014-12-04T15:52:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b78a"
    },
    {
      "handle": "roarky",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T04:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b789"
    },
    {
      "handle": "renqingwei123",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T04:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b788"
    },
    {
      "handle": "oulric1",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T04:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b787"
    },
    {
      "handle": "kiri4a",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T07:15:00.000Z",
      "submissionDate": "2014-12-04T13:47:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b786"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2014-12-02T19:33:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813205c550dfb3b52b2b785"
    }
  ],
  "registrationEndDate": "2014-12-04T15:59:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2014-12-04T16:01:00.000Z",
  "submissions": [
    {
      "handle": "kiri4a",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 95.63,
      "finalScore": 95.63,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2014-12-04T13:47:00.000Z",
      "_id": "5813205c550dfb3b52b2b792"
    },
    {
      "handle": "lovefreya",
      "placement": 2,
      "screeningScore": null,
      "initialScore": 88.13,
      "finalScore": 89.38,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2014-12-04T15:52:00.000Z",
      "_id": "5813205c550dfb3b52b2b791"
    }
  ],
  "technology": [
    "Node.js",
    "Redis"
  ]
}