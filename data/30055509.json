{
  "_id": 30055509,
  "_isComplete": true,
  "__v": 2596,
  "_lastUpdate": "2016-11-05T11:07:40.309Z",
  "appealsEndDate": "2016-10-27T02:28:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Anemoi - Document Management - Angular 2 UI Unit Testing",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<p><span style=\"color:rgb(255, 0, 0)\"><strong>IMPORTANT NOTE:</strong><br />\n<strong>We found out that members from certain countries are restricted from working on this challenge, due to the client&rsquo;s company policies. Challenge submissions cannot be accepted from members registered in a country with a score of 37 or less according to Transparency International&#39;s Corruption Perception Index 2015.</strong></span></p>\n\n<p><span style=\"color:rgb(255, 0, 0)\"><strong>If your country is highlighted in red in the following sheet your submission WILL NOT be accepted, unfortunately. This is NOT a new Topcoder policy or something that will become a normal part of future challenges. This is an isolated policy and requirement for this specific client and their challenges. Thank you for your understanding.</strong></span><br />\n<u><a href=\"https://docs.google.com/spreadsheets/d/1MFZCGwIqgllzWBJuh2adC_BRCCG4kZwN1m8j4ZgbuLc/edit?usp=sharing\" style=\"background: 0px 0px; text-decoration: none; outline: 0px; cursor: pointer; color: rgb(0, 150, 255); transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word;\">https://drive.google.com/file/d/0B9lpcmurgZ35WlkyWUV2OW9IRjQ/view</a></u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Welcome to the Document Management UI Unit Testing Challenge!</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The goal of this challenge is to improve the unit testing coverage for a desktop rich HTML5 Prototype application using the AngularJS 2 development framework.</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">As part of this challenge you will need to document all unit testing code. We need clear explanation of the code to help us figure all the code functions and make it easier for future developers and the client to understand what you have built.</span></p>\n&nbsp;\n\n<p><strong>IMPORTANT!</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- This application will eventually use a customised version of Bootstrap 3. Exact visual interpretation is less important that a functionally correct and elegant Angular component(s) and other code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Asking questions early and getting Copilot or PM&#39;s feedback is very important for the success of this challenge.</span></p>\n&nbsp;\n\n<p><strong>Source Code</strong></p>\n\n<p><a href=\"https://gitlab.com/anemoi-document-management/anemoi-document-mangement-angular\" style=\"text-decoration:none;\"><u>https://gitlab.com/anemoi-document-management/anemoi-document-mangement-angular</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"> </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Access to the repo is provided in challenge forums.</span></p>\n&nbsp;\n\n<p><strong>Challenge Overview</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The main task of this competition is to develop the unit test(s) for the AngularJS 2 functions / components provided. Your unit tests must run as part of all existing npm / gulp commands. </span></p>\n\n<p>&nbsp;</p>\n\n<p><strong>UI Prototype Page Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Below are the requirements for this challenge. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">\f</span></p>\n\n<p><strong>Challenge Description</strong></p>\n&nbsp;\n\n<p><strong>Component / Code Description</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The &lsquo;models layer&rsquo; for the current Document Management user interface is currently only unit tested indirectly in the application. We would like to be able to add unit testing to provide full coverage of all such calls. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The application has a &lsquo;model layer&rsquo; to represent common models and objects used in the application. Most are simple (just constructors) but two in particular have more complex logic. It is these two which we request unit tests to be created for. </span></p>\n&nbsp;\n\n<p><strong>Angular Setup provided</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Custom cut-down AngularJS 2 application with gulp workflow, Karma / Jasmine / Istanbul unit testing and coverage.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Model layer files, and all other dependent components. </span></p>\n&nbsp;\n\n<p><strong>Development Criteria</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Where applicable, meet criteria specified in General Coding Requirements and Coding Standards at the end of this document. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A corresponding spec file for each of the document-result.model.ts and elastic-query.model.ts files provided:</span></p>\n&nbsp;\n\n<p><strong>&hellip;app/models/</strong></p>\n\n<p><strong>&nbsp;&nbsp; &nbsp;</strong><strong>&nbsp;&nbsp; &nbsp;</strong><strong>document-result.model.ts</strong></p>\n\n<p><strong>&nbsp;&nbsp; &nbsp;</strong><strong>&nbsp;&nbsp; &nbsp;</strong><strong>elastic-query.model.ts</strong></p>\n\n<p style=\"margin-left:72pt\"><strong>document-result.model.spec.ts</strong></p>\n\n<p style=\"margin-left:72pt\"><strong>elastic-query.model.spec.ts</strong></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 112, 192); font-family:arial; font-size:14.6667px\">- Unit testing file for the model for document results returning from ElasticSearch.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(112, 48, 160); font-family:arial; font-size:14.6667px\">- Unit testing file for the model for representing an ElasticSearch query (and population of it). </span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Any required external libraries or assets placed in the assets folder, amending SystemJS, index.html or other relevant files. &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Istanbul to report 100% coverage of these two files. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Unit tests to execute using the following commands:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm start (where the spec file is included in /testsuite file)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm run testsuite &ndash;s (where the spec file is included in /testsuite file)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm test </span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm build</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">\f</span></p>\n\n<p><strong>General Coding Requirements</strong></p>\n&nbsp;\n\n<p><strong>All components (whether generic or route) will be in their own directory, containing html, ts, styl and spec files (see RULE 3 in Coding Standards). </strong></p>\n&nbsp;\n\n<p><strong>.html file - template</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Provide comments on the page elements to give clear explanation of the code usage. The goal is to help future developers understand the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Please use clean INDENTATION for all HTML code so future developers can follow the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All HTML code naming should not have any conflicts or errors.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Element and Attribute names should be in lowercase and use a &quot;-&quot; to separate multiple-word classes (e.g. &quot;main-content&quot;)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use semantically correct tags- use H tags for headers, etc. Use strong and em tags instead of bold and italic tags.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- No inline CSS styles- all styles must be placed in the external css (Stylus) stylesheet. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Validate your code - reviewers may accept minor validation errors, but please comment your reason for any validation errors. Use the validators listed in the scorecard.</span></p>\n&nbsp;\n\n<p><strong>.styl file - styling</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We use Stylus, which is transpiled to CSS within our gulp workflow.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We also use a modified version of Bootstrap 3 for styling. Do not be too concerned about pixel perfect representation &ndash; this will be done by a separate User Experience team. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use CSS3 Media Queries to load different styles for each page and don&#39;t build different page for different device/layout.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Provide comments on the CSS code. We need CSS comments to give a clear explanation of the code usage. The goal is to help future developers understand the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Please use clean INDENTATION for all CSS so developers can follow the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All CSS naming should not have any conflicts.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- As possible use CSS3 style when create all styling.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- You MUST use Stylus &nbsp;to make the CSS code clean, provide source files on your submission.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use CSS to space out objects, not clear/transparent images (GIFs or PNGs) and use proper structural CSS to lay out your page. Only use table tags for tables of data/information and not for page layout.</span></p>\n&nbsp;\n\n<p><strong>.ts file - Typescript</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We use TypeScript for our components / coding in AngularJS 2. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A full list of coding standards is shown at the end of this document. </span></p>\n&nbsp;\n\n<p><strong>.spec file &ndash; Unit testing</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- The spec file must provide full (100%) coverage as reported by Istanbul. </span></p>\n&nbsp;\n\n<p><strong>External Files &ndash; including Javascript libraries</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All external libraries must be loaded according to the instructions set out in DEVNOTES.md.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All JavaScript, images or other must not have a copyright by a third party. You are encouraged to use your own scripts, or scripts that are free, publicly available and do not have copyright statements or author recognition requirements anywhere in the code.</span></p>\n&nbsp;\n\n<p><strong>Desktop Browsers Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Windows &amp; Mac OS</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Mandatory:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- IE11</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Chrome (version 50+)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Optional:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- IE10</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Safari (version 7)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Firefox (version 32)</span></p>\n&nbsp;\n\n<p><strong>Development Framework Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Bootstrap (version 3)</span></p>\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- AngularJS 2.0</span>",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055509",
  "finalSubmissionGuidelines": "<p>Below is an overview of the deliverables:</p>\n\n<ul>\n\t<li>- All updated source code and tests that address the requirements.<br />\n\t-&nbsp;A complete and detailed deployment document explaining how to deploy the application including configuration information.</li>\n</ul>\n\n<h2>Final Submission</h2>\n\n<p>For each member, the final submission should be uploaded via the challenge detail page on&nbsp;<a href=\"http://www.topcoder.com\">topcoder.com</a>.<br />\n<br />\n&nbsp;</p>\n\n<p><strong>Coding Standards:</strong></p>\n&nbsp;\n\n<p><u>RULE 1 - Listen to Paps</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Where possible, adhere to&nbsp;</span><a href=\"https://angular.io/docs/ts/latest/guide/style-guide.html\" style=\"text-decoration: none;\"><u>https://angular.io/docs/ts/latest/guide/style-guide.html</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">If in any doubt of standards to follow, this style guide should provide guidance (unless a rule defined herein overrides it).</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The following rules within this guide are mandatory:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-01: Use upper camel case when naming classes;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-03: Use upper camel case when naming interfaces;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-04: Use lower camel case to name properties and methods;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 05-12: Do use @Input and @Output instead of inputs and outputs properties.</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 2 - Organise imports alphabetically</u></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{addProviders, async, ComponentFixture, inject, TestComponentBuilder} from &#39;@angular/core/testing&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{HTTP_PROVIDERS, Response, ResponseOptions, XHRBackend} from &#39;@angular/http&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{MockBackend, MockConnection} from &#39;@angular/http/testing&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{By} from &#39;@angular/platform-browser&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{ActivatedRoute} from &#39;@angular/router&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{persons} from &#39;../../../data/persons&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{MockActivatedRoute} from &#39;../../../mocks/mock-activated-route&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{Route1DetailComponent} from &#39;./route1-detail.component&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{PersonService} from &#39;../../../services/person-service&#39;;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Order imports alphabetically by t</span><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">he string&nbsp;</span><strong>&#39;@angular/core/testing&#39;</strong><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">&nbsp;and ignore&nbsp;</span><strong>../</strong><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">&nbsp;when&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">ordering.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Also order within t</span><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">he curlies&nbsp;</span><strong>{addProviders, async, ComponentFixture, inject, TestComponentBuilder}</strong></p>\n&nbsp;\n\n<p><u>RULE 3 - Follow our 5 tiered component structure</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Given the following routing ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export const</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">routes:RouterConfig = [</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;{</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;path: &#39;route1&#39;,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;component: Route1Component,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;children: [</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{path: &#39;:id&#39;, component: Route1DetailComponent},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{path: &#39;&#39;, component: Route1ListComponent}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;{path: &#39;route2&#39;, component: Route2Component}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">];</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We require the following component&nbsp;</span><strong>folder</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;structure.</span></p>\n\n<p><strong>- routes</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- route1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1.component.ts|html|styl|spec (</span><strong>parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- detail</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail.component.ts|html|styl|spec (</span><strong>child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:108pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:144pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:108pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:144pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- list</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-list.component.ts|html|styl|spec (</span><strong>child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- route2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route2.component.ts|html|styl|spec (</span><strong>parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We also employ the following component folder structure in respect of reusable components.</span></p>\n\n<p><strong>- apponents</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- apponent1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1.component.ts|html|styl|spec (</span><strong>apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- apponent2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent2.component.ts|html|styl|spec (</span><strong>apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><strong>- components</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- my-component1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1.component.ts|html|styl|spec (</span><strong>reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- my-component2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component2.component.ts|html|styl|spec (</span><strong>reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">This structure reveals a 5 tiered component approach.</span></p>\n\n<p><strong>- parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a non-reusable parent routing component.</span></p>\n\n<p><strong>- child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a non-reusable child routing component. These components are always nested within their parent.</span></p>\n\n<p><strong>- apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that offers application level reuse.</span></p>\n\n<p><strong>- reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that offers total reuse. Total reuse is defined as the level of reuse which would permit a component to form part of a public library.</span></p>\n\n<p><strong>- partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that comprises part of another component. Used for organisational purposes. These components are always nested within their owning component.</span></p>\n&nbsp;\n\n<p><u>RULE 4 - Data requests must be made in child components</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Child components must make ALL data requests (eg HTTP requests) with 3 limited exceptions.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A parent component may make a data request if it has no children.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A partial component owned by a child component may make a data request.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- An apponent or reusable component should normally receive data as Angular2&nbsp;</span><strong>@Input</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- this approach makes the component generic thereby extending reuse cases. There could however be a use case for making data requests here. For instance, consider a weather component. This may make a call to a public weather API and render the results accordingly. The API call here closely maps to the fundamental purpose of the component. A proposal for making a data request from an apponent or reusable component should be referred to project lead. One must consider whether public APIs are accessible in the production environment.</span></p>\n&nbsp;\n\n<p><u>RULE 5 - Use RxJS Observables NOT promises</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">These support streaming and binding. For instance, you can use RxJS Observables to bind to a URL param.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">When the URL param changes, the relevant parts of the view are updated without the need to completely recompile. This affords great speed rewards.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">RxJS Observables are harder to get your head around but are worth the pain. An RxJS Observable can be thought of as a stream of promises. The&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method (equivalent to a promises&nbsp;</span><strong>.then()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method) is potentially called many times, every time an event trickles down the stream.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export class</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">Route1DetailComponent implements</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">OnInit {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">DEFAULT_ID:number = 1;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">person:Person;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;constructor(public</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">route:ActivatedRoute, private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">personService:PersonService) {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;ngOnInit() {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;let paramsStream = this.route.params</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.map((params) =&gt; parseInt(params[&#39;id&#39;], 10))</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.map((id) =&gt; !isNaN(id) ? id : this.DEFAULT_ID);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// We use flatMap instead of map to prevent this stream being a metastream - i.e. stream of streams</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;let responseStream = paramsStream.flatMap((id) =&gt; {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let personStream = this.personService.getPerson(id);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">personStream;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;}).publish().refCount();</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;responseStream.subscribe((person:Person) =&gt; {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(person);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.person = person;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(err) =&gt; console.error(&#39;oops&#39;, err)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">}</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">RxJS is reactive programming. Reactive programming means reacting to events emitted from streams.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">To understand RxJS you must understand streams. A stream is a sequence just like an array. The one difference is that arrays are stored in memory. Streams are time based.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Please read this&nbsp;</span><a href=\"https://gist.github.com/staltz/868e7e9bc2a7b8c1f754#reactive-programming-is-programming-with-asynchronous-data-streams\" style=\"text-decoration: none;\"><u>RxJS tutorial</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp; FROM the heading&nbsp;</span><strong>Reactive programming is programming with asynchronous data streams</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp; TO the text that says&nbsp;</span><strong>Since this feels so familiar already</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In particular all developers must be conversant with ASCII stream diagrams from reading this tutorial.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Now discussing the above code ..</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">An RxJS Observable is a stream and has a&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method (just like promises have a&nbsp;</span><strong>.then()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Our first stream is&nbsp;</span><strong>paramsStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;which is a stream of URL params and looks like ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">` paramsStream ------- {id:10} -------- {id:7} ------ {id:&#39;x&#39;} -------------- {id:20} -------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We can&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;a stream exactly as we&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;an array. Our two&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;calls give ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .map() ------- 10</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------- 7</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">----------- NaN ------------------- 20</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------&gt;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .map() ------- 10</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------- 7</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">----------- 1</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">--------------------- 20</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We now want to use the ID numbers being emitted from this stream to make API calls using&nbsp;</span><strong>personService.getPerson(id)</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The problem is that&nbsp;</span><strong>personService.getPerson(id)</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;returns a stream. Do we want&nbsp;</span><strong>responseStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to be a metastream viz a stream of streams? NO</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">If&nbsp;</span><strong>responseStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;was a metastream it would emit streams but we want it to emit API responses.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">To overcome this issue we simply use&nbsp;</span><strong>.flatMap()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;instead of&nbsp;</span><strong>.map()</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Assuming that there is no person with ID 7 being served up by our API, we end up with ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">responseStream ------- person10 ------- undefined --- person1 --------------- person20 ------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We can&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to any of our streams with ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">stream.subscribe(successFunc, errorFunc);</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Compare that with promises.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">promise.then(successFunc, errorFunc);</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">No wonder we liken RxJS Observables to streaming promises!</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">As a team we will refer to RxJS Observables as streams.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Please use RxJS wherever possible and try to think with a reactive mindset.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 6 - Skinny controller, phat model</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Controller code should be minimal and high level. A developer should be able to glance at controller code and know what it is doing immediately.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Data requests and heavy data processing should take place in an Angular2 service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 7 - Model transform</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">A models folder provides classes for converting, for example, API responses to TypeScript objects.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">An overarching class should be used to store JSON responses. That class should then provide methods for returning refined / massaged results.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The preferred TypeScript approach here is use of the&nbsp;</span><a href=\"https://www.typescriptlang.org/play/#src=%2F%2F%20Interface%20Segregation%20Principle%20(ISP)%0D%0A%2F%2F%20http%3A%2F%2Fwww.oodesign.com%2Finterface-segregation-principle.html%0D%0A%0D%0A%2F%2F%20i-aged.ts%0D%0Ainterface%20IAged%20%7B%0D%0A%20%20%20%20id%3Anumber%3B%0D%0A%09name%3Astring%3B\" style=\"text-decoration: none;\"><u>Interface Segregation Principle and Type Casting</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Don&#39;t forget John Papa and his Rule of One!</span></p>\n&nbsp;\n\n<p><u>RULE 8 - Use&nbsp;trackBy for iterators</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">When using *ngFor if you do not use trackBy then any changes to the list will cause all list DOM items to be reloaded. trackBy introduces intelligence, allowing Angular2 to only update those DOM elements bound to updated list items.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&lt;div *ngFor=&quot;let person of persons; trackBy:myTrackingFunction&quot;&gt; //&nbsp;</span><strong>essential practice</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&lt;div *ngFor=&quot;let person of persons&quot;&gt; //&nbsp;</span><strong>extremely inefficient</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">For more see&nbsp;</span><a href=\"about:blank\" style=\"text-decoration: none;\"><u>https://angular.io/docs/ts/latest/guide/template-syntax.html#!#ngfortrackby</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 9 - Naming conventions</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">class names use .. PascalCase AKA UpperCamelCase</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">function names use .. camelCase</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">filenames use .. spinal-case AKA kebab-case in conjunction with Papa John&#39;s feature.type.ext</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial1.component.ts|html|styl|spec</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-http.service.ts</span></p>\n\n<p><strong>These naming conventions can AND WILL BE enforced by the TypeScript compiler!</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 10 - Template and Styles</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Components can have an inline or external template and / or styles.</span></p>\n\n<p><strong>External is preferred</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;but inline may be used where there are&nbsp;</span><strong>3 or less</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;lines of HTML or CSS.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Inline CSS must be pure CSS, inline Stylus is not supported.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">@Component({</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;template: `&lt;section class=&quot;greeting&quot;&gt;hello&lt;/section&gt;`,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;styles: [`section.greeting { color:red }`]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">})</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">External is de facto. External stylesheets may be written in Stylus. The styleUrls property must reference the .css extension.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">@Component({</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;templateUrl: &#39;route1-detail.component.html&#39;,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;styleUrls: [&#39;route1-detail.component.css&#39;]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">})</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The /templates folder provides two template components, one using an external template, the other uses inline.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Copy and paste these as appropriate when creating a new component.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 11 - Unit testing</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">All components must have a .spec.ts file containing unit tests.</span></p>\n\n<p><u>RULE 13 - NEVER import &#39;rxjs/Rx&#39;</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Importing &#39;rxjs/Rx&#39;&nbsp;imports the entire RxJS library, which is massive, and kills performance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">A developer must never do this. Rather import only the RxJS operators you need with ..</span><u>?</u></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&#39;rxjs/add/operator/catch&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&#39;rxjs/add/operator/publish&#39;;</span></p>\n</div>\n&nbsp;\n\n<p><u>RULE 14 - Understand providers and make them available at the right hierarchical level</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In Angular1 each service provider provides a singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In Angular2 each service provider provides a singleton instance BUT there can be numerous service providers at different hierarchical levels for the same service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The following diagrams depict this.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"><img src=\"https://lh5.googleusercontent.com/8FCFYIYpXZ3RbrnjMFp3dzvj0Cmm7GUOtarzBwNd4LrqMXK1CEcsmRMb3rwTfZOSBqUPa71-aO6-2xhUMN19tSSa4gDh20GhvYbeJLVH8ObU9RXiMWluKG6G6fNI3VGEDmsZFbFS5g73dXV7rg\" style=\"border:none; height:122px; transform:rotate(0rad); width:624px\" /></span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Here the parent component provides a singleton instance to itself and all descendant components.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">All components share the same singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"><img src=\"https://lh6.googleusercontent.com/u1ymixOZ921KgwSaLS27vl56VTt4w93fIG_3JV6dr4Ynglu1DMdXNgyVwHog9yBNkEmC62BSZhbKcoozf4ow0t6VjDp1lBMtu7eE0KJr7sX2R6AlL934uFtGXsDiKFGaJ2u-Y4Hzj6p0JlQvVg\" style=\"border:none; height:122px; transform:rotate(0rad); width:624px\" /></span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Here the parent component, as before, provides a singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">However, child 2 component provides a different singleton instance to itself and its descendants.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Different components have access to a different singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Because of this behavior within Angular2 we require that</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Providers for stateless services be defined at any hierarchical level.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Providers for stateful services be defined in the top level parent component only.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Stateful services be avoided wherever possible. Please consult a team lead before developing a stateful service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 15 - Minimal constructor logic use ngOnInit</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Angular2 docs advise to put minimal logic in the constructor.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export class</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">MyClass implements</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">OnInit {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;constructor(private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">myApiService:MyApiService) {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;ngOnInit() {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// Do initialisation here</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// For example, API calls needed to render the page via MyApiService</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">}</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">This, as well as complying with Angular2 advice, gives us more control when unit testing since we can call ngOnInit() when we want.</span></p>\n\n<p>&nbsp;</p>\n\n<p><u>RULE 16 - Component to component comms</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Where two components exist on the same page they should communicate via a service. The service should expose an&nbsp;</span><a href=\"https://embed.plnkr.co/HWE3sR/preview\" style=\"text-decoration: none;\"><u>Rx.Subject()</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to facilitate comms.</span></p>\n\n<div>&nbsp;</div>\n",
  "forumId": 34305,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34305",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 31,
  "numberOfSubmissions": 0,
  "postingDate": "2016-10-18T14:29:00.000Z",
  "projectId": 11090,
  "registrationEndDate": "2016-10-23T14:28:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-10-23T14:28:00.000Z",
  "submissions": [],
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2016-10-18T14:29:00.000Z",
      "actualStartTime": "2016-10-18T14:29:00.000Z",
      "scheduledEndTime": "2016-10-23T14:28:00.000Z",
      "actualendTime": "2016-10-23T14:28:00.000Z",
      "_id": "581dbd7c550dfb3b52be53b6"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2016-10-18T14:34:00.000Z",
      "actualStartTime": "2016-10-18T14:34:00.000Z",
      "scheduledEndTime": "2016-10-23T14:28:00.000Z",
      "actualendTime": "2016-10-23T14:28:00.000Z",
      "_id": "581dbd7c550dfb3b52be53b5"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2016-10-23T14:28:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-10-25T14:28:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7c550dfb3b52be53b4"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2016-10-25T14:28:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-10-26T14:28:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7c550dfb3b52be53b3"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2016-10-26T14:28:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2016-10-27T02:28:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7c550dfb3b52be53b2"
    }
  ],
  "registrants": [
    {
      "handle": "Sky_",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T14:35:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53b1"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T14:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53b0"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T15:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53af"
    },
    {
      "handle": "ananthhh",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T16:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53ae"
    },
    {
      "handle": "ShindouHikaru",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T16:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53ad"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T17:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53ac"
    },
    {
      "handle": "Zarus",
      "reliability": "n/a",
      "registrationDate": "2016-10-18T20:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53ab"
    },
    {
      "handle": "vmudimu",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T01:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53aa"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T01:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a9"
    },
    {
      "handle": "diogenesjcs",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T01:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a8"
    },
    {
      "handle": "g.prog",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T02:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a7"
    },
    {
      "handle": "cairi",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T03:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a6"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T03:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a5"
    },
    {
      "handle": "code_now",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T03:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a4"
    },
    {
      "handle": "gjw99",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T04:02:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a3"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T05:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a2"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T09:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a1"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T11:59:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be53a0"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T17:02:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539f"
    },
    {
      "handle": "Colinh84",
      "reliability": "n/a",
      "registrationDate": "2016-10-19T19:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539e"
    },
    {
      "handle": "Gando19850304",
      "reliability": "n/a",
      "registrationDate": "2016-10-20T01:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539d"
    },
    {
      "handle": "Cloud_Buster",
      "reliability": "n/a",
      "registrationDate": "2016-10-20T07:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539c"
    },
    {
      "handle": "penpo",
      "reliability": "n/a",
      "registrationDate": "2016-10-20T11:03:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539b"
    },
    {
      "handle": "narasimha.dvnr",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T02:09:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be539a"
    },
    {
      "handle": "googlesmkm",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T02:33:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5399"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T04:03:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5398"
    },
    {
      "handle": "cam.ashwini",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T06:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5397"
    },
    {
      "handle": "vinoh",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T09:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5396"
    },
    {
      "handle": "seb.ilea",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T12:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5395"
    },
    {
      "handle": "btgd88",
      "reliability": "n/a",
      "registrationDate": "2016-10-21T15:11:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5394"
    },
    {
      "handle": "z.kewal",
      "reliability": "n/a",
      "registrationDate": "2016-10-23T05:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7c550dfb3b52be5393"
    }
  ],
  "event": {},
  "prize": [
    1200,
    600
  ],
  "technology": [
    "Angular.js",
    "CSS",
    "HTML",
    "JavaScript"
  ],
  "platforms": [
    "Other"
  ]
}