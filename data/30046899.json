{
  "_id": 30046899,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T10:32:47.766Z",
  "appealsEndDate": "2014-11-11T09:04:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "UNI - Sales Portal iPad iOS Swift Account Phases prototype - realworldswift",
  "challengeType": "Assembly Competition",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p><strong>Project Overview</strong></p>\n\n<p>Our partner is developing a state-of-the-art tablet based sales and order processing tool. Their sales team will be managing client visits, tasks, calendars, notifications, and order processing all through this tool. The platform is the Apple iPad. Want to learn Swift? Great - why not get paid for it, we need your help! There will be a long series of challenges over the coming weeks leading to the final product, so get involved now!</p>\n\n<p><strong>Setup</strong></p>\n\n<p>In order to obtain the code source to modify for this challenge, you will need to be added to the UNI-Mobile github repository. Make a request for access in the forums.</p>\n\n<p>This contest will <strong>not</strong> require you to do any direct work with the Salesforce Mobile SDK, but it is a required element of the overall application. As such you will need to be able to login to Salesforce the first time you run the application in order to access the other components of the application. The credentials are as follows:</p>\n\n<ul>\n\t<li>Username\n\t<ul>\n\t\t<li><a href=\"mailto:uniapi@tc.com\">uniapi@tc.com</a></li>\n\t</ul>\n\t</li>\n\t<li>Password\n\t<ul>\n\t\t<li>newuser@123</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Again, <strong>you will not be required to utilize the Salesforce Mobile SDK for any of the customization you are doing in this challenge. </strong>But the application leverages it, so logging in is essential.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Contest Requirements</strong></p>\n\n<p>For this challenge you will be required to build out the AccountViewController screen for this application. This is the screen that will supply information about the accounts and any related objects. There are 4 major components to this screen, as detailed in the sections below.</p>\n\n<p>&nbsp;</p>\n\n<p><em>The Account Header</em></p>\n\n<p>This header is a pretty major departure from the headers on all other screens of the application. Please ensure that it is built to match the mockup, and fulfills the following requirements:</p>\n\n<ul>\n\t<li>The header should respond to the change in available space when the Global Menu goes between ICONS_ONLY and FULLY_CLOSED states.\n\t<ul>\n\t\t<li>When this occurs have the spacing between the 5 action buttons be reduced.</li>\n\t\t<li>Maintain equal spacing between the action buttons</li>\n\t\t<li>The total space reduction when in ICONS_ONLY is a difference of 38 pts.</li>\n\t</ul>\n\t</li>\n\t<li>The data depicted within the header should come from an instance of the Account model object.\n\t<ul>\n\t\t<li>Account.name should go where &ldquo;Samual Adams Brewing Company, LTD&rdquo; is in the mockup.</li>\n\t\t<li>The quick info line below the name is composed of the&rdquo; Account.incumbent | (Account.ced1 or &ldquo;No CED&rdquo;) | Account.Industry&rdquo;</li>\n\t\t<li>Address Line 1 + Suite Number + Phone Number should be displayed on two or three lines depending on the existence of a Suite #.\n\t\t<ul>\n\t\t\t<li>Vertically center the text here</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>The 5 action buttons should be displayed as Buttons without text, but with images\n\t\t<ul>\n\t\t\t<li>When the Phone icon is tapped display an alert that says &ldquo;Now Calling - \\(Account Phone Number)&rdquo;</li>\n\t\t\t<li>When the Map icon is tapped, pull up a ModalViewController with the Account.name as the title, and a content area that is a UIWebView pointed at the URL &ldquo;<a href=\"http://www.salesforce.com\">http://www.salesforce.com</a>&rdquo;</li>\n\t\t\t<li>When the Computer Monitor icon is tapped, pull up a ModalViewController with the Account.name as the title, and a content area that is a UIWebView pointed at the Account.website URL.</li>\n\t\t\t<li>When the LinkedIn icon is tapped, pull up a ModalViewController with the Account.name as the title, and a content area that is a UIWebView pointed at the URL &ldquo;<a href=\"http://www.linkedin.com\">http://www.linkedin.com</a>&rdquo;</li>\n\t\t\t<li>When the Google+ icon is tapped, pull up a ModalViewController with the Account.name as the title, and a content area that is a UIWebView pointed at the URL &ldquo;https://www.google.com/#q=\\(Account.name)&rdquo;\n\t\t\t<ul>\n\t\t\t\t<li>When populating the Google URL please properly URL Encode the Account name by using &ldquo;.stringByAddingPercentEncodingWithAllowedCharacters(.URLHostAllowedCharacterSet()&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><em>The Left Sidebar</em></p>\n\n<p>This sidebar is different from the other left-hand sidebars that are contained within the application in that it cannot be closed. But there are some new elements that need to be built to satisfy the requirements of this challenge. Please create a static sidebar element that fulfills these requirements:</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li>There are two sub-sections that need to be built with a modified form of LeftTableViewController&rsquo;s LeftTableCell.\n\t<ul>\n\t\t<li>The Account Phase Table\n\t\t<ul>\n\t\t\t<li>This should have a different Title depending on the Account.stage.\n\t\t\t<ul>\n\t\t\t\t<li>Approach</li>\n\t\t\t\t<li>Discovery</li>\n\t\t\t\t<li>Present/Close</li>\n\t\t\t\t<li>Install Prep</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>The following items should use the standard LeftTableCell for display, and bring up a ModalViewController when tapped. They will appear regardless of the Account.stage\n\t\t\t<ul>\n\t\t\t\t<li>Create Quote</li>\n\t\t\t\t<li>Sales Tools</li>\n\t\t\t\t<li>Presentations</li>\n\t\t\t\t<li>N.A. Materials</li>\n\t\t\t\t<li>Large Account Planning</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>The following items should appear according to the Account.stage value. They should be rendered as a grey version of the LeftTableCell, and always at the top of the Account Phase table. When tapped they should bring up a ModalViewController.\n\t\t\t<ul>\n\t\t\t\t<li>Approach\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Closest Customer</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li>Discovery\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Discovery Worksheet</li>\n\t\t\t\t\t<li>Site Assessment</li>\n\t\t\t\t\t<li>Closest Customer</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li>Present/Close\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Transition Schedule</li>\n\t\t\t\t\t<li>Closest Customer</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li>Install Prep\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Transition Schedule</li>\n\t\t\t\t\t<li>Install Roadmap</li>\n\t\t\t\t\t<li>Pre-Install Meeting</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>The Checklist Table\n\t\t<ul>\n\t\t\t<li>This will have the same items regardless of phase.</li>\n\t\t\t<li>The elements here should be white like the LeftTableCell, but should be configurable to have checkmarks display in them.</li>\n\t\t\t<li>For the purposes of this prototype, when a user has tapped to view these documents, set them to checked. Never uncheck them.</li>\n\t\t\t<li>These items, regardless of whether they are checked or not, should display a ModalViewController when tapped.</li>\n\t\t\t<li>These items are:\n\t\t\t<ul>\n\t\t\t\t<li>Credit Check</li>\n\t\t\t\t<li>Soil Evaluation</li>\n\t\t\t\t<li>Emblem</li>\n\t\t\t\t<li>Service Agreement</li>\n\t\t\t\t<li>Fit Session</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><em>The Right Sidebar</em></p>\n\n<p>There are two components to the right side bar. A simple button that says &ldquo;Take Next Steps&rdquo;, which is a bright blue color, and displays a ModalViewController when tapped. The other component is the &ldquo;Know, Say, Show&rdquo; accordion and it should work as follows:</p>\n\n<ul>\n\t<li>These will function as an accordion-style UI element.</li>\n\t<li>Section titles are displayed as horizontal bars with the Slate color when in the inactive state.</li>\n\t<li>When the section headers should show this behavior:\n\t<ul>\n\t\t<li>Initially the background should fade to red.</li>\n\t\t<li>Once fully red, the tapped item has become active, the background should then fade to white, and the text to Red.</li>\n\t\t<li>If the new item is below the previously active item\n\t\t<ul>\n\t\t\t<li>In approximately half a second, the Active Item should slide itself, and the items stacked prior to it to the top of the container.\n\t\t\t<ul>\n\t\t\t\t<li>If items are already stacked at the top of the container, do not animate those items.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>If the new item is above the previously active item.\n\t\t<ul>\n\t\t\t<li>The previously active item should slide down to the lowest extent that it can.\n\t\t\t<ul>\n\t\t\t\t<li>Its bottom edge should meet the top of the item below it in the list.</li>\n\t\t\t\t<li>If there is no item below it in the list, it should line up with the bottom of the container.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>While the Slide animations occur, the internal container of the previously active Accordion Section should be hidden, while the new one is revealed beneath the new active header.</li>\n\t\t<li>Simultaneously to this animation process, the previously active header should fade from white background to the slate-colored background, and its text from red to white.</li>\n\t</ul>\n\t</li>\n\t<li>Each section header should be associated with an internal content area that represents its content.\n\t<ul>\n\t\t<li>When not active, the internal content area of that section should not be rendered, and should not receive any tap gestures or selections.</li>\n\t\t<li>Each content section will be a TableView of links.\n\t\t<ul>\n\t\t\t<li>These links may be one or more lines of text. Adjust their sizing accordingly to fit all the text.</li>\n\t\t\t<li>When any item in a central content area is tapped a ModalViewController should slide up from the bottom of the screen.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>The three sections inside this accordion should be as follows:\n\t<ul>\n\t\t<li>Know</li>\n\t\t<li>Say</li>\n\t\t<li>Show</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Because the next section of the application will also be utilizing the Accordion View standard, please write this as a resusable and configurable View Controller that accepts multiple sections, and a specified ViewController for each section.</p>\n\n<p>&nbsp;</p>\n\n<p><em>The Central Accordion</em></p>\n\n<p>The Central Content area of the Account screens should be an accordion, that functions much like the one described in the &ldquo;Know, Say, Show&rdquo; section of the right sidebar. Please make it function as follows:</p>\n\n<ul>\n\t<li>Section titles are displayed as horizontal bars with the Slate color when in the inactive state.</li>\n\t<li>When the section headers should show this behavior:\n\t<ul>\n\t\t<li>Initially the background should fade to red.</li>\n\t\t<li>Once fully red, the tapped item has become active, the background should then fade to white, and the text to Red.</li>\n\t\t<li>Simultaneous to this, the Active Header should expand to the active header size shown in the mockups.\n\t\t<ul>\n\t\t\t<li>Please make the Active Header size configurable when setting up the accordion view.</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>If the new item is below the previously active item\n\t\t<ul>\n\t\t\t<li>In approximately half a second, the Active Item should slide itself, and the items stacked prior to it to the top of the container.\n\t\t\t<ul>\n\t\t\t\t<li>If items are already stacked at the top of the container, do not animate those items.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>If the new item is above the previously active item.\n\t\t<ul>\n\t\t\t<li>The previously active item should slide down to the lowest extent that it can.\n\t\t\t<ul>\n\t\t\t\t<li>Its bottom edge should meet the top of the item below it in the list.</li>\n\t\t\t\t<li>If there is no item below it in the list, it should line up with the bottom of the container.</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>While the Slide animations occur, the internal container of the previously active Accordion Section should be hidden, while the new one is revealed beneath the new active header.</li>\n\t\t<li>Simultaneously to this animation process, the previously active header should fade from white background to the slate-colored background, and its text from red to white. It should also shrink to the standard inactive header size.</li>\n\t</ul>\n\t</li>\n\t<li>Each section header should be associated with an internal content area that represents its content.\n\t<ul>\n\t\t<li>When not active, the internal content area of that section should not be rendered, and should not receive any tap gestures or selections.</li>\n\t\t<li>Each content section should be its own custom view controller.</li>\n\t</ul>\n\t</li>\n\t<li>The sections inside this accordion should be as follows:\n\t<ul>\n\t\t<li>Account Info\n\t\t<ul>\n\t\t\t<li>Account Info View Controller</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Contacts\n\t\t<ul>\n\t\t\t<li>SampleViewControllerWithLabel\n\t\t\t<ul>\n\t\t\t\t<li>Should say &ldquo;Contacts&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Notes &amp; Attachments\n\t\t<ul>\n\t\t\t<li>SampleViewControllerWithLabel\n\t\t\t<ul>\n\t\t\t\t<li>Should say &ldquo;Notes &amp; Attachments&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Activities\n\t\t<ul>\n\t\t\t<li>SampleViewControllerWithLabel\n\t\t\t<ul>\n\t\t\t\t<li>Should say &ldquo;Activities&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Opportunities &amp; Quotes\n\t\t<ul>\n\t\t\t<li>SampleViewControllerWithLabel\n\t\t\t<ul>\n\t\t\t\t<li>Should say &ldquo;Opportunities &amp; Quotes&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>If the view controllers within the Accordion Sections would be longer than the available viewing area, they should scroll within the Accordion Section.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><em>Account Info View Controller</em></p>\n\n<p>Please also build out the AccountInfoViewController that will be displayed in the Account Info accordion section. It should match the design in the Mockup, and should display fields based on the Account object. Note: Fields displayed here are subject to change, and may not all be available at this time. If they are not on the associate object, add a property to Account.swift</p>\n\n<p>&nbsp;</p>\n\n<p>Please ensure that this View Controller meets the following requirements:</p>\n\n<ul>\n\t<li>Display each field with a Field Name header, and then the value of that field beneath it.\n\t<ul>\n\t\t<li>E.G.,<br />\n\t\t<em>Account</em></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p style=\"margin-left:1.0in\">Samual Adams Brewing Co<br />\nAcme Account Alias</p>\n\n<ul>\n\t<li>Display the following fields, matching the layout and design of the mockup:\n\t<ul>\n\t\t<li>General Information section\n\t\t<ul>\n\t\t\t<li>Account\n\t\t\t<ul>\n\t\t\t\t<li>Account.name</li>\n\t\t\t\t<li>Account.alias</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Phone\n\t\t\t<ul>\n\t\t\t\t<li>Account.phone</li>\n\t\t\t\t<li>This should highlight valid phone numbers, and when tapped should display an alert saying &ldquo;Now Calling \\(Account.phone)&rdquo;</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Address\n\t\t\t<ul>\n\t\t\t\t<li>Address</li>\n\t\t\t\t<li>Suite #</li>\n\t\t\t\t<li>City, State ZipCode</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Lower Section (no name)\n\t\t<ul>\n\t\t\t<li>Est. Value\n\t\t\t<ul>\n\t\t\t\t<li>Account.estimatedCashValue</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Program Type\n\t\t\t<ul>\n\t\t\t\t<li>Account.programType1</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Last Activity\n\t\t\t<ul>\n\t\t\t\t<li>Account.lastActivity</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>CED1\n\t\t\t<ul>\n\t\t\t\t<li>Account.ced1</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>CED Secondary\n\t\t\t<ul>\n\t\t\t\t<li>Account.ced2</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Agreement Name\n\t\t\t<ul>\n\t\t\t\t<li>Account.agreementName</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Total Employees\n\t\t\t<ul>\n\t\t\t\t<li>Account.gkEmployeesHere</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li># of Wearers\n\t\t\t<ul>\n\t\t\t\t<li>Account.numberOfWearers</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Mega Segment\n\t\t\t<ul>\n\t\t\t\t<li>Account.segment</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Location Type\n\t\t\t<ul>\n\t\t\t\t<li>Account.locationType</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li># of Locations\n\t\t\t<ul>\n\t\t\t\t<li>Account.numberOfLocations</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Date Quit\n\t\t\t<ul>\n\t\t\t\t<li>Account.quitDate</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>Quit Reason\n\t\t\t<ul>\n\t\t\t\t<li>Account.quitReason</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>General Guidelines</strong></p>\n\n<p>This is an iOS Swift Challenge, as such the design implementation should be done with the latest version of XCode and the latest standards for iOS Development.</p>\n\n<p>Interface items should be built in Interface Builder. Elements within the interface should be positioned and sized using standard UIConstraints. Wherever possible, elements should be customized within interface builder, with little&shy;to&shy;no interface customization done programmatically. If there is no other possible way to achieve the aesthetic as presented in our design PDF, or if there would be significant performance detriment by not customizing via code, programmatic customization is acceptable.</p>\n\n<p>The views within ViewControllers should be created with their own XIB files. Elements within the design (such as the sidebar) should be built with re&shy;use in mind.</p>\n\n<p>With multi&shy;language support being an eventual goal of this project, please populate static labels from the Settings.bundle &gt; en.lproj &gt; Root.strings file. When you create a static label, make sure to add it to this file.</p>\n\n<p>Please make sure any colors used match the brand value in &quot;G k brand hex values.png&quot;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Environment Setup</strong></p>\n\n<p>GIT: The project will use a code repository at Github, please see additional details and participant responsibilities under Submission Guidelines.</p>\n\n<p>Xcode: All code development should be done in Xcode 6.1 and tested in the simulator.</p>\n\n<p>Framework: Code should be developed with the Cocoa Touch framework using Swift and must compile against iOS SDK 8.0 with a deployment target of iOS 7.0.</p>\n\n<p>&nbsp;</p>\n\n<p><u>Get Started</u></p>\n\n<p>- Request access to the project in the challenge forums</p>\n\n<p>- Fork this project: git@github.com:cloudspokes/UNI-mobile.git</p>\n\n<p>- Checkout this branch: https://github.com/cloudspokes/UNI-mobile/tree/homepage-assembly-challenge</p>\n\n<p>- Write and submit your code as a zip file</p>\n",
  "digitalRunPoints": 450,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30046899",
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "finalFixEndDate": "2014-11-11T22:53:00.000Z",
  "finalSubmissionGuidelines": "<p><u>Submission Guidelines</u></p>\n\n<p>- Cocoa Touch framework Xcode 6.1 project with well commented code</p>\n\n<p>- Code must compile against iOS SDK 8.1 with a deployment target of iOS 7.0</p>\n\n<p>- Upload all source projects as a zip</p>\n\n<p>- Provide deployment guide documentation to run your code.</p>\n\n<p>&nbsp;</p>\n\n<p><u>GIT Guidelines and Requirements</u></p>\n\n<p>All code for this project will be maintained at Github. Challenge participants will have to request read-only access to the repository during the challenge and are expected to fork and do their coding on the challenge branch. Once contest submission closes, the project owner will update the code in the challenge branch to reflect the current state of development. The winner of the challenge will then be required to update their fork to the current state of the development repository and will be responsible for handling merge conflicts when updating their fork. They will then create a pull request.</p>\n",
  "forumId": 26436,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=26436",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 17,
  "numberOfSubmissions": 1,
  "phases": [
    {
      "type": "Specification Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-11-03T05:13:00.000Z",
      "actualStartTime": "2014-11-03T05:13:00.000Z",
      "scheduledEndTime": "2014-11-03T05:14:00.000Z",
      "actualendTime": "2014-11-03T05:14:00.000Z",
      "_id": "5813294f550dfb3b52b619a0"
    },
    {
      "type": "Specification Review",
      "status": "Closed",
      "scheduledStartTime": "2014-11-03T05:14:00.000Z",
      "actualStartTime": "2014-11-03T05:14:00.000Z",
      "scheduledEndTime": "2014-11-03T06:38:00.000Z",
      "actualendTime": "2014-11-03T06:38:00.000Z",
      "_id": "5813294f550dfb3b52b6199f"
    },
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2014-11-03T06:38:00.000Z",
      "actualStartTime": "2014-11-03T06:38:00.000Z",
      "scheduledEndTime": "2014-11-05T06:38:00.000Z",
      "actualendTime": "2014-11-05T06:38:00.000Z",
      "_id": "5813294f550dfb3b52b6199e"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2014-11-03T06:44:00.000Z",
      "actualStartTime": "2014-11-03T06:44:00.000Z",
      "scheduledEndTime": "2014-11-09T06:39:00.000Z",
      "actualendTime": "2014-11-09T06:39:00.000Z",
      "_id": "5813294f550dfb3b52b6199d"
    },
    {
      "type": "Screening",
      "status": "Closed",
      "scheduledStartTime": "2014-11-09T06:39:00.000Z",
      "actualStartTime": "2014-11-09T06:39:00.000Z",
      "scheduledEndTime": "2014-11-09T10:10:00.000Z",
      "actualendTime": "2014-11-09T10:10:00.000Z",
      "_id": "5813294f550dfb3b52b6199c"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2014-11-09T10:10:00.000Z",
      "actualStartTime": "2014-11-09T10:10:00.000Z",
      "scheduledEndTime": "2014-11-10T09:04:00.000Z",
      "actualendTime": "2014-11-10T09:04:00.000Z",
      "_id": "5813294f550dfb3b52b6199b"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2014-11-10T09:04:00.000Z",
      "actualStartTime": "2014-11-10T09:04:00.000Z",
      "scheduledEndTime": "2014-11-11T09:04:00.000Z",
      "actualendTime": "2014-11-11T09:04:00.000Z",
      "_id": "5813294f550dfb3b52b6199a"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2014-11-11T09:04:00.000Z",
      "actualStartTime": "2014-11-11T09:04:00.000Z",
      "scheduledEndTime": "2014-11-11T09:04:00.000Z",
      "actualendTime": "2014-11-11T09:04:00.000Z",
      "_id": "5813294f550dfb3b52b61999"
    },
    {
      "type": "Aggregation",
      "status": "Closed",
      "scheduledStartTime": "2014-11-11T09:04:00.000Z",
      "actualStartTime": "2014-11-11T09:04:00.000Z",
      "scheduledEndTime": "2014-11-11T10:25:00.000Z",
      "actualendTime": "2014-11-11T10:25:00.000Z",
      "_id": "5813294f550dfb3b52b61998"
    },
    {
      "type": "Final Fix",
      "status": "Closed",
      "scheduledStartTime": "2014-11-11T10:25:00.000Z",
      "actualStartTime": "2014-11-11T10:25:00.000Z",
      "scheduledEndTime": "2014-11-11T22:53:00.000Z",
      "actualendTime": "2014-11-11T22:53:00.000Z",
      "_id": "5813294f550dfb3b52b61997"
    },
    {
      "type": "Final Review",
      "status": "Closed",
      "scheduledStartTime": "2014-11-11T22:53:00.000Z",
      "actualStartTime": "2014-11-11T22:53:00.000Z",
      "scheduledEndTime": "2014-11-12T02:09:00.000Z",
      "actualendTime": "2014-11-12T02:09:00.000Z",
      "_id": "5813294f550dfb3b52b61996"
    },
    {
      "type": "Approval",
      "status": "Closed",
      "scheduledStartTime": "2014-11-12T02:09:00.000Z",
      "actualStartTime": "2014-11-12T02:09:00.000Z",
      "scheduledEndTime": "2014-11-13T00:41:00.000Z",
      "actualendTime": "2014-11-13T00:41:00.000Z",
      "_id": "5813294f550dfb3b52b61995"
    }
  ],
  "platforms": [
    "iOS"
  ],
  "postingDate": "2014-11-03T06:38:00.000Z",
  "prize": [
    1000,
    500
  ],
  "projectId": 8043,
  "registrants": [
    {
      "handle": "ZeKoU",
      "reliability": "28%",
      "registrationDate": "2014-11-03T07:26:00.000Z",
      "submissionDate": null,
      "rating": "711",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61994"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T07:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b61993"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T08:05:00.000Z",
      "submissionDate": null,
      "rating": "514",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61992"
    },
    {
      "handle": "iversonLv",
      "reliability": "0%",
      "registrationDate": "2014-11-03T08:41:00.000Z",
      "submissionDate": null,
      "rating": "976",
      "colorStyle": "color: #00A900",
      "_id": "5813294f550dfb3b52b61991"
    },
    {
      "handle": "mhykol",
      "reliability": "0%",
      "registrationDate": "2014-11-03T10:50:00.000Z",
      "submissionDate": null,
      "rating": "714",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61990"
    },
    {
      "handle": "Schpotsky",
      "reliability": "0%",
      "registrationDate": "2014-11-03T11:32:00.000Z",
      "submissionDate": null,
      "rating": "1447",
      "colorStyle": "color: #6666FF",
      "_id": "5813294f550dfb3b52b6198f"
    },
    {
      "handle": "MeteC",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T15:44:00.000Z",
      "submissionDate": "2014-11-07T20:26:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b6198e"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T18:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b6198d"
    },
    {
      "handle": "Derwish",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T18:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b6198c"
    },
    {
      "handle": "veraabad",
      "reliability": "n/a",
      "registrationDate": "2014-11-03T19:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b6198b"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-11-04T00:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b6198a"
    },
    {
      "handle": "SePulTribe",
      "reliability": "0%",
      "registrationDate": "2014-11-04T00:38:00.000Z",
      "submissionDate": null,
      "rating": "400",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61989"
    },
    {
      "handle": "thomasjpfan",
      "reliability": "n/a",
      "registrationDate": "2014-11-04T02:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b61988"
    },
    {
      "handle": "tongkunvwang",
      "reliability": "6%",
      "registrationDate": "2014-11-04T08:55:00.000Z",
      "submissionDate": null,
      "rating": "186",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61987"
    },
    {
      "handle": "woodjhon",
      "reliability": "0%",
      "registrationDate": "2014-11-04T11:07:00.000Z",
      "submissionDate": null,
      "rating": "782",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61986"
    },
    {
      "handle": "saikat.aeron",
      "reliability": "n/a",
      "registrationDate": "2014-11-04T13:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813294f550dfb3b52b61985"
    },
    {
      "handle": "muzehyun",
      "reliability": "0%",
      "registrationDate": "2014-11-04T20:32:00.000Z",
      "submissionDate": null,
      "rating": "895",
      "colorStyle": "color: #999999",
      "_id": "5813294f550dfb3b52b61984"
    }
  ],
  "registrationEndDate": "2014-11-05T06:38:00.000Z",
  "reliabilityBonus": 200,
  "reviewScorecardId": 30001470,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": 30000412,
  "submissionEndDate": "2014-11-09T06:39:00.000Z",
  "submissions": [
    {
      "handle": "MeteC",
      "placement": 1,
      "screeningScore": 100,
      "initialScore": 93.28,
      "finalScore": 93.28,
      "points": 450,
      "submissionStatus": "Active",
      "submissionDate": "2014-11-07T20:26:00.000Z",
      "_id": "5813294f550dfb3b52b619a1"
    }
  ],
  "technology": [
    "Swift",
    "Xcode",
    "iOS 8.0"
  ]
}