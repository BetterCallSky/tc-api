{
  "_id": 30054241,
  "_isComplete": true,
  "__v": 0,
  "_lastUpdate": "2016-10-27T17:50:28.151Z",
  "appealsEndDate": "2016-05-20T07:09:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Hercules TV Web Apps - Node.js services for Heroku",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "This challenge will implement some simple REST services that will build the base for a set of web applications that will eventually run on an embedded TV device for our customer.<br />\n<br />\nThe application will show a list of video assets scraped off of websites, like foxnews.com, cnn.com, youtube, or hgtv.com as examples. &nbsp;The video assets will be aggregated and displayed to the user for playback on their TV.<br />\n<br />\nWe are going to target:<br />\n<br />\n* Node.js<br />\n* Heroku<br />\n* Redis or another in-memory data store<br />\n* JSON&nbsp;<br />\n* Swagger for API documentation<br />\n<br />\n<strong>Data model</strong><br />\n<br />\nThe data model will be fairly generic. &nbsp;In the future, we will run challenges to build data collectors that look at the video asset data on a given site and then translate that data into generic assets that we house in our data store in our web app. &nbsp;&nbsp;<br />\n<br />\nVideo Asset:<br />\n<br />\n* Category (string)<br />\n* Title (string)<br />\n* Description (string or text)<br />\n* Publish Date (date/time) (optional)<br />\n* Run length (integer, representing seconds) (optional)<br />\n* Thumbnail image (url) (optional)<br />\n* Video URL (url)&nbsp;<br />\n* Provider (HGTV, Fox News, YouTube, ABC, etc...) (string) (optional)<br />\n* Expiration date (not parsed, but set by the system) (date/time) (set by system)<br />\n* Asset ID (guid) (set by system)<br />\n<br />\n<strong>REST API</strong><br />\n<br />\nThe REST API will allow for adding video assets into the data store (called &quot;ingesting&quot;), deleting assets from the data store, editing assets in the data store, and pulling feeds of video assets based on sort parameters. &nbsp;The REST API will expect JSON in the POSTs and will return JSON in the GETs. &nbsp;As we add onto the web app, we will return HTML or JSON for certain endpoints, like the feeds, depending on the content-type given in the header. &nbsp;&quot;application/json&quot; will return JSON, but &quot;application/html&quot; might return a web page instead.<br />\n<br />\n<em>Adding video asset:</em><br />\n<br />\nAdding a video asset is done by a POST to /videos/. &nbsp;The video asset will expect to be filled with the data detailed in the data model. &nbsp;Anything not marked optional is required.<br />\nWhen a new video is added, we want to go through and remove any videos that have an expiration date before the current date/time.<br />\n<br />\nFor the expiration date, this should be set by taking the current time and adding in a configurable offset to the date, like 48 hours.<br />\n<br />\nThe asset ID will be a GUID generated by our Node.js app for each record inserted.&nbsp;<br />\n<br />\n<em>Deleting a video asset:</em><br />\n<br />\nDeleting a video asset will be done by a DELETE request to /videos/{asset ID}<br />\n<br />\n<em>Updating a video asset:</em><br />\n<br />\nUpdating a video asset will be done by a PUT request to /videos/{asset ID}. &nbsp;The request should be JSON representing the updated record, and the caller should be able to update the expiration date explicitly. &nbsp;The expiration date should not be calculated by the system on this update call.<br />\n<br />\n<em>Retrieving video assets:</em><br />\n<br />\nA GET request to /videos/ will return a list of all available video assets in a JSON array, sorted by publish date descending.<br />\n<br />\n<em>Searching video assets:</em><br />\n<br />\nA GET request to /videos/search/{search term} will return a list of video assets that have title or description text that matches the given search term. &nbsp;If a search term is multiple words, we will search for each word individually, and the search comparison will be case insensitive. &nbsp;If multiple words are used in the search term, the results will be sorted by search match in this order:<br />\n<br />\n1. Records that match the search term exactly&nbsp;<br />\n2. Records that have all the words of the search term in them, but maybe not in the given search order<br />\n3. Records that have one or more of the words of the search term in them<br />\n<br />\nIn each of these categories, the records will be sorted by publish date descending<br />\n<br />\n<em>Filtering:</em><br />\n<br />\nIn addition to retrieving all videos and searching, we want to have the ability to filter search and regular video feed responses by the following parameters:<br />\n<br />\n* Category<br />\n* Provider<br />\n* Publish date<br />\n<br />\nWe can have these as URL parameters on the /videos/search and /video GET calls<br />\n<br />\n* &quot;category&quot; would be a comma-delimited string of the categories of videos to return in the results<br />\n* &quot;provider&quot; would be a comma-delimited string of the providers of videos to return in the results<br />\n* &quot;publishedAfter&quot; would be a date that would filter out any records with a publish date *before* the parameter value<br />\n* &quot;publishedBefore&quot; would be a date that would filter out any records with a publish date *after* the parameter value<br />\n<br />\nThe string comparisons for category and provider should be case insensitive.<br />\n<br />\n<strong>Data store</strong><br />\n<br />\nWe want to keep the data store as lean as possible. &nbsp;GrapheneDB / Neo4j is easily supported on Heroku, but you are free to offer suggestions as to other data stores, as long as the data store implementation runs on Heroku as an add-on. &nbsp;Please get confirmation from the copilot if you would like to target a different data store.<br />\n<br />\n<strong>Heroku deployment</strong><br />\n<br />\nThe final application will be developed and will &quot;live&quot; in Heroku until the customer decides to move it to production. &nbsp;Please make sure your submission is easily deployed to Heroku and that your deployment guide makes sure to document any add-ons or non-standard steps that are necessary to publish the code to Heroku. &nbsp;Please target the latest supported version of Node.js on Heroku and the latest version of any add-ons.<br />\n<br />\n<strong>Tests</strong><br />\n<br />\nUnit tests are required for this challenge. &nbsp;Please provide basic unit tests to cover the the API. &nbsp;The implementation is at your discretion, but we have used Chai in the past for other Node.js libraries and services.<br />\n<br />\n<strong>Swagger docs</strong><br />\n<br />\nAs part of your submission, Swagger documentation for the API you create is required:<br />\n<br />\n<a href=\"http://swagger.io/\">http://swagger.io/</a><br />\n<br />\n<strong>Documentation</strong><br />\n<br />\nFor this challenge, you can submit a deployment and verification guide in Markdown format. &nbsp;No video is required. &nbsp;Please also make sure to submit a Swagger doc that matches your API.<br />\n<br />\n<strong>Additional features</strong><br />\n<br />\nFor additional features consideration, please consider:<br />\n<br />\n* Extra unit tests or code coverage tools<br />\n* Extra validation or testing features<br />\n* Data storage tweaks or ideas that can lead to a very fast implementation<br />\n<br />\nKeep in mind the feed is not going to change constantly - it will be relatively static, but the ingestion will happen via scheduled jobs on a semi-regular basis (think 30-60 minutes)<br />\n<br />\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30054241",
  "finalSubmissionGuidelines": "Please see above",
  "forumId": 33094,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=33094",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 30,
  "numberOfSubmissions": 6,
  "postingDate": "2016-05-13T01:41:00.000Z",
  "projectId": 9599,
  "registrationEndDate": "2016-05-18T01:41:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-05-18T01:41:00.000Z",
  "submissions": [
    {
      "handle": "Sky_",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 97.5,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-05-16T07:56:00.000Z",
      "_id": "58123e64e0be5f30ae561552"
    },
    {
      "handle": "zsudraco",
      "placement": 2,
      "screeningScore": null,
      "initialScore": 95,
      "finalScore": 97.5,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2016-05-14T23:10:00.000Z",
      "_id": "58123e64e0be5f30ae561551"
    },
    {
      "handle": "peakpado",
      "placement": 3,
      "screeningScore": null,
      "initialScore": 90,
      "finalScore": 90,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2016-05-17T14:50:00.000Z",
      "_id": "58123e64e0be5f30ae561550"
    },
    {
      "handle": "cinscript",
      "placement": 4,
      "screeningScore": null,
      "initialScore": 83.75,
      "finalScore": 83.75,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2016-05-17T08:26:00.000Z",
      "_id": "58123e64e0be5f30ae56154f"
    },
    {
      "handle": "cam.ashwini",
      "placement": 5,
      "screeningScore": null,
      "initialScore": 81.25,
      "finalScore": 82.5,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2016-05-17T23:28:00.000Z",
      "_id": "58123e64e0be5f30ae56154e"
    },
    {
      "handle": "Tomsons",
      "placement": 6,
      "screeningScore": null,
      "initialScore": 76.25,
      "finalScore": 76.25,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2016-05-17T13:16:00.000Z",
      "_id": "58123e64e0be5f30ae56154d"
    }
  ],
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2016-05-13T01:41:00.000Z",
      "actualStartTime": "2016-05-13T01:41:00.000Z",
      "scheduledEndTime": "2016-05-18T01:41:00.000Z",
      "actualendTime": "2016-05-18T01:41:00.000Z",
      "_id": "58123e64e0be5f30ae56154c"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2016-05-13T01:46:00.000Z",
      "actualStartTime": "2016-05-13T01:46:00.000Z",
      "scheduledEndTime": "2016-05-18T01:41:00.000Z",
      "actualendTime": "2016-05-18T01:41:00.000Z",
      "_id": "58123e64e0be5f30ae56154b"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2016-05-18T01:41:00.000Z",
      "actualStartTime": "2016-05-18T01:41:00.000Z",
      "scheduledEndTime": "2016-05-19T06:37:00.000Z",
      "actualendTime": "2016-05-19T06:37:00.000Z",
      "_id": "58123e64e0be5f30ae56154a"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2016-05-19T06:37:00.000Z",
      "actualStartTime": "2016-05-19T06:37:00.000Z",
      "scheduledEndTime": "2016-05-20T06:37:00.000Z",
      "actualendTime": "2016-05-20T06:37:00.000Z",
      "_id": "58123e64e0be5f30ae561549"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2016-05-20T06:37:00.000Z",
      "actualStartTime": "2016-05-20T06:37:00.000Z",
      "scheduledEndTime": "2016-05-20T07:09:00.000Z",
      "actualendTime": "2016-05-20T07:09:00.000Z",
      "_id": "58123e64e0be5f30ae561548"
    }
  ],
  "registrants": [
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T02:14:00.000Z",
      "submissionDate": "2016-05-17T14:50:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561547"
    },
    {
      "handle": "gondzo",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T02:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561546"
    },
    {
      "handle": "ShindouHikaru",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T02:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561545"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T03:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561544"
    },
    {
      "handle": "XinScirpt",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T03:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561543"
    },
    {
      "handle": "Sky_",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T04:46:00.000Z",
      "submissionDate": "2016-05-16T07:56:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561542"
    },
    {
      "handle": "zsudraco",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T05:35:00.000Z",
      "submissionDate": "2016-05-14T23:10:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561541"
    },
    {
      "handle": "panoptimum",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T05:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561540"
    },
    {
      "handle": "cam.ashwini",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T08:38:00.000Z",
      "submissionDate": "2016-05-17T23:28:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153f"
    },
    {
      "handle": "renqingwei123",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T09:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153e"
    },
    {
      "handle": "freegod",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T10:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153d"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T12:55:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153c"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T13:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153b"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T16:04:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56153a"
    },
    {
      "handle": "karthsharma",
      "reliability": "n/a",
      "registrationDate": "2016-05-13T16:38:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561539"
    },
    {
      "handle": "hadi.lu",
      "reliability": "n/a",
      "registrationDate": "2016-05-14T01:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561538"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2016-05-14T15:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561537"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2016-05-14T16:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561536"
    },
    {
      "handle": "Rushikesh.Deshp",
      "reliability": "n/a",
      "registrationDate": "2016-05-15T02:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561535"
    },
    {
      "handle": "hp87",
      "reliability": "n/a",
      "registrationDate": "2016-05-15T08:28:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561534"
    },
    {
      "handle": "gjw99",
      "reliability": "n/a",
      "registrationDate": "2016-05-16T03:13:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561533"
    },
    {
      "handle": "rixiac",
      "reliability": "n/a",
      "registrationDate": "2016-05-16T03:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561532"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2016-05-16T06:25:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561531"
    },
    {
      "handle": "Tomsons",
      "reliability": "n/a",
      "registrationDate": "2016-05-16T09:51:00.000Z",
      "submissionDate": "2016-05-17T13:16:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae561530"
    },
    {
      "handle": "btgd88",
      "reliability": "n/a",
      "registrationDate": "2016-05-16T12:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152f"
    },
    {
      "handle": "muzehyun",
      "reliability": "n/a",
      "registrationDate": "2016-05-17T05:22:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152e"
    },
    {
      "handle": "cinscript",
      "reliability": "n/a",
      "registrationDate": "2016-05-17T08:19:00.000Z",
      "submissionDate": "2016-05-17T08:26:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152d"
    },
    {
      "handle": "DHEERAJSONI",
      "reliability": "n/a",
      "registrationDate": "2016-05-17T10:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152c"
    },
    {
      "handle": "republic82",
      "reliability": "n/a",
      "registrationDate": "2016-05-17T13:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152b"
    },
    {
      "handle": "sah2ed",
      "reliability": "n/a",
      "registrationDate": "2016-05-17T21:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e64e0be5f30ae56152a"
    }
  ],
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "prize": [
    800,
    400
  ],
  "technology": [
    "Node.js"
  ],
  "platforms": [
    "Heroku",
    "NodeJS"
  ]
}