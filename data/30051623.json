{
  "_id": 30051623,
  "_isComplete": true,
  "__v": 24223,
  "_lastUpdate": "2017-02-17T08:05:27.824Z",
  "appealsEndDate": "2015-11-19T01:59:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "!!96hrs!! SunShot - Hot4Solar Python Backend Application",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<p dir=\"ltr\"><span>Hot 4 Solar! web application purpose is to helping find potential customers who are most prepared to buy solar panels.</span></p>\n\n<p dir=\"ltr\">The goal of this challenge is to build the application backend of the application with sample pages to demonstrate the functionality.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<p dir=\"ltr\">You will address the following in this challenge :</p>\n\n<h3 dir=\"ltr\"><u>Technology Stack</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You will use Python, Django, MySQL and Angularjs stack in this challenge.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- It is preferred to use <a href=\"http://www.django-rest-framework.org/\">Django REST API</a> Framework.</p>\n\t</li>\n</ul>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use open source ORM module for database.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Entity Models</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- user</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- email</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- password (salted)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- name</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- address (valid google address)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- company</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- phone</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- resetToken</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- resetExpiration (date)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Locations</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- permitId</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- address (should be valid google address)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- zipcode (valid zipcode)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- long (<span>should be valid)</span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- lat (<span>should be valid)</span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- installationDate</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- contractorId</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- LocationsData</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- location_id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- averageCostPerWatt</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- projection</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- hotness</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>Contractors</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- name</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>AggregatedLocationsData</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- zipcode</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- averageCostPerWatt</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- projection</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- hotness</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- locations (array of location ids)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- averageGrowth</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- increments (array of key/value, key represents date, and value is +/- integer that represents the installation count happened in given date)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Note the following :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">You can add more models as needed, and suggest changes to the models above.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Functionality</u></h3>\n\n<p dir=\"ltr\">We need the following endpoints :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Note that response should be in JSON format.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- POST /login</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Login endpoint expect email and password.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Login will create JWT session.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- All endpoints except /signup, /forgotpassword and /resetpassword &nbsp;require valid JWT session.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- POST /signup</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Register new user</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Input parameters are :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- name (optional)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- email &nbsp;(required)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- password (required)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- address (optional)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- company (optional)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- phone (optional)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will create new user record.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- POST /forgotpassword</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- send email to user to reset password</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- the input parameter is email address.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Generate reset password token and expiration and persist them in user record, and use it to construct the reset password link.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use sendgrid to send emails.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- sendgrid options should be configurable.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- email template should be configurable.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- reset password link template should be configurable.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- POST /resetpassword</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint reset the password</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- it should be pass the reset token, user id as query parameters</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- it will also include the new password in the body of the request.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- this will update the password if reset password link has not expired.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /locations</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint will be used to retrieve installers rendered in <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6UFhyNGlUVUhscms/view?usp=sharing\">the map screen.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will retrieve locations.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Filtering parameters are optional, we can filter by any field in the locations model.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- We need a filtering parameters to allow retrieval of locations within provided lon/lat range</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will retrieve all locations matched the search.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /contractors</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint will be used to retrieve contractors popup rendered in <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6NXdOSlFWdDQydFk/view?usp=sharing\">the map screen.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This returns list of contractors in database.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- We need long/lat parameters to filter contractors by address.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The response should include the contractor id and name.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /locations/statistics</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint will be used to retrieve statics popup rendered in <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6ZlEyQkdYd1p5cUk/view?usp=sharing\">the map screen.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will get statistics of provided locations or long/lat range, one of these parameters must present, if neither then return error.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Locations will be passed in query string as comma separated location ids.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Radius parameter (optional) will be passed, we will not need this parameter in backend logic, and we will include it in response.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- If long/lat range then we need to retrieve the locations that fall within the long/lat range, we only need the location ids.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Using location ids :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- using LocationData of passed in locationIds calculate average of following fields :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- hotness</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- averageCostPerWatt</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- projection</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Prediction chart plot data :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Group locations by year using installation date</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For each group calculate the average cost/watt from LocationData.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- The x-axix will be the years, and left y-axix will be the average cost/watt.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Response will include following fields :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- hotness</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- averageCostPerWatt</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- projection</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- growth</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- predictionChart (object with array of plots)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /locations/statics/aggregate</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint will be used to retrieve statistics list the <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6Z1ZwUzZiQXVRMkE/view?usp=sharing\">the list view page.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- input parameters are :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- address (required)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- offset</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- limit</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- sortColumn</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- sortOrder</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Using google geocoding, get list of zipcodes in the provided address and retrieve all data from AggregatedLocationsData that related to the zipcodes with pagination.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- We also need to aggregate summary of the data retrieved to be displayed at top summary section in the page, the aggregation will be as follow :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- calculate count of locations</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- calculate average hotness, projection, and cost/watt using all data.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Note the following about returned data :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Pagination should be enforced in this case.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Pagination parameters :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- offset (0 by default) - page number</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- limit (10 by default) - page size</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- sortBy (optional) - default to zipcode</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- sortOrder (optional) - default to ascending</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- response fields will be :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- summary :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- installersCount</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- hotness</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- projection</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- cost/watt</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- locationData array, each element will be a LocationData record.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /locations/statics/export</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This endpoint will be used to perform the export feature the <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6Z1ZwUzZiQXVRMkE/view?usp=sharing\">the list view page.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Input parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Address</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- SortColumn</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- SortOrder</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Export AggregatedLocations to csv file format.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The logic for retrieving data should be same as GET /locations/statics/aggregate endpoint.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Sorting should be applied to exported data as passed.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET /locations/timeline</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will retrieve locations on provided datetime for timeline feature in <a href=\"https://drive.google.com/file/d/0BxNVnWK-ZGA6azRYS3lybm1TVEU/view?usp=sharing\">this screen.</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The input parameters are :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- address</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- date</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It will return locations where the date equals to installation date under the provided address.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Job Scheduler</u></h3>\n\n<p dir=\"ltr\">Create a script that run by job scheduler out of the box that does the following :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Aggregate Locations documents by zipcode.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- For each Locations group :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Get AggregatedLocationsData of group zipcode if exists to be updated.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Store the location ids in AggregatedLocationsData#locations field.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Calculate Growth</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Group locations by installation date and calculate the percentage of increase in number of locations between the current month and the preceding month. It can be positive or negative.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Store the value in &nbsp;AggergatedLocationsData#averageGrowth</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- It is a percentage value.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Calculate the average Cost / Watts for locations and store it in averageCostPerWatt field.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Calculate the average Projection for locations and store it in averageProjection field.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Calculate the average Hotness for locations and store it in averageHotness field.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Calculate Increments in past 30 days</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Get latest date in the increments array if exist, if not exist then we calculate the increments for all locations in group.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Group locations by installation date</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Put the date and locations count in key/value pair and store it in increments array.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Update/Store the information in AggregatedLocations document.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Demo Pages</u></h3>\n\n<p dir=\"ltr\">We need UI pages that demonstrate the functionality built :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use angularjs/bootstrap for UI.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Map page</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The map should contain a search bar at top of it, allows user to search for location. Implement the google geocoding auto complete so it is easier to search for locations.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- When user select an address, invoke GET /locations to retrieve the locations and render the returned results as plots in the map.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It will contains a floating popup that contains checkbox list the contractors in the current selected location, use GET /contractors filtered by selected address.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- By default all checkboxes are selected, user can unselect a checkbox, and it will remove the markers/locations of the unselected contractor.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- List page</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The page should demonstrate the following API endpoints :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- GET /locations/statistics</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- GET /locations/statistics/aggregate</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- GET /locations/statistics/export</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- GET /locations/timeline</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- You will create simple form with required/optional parameters each endpoint expect to demonstrate the functionality.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It is ok if you simply render the response as json as it comes from backend.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Validation</u></h3>\n\n<p dir=\"ltr\">Add proper validation for input parameters :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Input parameter if required should not be empty or null.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Input parameter should be in proper format, i.e. datetime.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Logging</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Add proper logging for method entry, method exit at INFO level.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Add proper logging for input parameters, and return parameters at DEBUG level.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Add proper logging for errors in ERROR level.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Test Data</u></h3>\n\n<p dir=\"ltr\">Build a test data script that generate data in table, please make the addresses in San Francisco city.</p>\n\n<h3 dir=\"ltr\"><u>Hosting</u></h3>\n\n<p dir=\"ltr\">It is preferred if you provide scripts and steps to deploy the application on Heroku.</p>\n\n<h3 dir=\"ltr\"><u>Documentation</u></h3>\n\n<p dir=\"ltr\">Provide a detailed README documentation for how to setup and configure the application.</p>\n\n<h3 dir=\"ltr\"><u>Configurations</u></h3>\n\n<p dir=\"ltr\">You are expected to use environment variables to store sensitive information and environment-specific configurations. &nbsp;&nbsp;&nbsp;</p>\n\n<h2 dir=\"ltr\">Technology</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Python version 3.x running on Ubuntu</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- MySQL Latest stable version.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Django 1.8.x</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- AngularJS</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Bootstrap</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\"><u>Abstracting and Design Patterns</u></h2>\n\n<p dir=\"ltr\">Please make sure to create helper/interface to include the common code/functionality.</p>\n\n<p dir=\"ltr\">Also please make sure your design is flexible, use facade design pattern and adapter design pattern (and any other proper design pattern) to enable future extensibility of the solution.</p>\n\n<h2 dir=\"ltr\"><u>Coding Standard</u></h2>\n\n<p dir=\"ltr\">Follow python coding best practices : <a href=\"http://www.python.org/dev/peps/pep-0008/\">PEP 8</a> for the main text, and<a href=\"http://www.python.org/dev/peps/pep-0257/\"> PEP 257</a> for docstring conventions</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30051623",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<h1 dir=\"ltr\">Deliverable</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- All source code that implement the requirement.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- README in markup language</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Verification document contains steps to verify your solution.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Test data generator script.</p>\n\t</li>\n</ul>\n",
  "forumId": 30735,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=30735",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 18,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-11-12T10:00:00.000Z",
      "actualStartTime": "2015-11-12T10:00:00.000Z",
      "scheduledEndTime": "2015-11-16T13:59:00.000Z",
      "actualendTime": "2015-11-16T13:59:00.000Z",
      "_id": "58a6aec75d036c0bbdd5f2e7"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-11-12T10:05:00.000Z",
      "actualStartTime": "2015-11-12T10:05:00.000Z",
      "scheduledEndTime": "2015-11-16T13:59:00.000Z",
      "actualendTime": "2015-11-16T13:59:00.000Z",
      "_id": "58a6aec75d036c0bbdd5f2e6"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-16T13:59:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-18T01:59:00.000Z",
      "actualendTime": null,
      "_id": "58a6aec75d036c0bbdd5f2e5"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-18T01:59:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-18T13:59:00.000Z",
      "actualendTime": null,
      "_id": "58a6aec75d036c0bbdd5f2e4"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-18T13:59:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-19T01:59:00.000Z",
      "actualendTime": null,
      "_id": "58a6aec75d036c0bbdd5f2e3"
    }
  ],
  "platforms": [
    "Heroku"
  ],
  "postingDate": "2015-11-12T10:00:00.000Z",
  "prize": [
    1500,
    700,
    400
  ],
  "projectId": 9154,
  "registrants": [
    {
      "handle": "gjw99",
      "reliability": "n/a",
      "registrationDate": "2015-11-12T12:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2e2"
    },
    {
      "handle": "ifox",
      "reliability": "n/a",
      "registrationDate": "2015-11-12T13:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2e1"
    },
    {
      "handle": "altaironfire",
      "reliability": "n/a",
      "registrationDate": "2015-11-12T15:37:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2e0"
    },
    {
      "handle": "deedee",
      "reliability": "n/a",
      "registrationDate": "2015-11-12T17:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2df"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-12T17:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2de"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T01:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2dd"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T06:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2dc"
    },
    {
      "handle": "fish00",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T07:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2db"
    },
    {
      "handle": "Luca",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T15:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2da"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T18:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d9"
    },
    {
      "handle": "sjt11",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T19:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d8"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T05:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d7"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T06:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d6"
    },
    {
      "handle": "arshpreetsingh",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T09:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d5"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T05:47:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d4"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T06:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d3"
    },
    {
      "handle": "sharvani.198",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T11:12:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d2"
    },
    {
      "handle": "yzernik",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T08:37:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6aec75d036c0bbdd5f2d1"
    }
  ],
  "registrationEndDate": "2015-11-16T13:59:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-16T13:59:00.000Z",
  "submissions": [],
  "technology": [
    "Angular.js",
    "MySQL",
    "Python"
  ]
}