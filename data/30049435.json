{
  "_id": 30049435,
  "_isComplete": true,
  "__v": 2417,
  "_lastUpdate": "2016-11-05T11:03:38.873Z",
  "appealsEndDate": "2015-04-01T03:05:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "SunShot - PVimpact GreenButton Ruby  Development [Bonus Payments]",
  "challengeType": "Assembly Competition",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2015-03-29T03:08:00.000Z",
  "currentPhaseName": "Post-Mortem",
  "currentPhaseRemainingTime": -50745255,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<div style=\"font-family: Arial, Helvetica, Verdana, sans-serif; font-size: 12px; line-height: 16.7999992370605px; border: 1px solid rgb(204, 204, 204); padding: 5px 10px; background: rgb(238, 238, 238);\">\n<h2><span style=\"color:rgb(255, 0, 0)\">We are giving out bonus payments to every participant that submits and has a score +80. Thus, if you submit and you don&#39;t win but your score is +80, we will still pay you a bonus for your efforts.</span></h2>\n</div>\n\n<h1 dir=\"ltr\">Challenge Overview</h1>\n\n<p dir=\"ltr\">The <a href=\"http://www.greenbuttondata.org/\">Green Button</a> Standard is a secure way of transmitting energy usage information developed by the United States Department of Energy.</p>\n\n<p dir=\"ltr\">The goal of this challenge is to develop a Ruby based gem to allow the retrieval of Green Button XML formatted data, process the data, persist it in database and return data as Ruby objects.</p>\n\n<p dir=\"ltr\">This follows the path known as Green Button Connect in the Green Button <a href=\"http://www.greenbuttondata.org/developers/#examples\">Documentation</a>.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<p dir=\"ltr\">You are developing a Ruby based gem in this challenge that retrieves Retail Customer data using <a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/\">GreenButton RESTful API</a>.</p>\n\n<p dir=\"ltr\">Before getting started coding, you are encouraged to look at <a href=\"http://www.greenbuttondata.org/developers\">this page</a> that gives overview about GreenButton Concept, API and Entities.</p>\n\n<h4 dir=\"ltr\"><strong><u>Technology Stack</u></strong></h4>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Ruby on Rails 3.2</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Ruby 2.1.5</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Postgres 9.4</p>\n\t</li>\n</ul>\n\n<h4 dir=\"ltr\"><strong><u>General Notes</u></strong></h4>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">This version will only handle UsagePoints of service category (kind) = 0 (Electricity), if the downloaded data is not of type Electricity then return error to caller stating that we only support Electricity data in this version.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">For more information about UsagePoints kinds, refer to this <a href=\"https://github.com/energyos/OpenESPI-Common-java/blob/master/etc/espiDerived.xsd#LC3027\">xsd</a> file (ServiceKind type), the file has rich documentation about the types in GreenButton.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">All dates are stored in UTC format in database.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">You can find details about Greenbutton model definition in this <a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/\">page</a>.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Logging of information/errors, and transactions should be handled properly.</p>\n\t</li>\n</ul>\n\n<h4 dir=\"ltr\"><strong><u>Demo Page</u></strong></h4>\n\n<p dir=\"ltr\">Create simple ruby on rails application that demonstrates the usage of the ruby gem, note the following :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">A text field for green button access token.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Access to Green Button APIs requires an OAuth2 Access Token. Read more about <a href=\"http://www.greenbuttondata.org/espi/access_tokens/\">Access Tokens and the various Data Custodian Roles</a> we are only using access_token (individual retail customer access) in this challenge.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Green Button APIs are available in a Sandbox server, this server does not have a live OAuth 2.0 Server to issue access tokens, you will use <a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/\">predefined list of tokens</a> available in GreenButton Sandbox, mainly you are interested in access_token type tokens.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Add a panel for each method implemented in this challenge with fields needed as input arguments to the method.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">It will have button to submit a request.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">It will have a text area to render response.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Here is sample of page, with 15 minutes as interval is selected to be download :</p>\n\n<p dir=\"ltr\"><img src=\"https://lh4.googleusercontent.com/cLLM1ZkzicK7D_5lGvL7vARaymfchUmGxpAoebG11TxGUfshx81wa2Fuu1lNIOQA57ENiry4HfU4PynMbXmclhRoZHKIXP3k5mZ7XXscTnDgsHubKmEotMRJwHa-kC_IUNX9624\" /></p>\n\n<h4 dir=\"ltr\"><strong><u>Expected Gem Usage</u></strong></h4>\n\n<p dir=\"ltr\">The gem should have a single module GreenButton, sample usage would look like this :</p>\n\n<p dir=\"ltr\"><em>require &lsquo;greenbutton&rsquo;</em></p>\n\n<p dir=\"ltr\"><em>gb = GreenButton.download_data(access_token, resource_uri,.. some other parameters .. )</em></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>access_tken</strong> represents retail customer OAuth 2.0 access_token</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>resource_uri</strong>&nbsp;is the retailCustomer resourceURI (i.e. <a href=\"https://services.greenbuttondata.org/DataCustodian/espi/1_1/resource/Batch/Subscription/5\">https://services.greenbuttondata.org/DataCustodian/espi/1_1/resource/Batch/Subscription/5</a>)</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">The returned result represents the wrapped greenbutton XML object with all related information downloaded in the XML file..</p>\n\n<p dir=\"ltr\"><strong><u>Model Definition</u></strong></p>\n\n<p dir=\"ltr\">In the challenge we are persisting all data we retrieve from Green Button XML in the same structure.</p>\n\n<p dir=\"ltr\">Following are the ruby models definition (it will also have corresponding table in Postgres with same naming convention)</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_usage_point</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id (parsed from rel=&quot;self&quot; link)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">kind (parsed from &lt;espi:kind&gt;0&lt;/espi:kind&gt; - electricity for now)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">subscription_id (parsed from the passed in resourceUri)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">meter_reading (represents associated meter_reading object)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">local_time_parameters (represents associated local_time_parameters object)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">electricty_power_usage_summary (represents associated electricty_power_usage_summary object)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_meter_reading</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">reading_type_id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">accumulation_behaviour</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">commodity</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">currency</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">data_qualifier</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">flow_direction</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">interval_length</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">kind</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">phase</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">power_of_ten_multiplier</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">time_attribute</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">uom</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_local_time_parameters</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">dst_end_rule</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">dst_offset</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">dst_start_rule</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">tz_offset</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_electricty_power_usage_summary</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">duration</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">start_time</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">bill_last_period</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">bill_to_date</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">cost_additional_last_period</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">currency</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">overall_consumption_last_period_power_of_ten_multiplier</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">overall_consumption_last_period_uom</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">overall_consumption_last_period_value</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">current_billing_period_overall_consumption_power_of_ten_multiplier</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">current_billing_period_overall_consumption_uom</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">current_billing_period_overall_consumption_timestamp</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">current_billing_period_overall_consumption_value</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">quality_of_reading</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">status_time_stamp</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_interval_block</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">start_time</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">end_time</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">usage_point_id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">readings (represents array of interval_block_reading entities)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">gb_interval_block_reading</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">id</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">aggregation_type (enum: default, 15_min, 1_d, 1_m)</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">the default value is the interval length in the returned XML by GreenButton API.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">cost</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">start_time</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">value</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Note that all IDs fields are parsed from rel=&rdquo;self&rdquo; link the xml data.</p>\n\n<p dir=\"ltr\"><strong><u>Parsing the XML response</u></strong></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">The parsing is the major requirement in this challenge, this <a href=\"https://github.com/cew821/greenbutton\">greenbutton ruby library</a> can be reused in this challenge, or you can find it helpful to understand parsing the returned XML. Also (check next point ..)</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">It is also Ok to use an open source gem library to map between XML and ruby objects, there are number of gem libraries, <a href=\"https://github.com/apotonick/representable\">representable</a> is an option.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">You can refer to the <a href=\"https://services.greenbuttondata.org/\">sandbox website</a> and login :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Use alan/koala to login</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Navigate to UsagePoints <a href=\"https://services.greenbuttondata.org/DataCustodian/RetailCustomer/1/UsagePoint/1/show\">page</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Alan authorized this third party app to access monthly consumption, click on the Monthly Electricity Consumption link to navigate to the Interval Blocks of the usage points.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">The code that is displaying the screen you show is in Github:<a href=\"https://github.com/energyos/OpenESPI-DataCustodian-java\">https://github.com/energyos/OpenESPI-DataCustodian-java</a> ,<br />\n\t\tThis is a java MVC implementation in the Spring framework.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">The particular controller that is displaying the usage point is: <a href=\"https://github.com/energyos/OpenESPI-DataCustodian-java/blob/master/src/main/java/org/energyos/espi/datacustodian/web/customer/UsagePointController.java\">https://github.com/energyos/OpenESPI-DataCustodian-java/blob/master/src/main/java/org/energyos/espi/datacustodian/web/customer/UsagePointController.java</a> and the associated .jsp is: <a href=\"https://github.com/energyos/OpenESPI-DataCustodian-java/blob/master/src/main/webapp/WEB-INF/jsp/customer/usagepoints/index.jsp\">https://github.com/energyos/OpenESPI-DataCustodian-java/blob/master/src/main/webapp/WEB-INF/jsp/customer/usagepoints/index.jsp</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">If you are familiar with java you can read and understand how it parses data and pass it to frontend.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">But it is not really required. We are just trying to simplify the efforts for you to get started! :)</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p><strong><u><span>The GreenButton Wrapper Module</span></u></strong></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Define the module with name : GreenButton it exposes the following functions</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">download_data</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">This function downloads customer data from GreenButton</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">This function will have the following parameters :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">access_token : represents the retail customer access token</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">resource_uri : represents the retail customer resourceURI</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">interval_start_time (optional) : represents the start date to retrieve data. corresponds to published-min in the API endpoint query string parameter.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">interval_end_time (optional) : represents the end date to retrieve data. corresponds to published-max in the API endpoint query string parameter.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">aggregation_type (optional) represents the target interval length reading to convert the data readings to. it is optional, the allowed values are (15 minutes, 1 day, 1 month), can be enum.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">parameters should be validated against their proper types.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">The method will call the GreenButton API using the passed <a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/#!/Batch/connectMyDataFeed_get_2\">resourceURI</a> and pass accessToken in header &lsquo;Authorization&rsquo;. and set the optional intervals if present.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">The XML response from API call will be passed to target Parser based on the service category (kind), we only support Electricity in this challenge.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">Build &nbsp;a Parser to handle parsing the returned XML. The referenced gem ruby library above should be helpful.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">If aggregation_type is present :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Calculate the target number of distinct interval block readings, i.e. say we have interval data blocks from 12:00:00 AM 3-15-2015 to 12:00:00 AM 3-18-2015, &nbsp;15 minutes is the target aggregation type, then the number of interval blocks readings is ( 4 readings/hr x 24 hrs x 3d) = &nbsp;288.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">If target aggregation type (i.e. 15 minutes) is less than the returned interval length (i.e. 1 hour) then an algorithm should be dividing into the target interval aggregation type (i.e. for each hour it will be divided into 4 interval 15 minutes interval : start time, cost, and value should be calculated).</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">If target aggregation type (i.e. 1 hour) is greater than the returned interval length (i.e. 15 minutes) then an algorithm should do aggregation (i.e. we need four 15-minutes interval readings to calculate the 1 hour reading interval : start time, cost, and value should be calculated).</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Update the associated interval_block_readings to reference the new calculated interval_block_readings objects.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">the interval_block_reading#aggregation_type will be equal to the aggregation_type parameter.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Update gb_meter_reading#interval_length to reflect the new interval length (the aggregation type).</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">Store the data into database and return it.</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">If there are already records for the returned data, then perform update database operation.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">The response will be array of gb_usage_points.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">retrieve_data</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">This function retrieves the persisted green button data, applies some processing to it based on aggregation type, and returns it.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">The parameters are :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">subscription_id represents the retail customer subscription id, corresponds to gb_usage_point#subscription_id field</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">aggregation_type (optional) represents the target interval length reading. it is optional, the allowed values are (15 minutes, 1 day, 1 month), can be enum. If not passed, then it should beh the interval length of the returned readings.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">interval_start_time (optional) : represents the start date used to search interval block data.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">interval_end_time (optional) : represents the end date to search interval block data.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">This method will execute the following logic :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Parameters should be validated against their proper types.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Retrieve all data of the given aggregation_type and subscrpition_id where interval_start_time &lt;= interval_block(s) start/end &lt;= interval_end_time.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">Return the array of gb_usage_point objects.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\"><u><strong>Data Validation</strong></u></p>\n\n<p dir=\"ltr\">As part of the data aggregation process check for zero/null/NaN/absent values in the data and filter them, and update corresponding interval_block_reading to store NULL for all cost/value fields, and add new flag attribute (isMissing) and set it to true.</p>\n\n<h4 dir=\"ltr\"><u><strong>Aggregation Algorithm</strong></u></h4>\n\n<p dir=\"ltr\">Please note that GreenButton supports following interval lengths (durations): <a href=\"https://github.com/energyos/OpenESPI-Common-java/blob/master/etc/espiDerived.xsd#L3098-L3354\">https://github.com/energyos/OpenESPI-Common-java/blob/master/etc/espiDerived.xsd#L3098-L3354</a></p>\n\n<p dir=\"ltr\">So your algorithm should consider these intervals only. If duration is not among these durations documented in the XSD file, then return error.</p>\n\n<h4 dir=\"ltr\"><u><strong>Ruby API Client Framework</strong></u></h4>\n\n<p dir=\"ltr\">You will use <a href=\"https://github.com/lostisland/faraday\">Faraday</a> to communicate with the GreenButton API.</p>\n\n<h4 dir=\"ltr\"><u><strong>Abstracting</strong></u></h4>\n\n<p dir=\"ltr\">Please make sure to create mixin to include the common code/functionality.</p>\n\n<h4 dir=\"ltr\"><u><strong>Setting Up the Gem</strong></u></h4>\n\n<p dir=\"ltr\">Use <a href=\"http://bundler.io/\">Bundler</a> to take care of gem dependencies.</p>\n\n<p dir=\"ltr\">A standard folder structure would look like this :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Gemfile</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">LICENSE.txt</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">README.md</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Rakefile</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">greenbutton.gemspec</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">lib</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">greenbutton</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">version.rb</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">&lt;class-name&gt;.rb</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">model</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">&lt;model-name&gt;.rb</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">greenbutton.rb (the module entry point)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h4 dir=\"ltr\"><u><strong>Writing Tests</strong></u></h4>\n\n<p dir=\"ltr\">All of your code should be test covered (<a href=\"http://rspec.info/\">RSpec</a> preferred).</p>\n\n<p dir=\"ltr\">As mentioned above, you can use the Sandbox or host the sample data to test your solution.</p>\n\n<p dir=\"ltr\">If you see any problem with sandbox stopped behaving normally, post in challenge forums, and we will reset it (Sandbox).</p>\n\n<p dir=\"ltr\">Also since the module accepts the API endpoint to be executed as input parameter, you can use sample data (check References section below) instead of hitting the sandbox directly.</p>\n\n<h4 dir=\"ltr\"><strong><u>Documentation</u></strong></h4>\n\n<p dir=\"ltr\">Because other programmers will be working with your code, and incorporating it into their projects, all functions must be documented in detail in the code (<a href=\"http://tomdoc.org/\">TomDoc</a> preferred - In order to generate HTML properly you will need to use<a href=\"https://github.com/rubyworks/yard-tomdoc\"> Yard TomDoc</a>).</p>\n\n<h4 dir=\"ltr\"><strong><u>Coding Standard</u></strong></h4>\n\n<p dir=\"ltr\">Follows coding standards listed here:</p>\n\n<p dir=\"ltr\"><a href=\"https://github.com/copycopter/style-guide\">https://github.com/copycopter/style-guide</a></p>\n\n<h4 dir=\"ltr\"><strong><u>Readme</u></strong></h4>\n\n<p dir=\"ltr\">Provide a detailed readme file using Markdown language with following information :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Overview</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Setup Prerequisites</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">How to install</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Usage Example</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">How to run Demo and Verify results</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Reference to GreenButton API Documentation</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Reference this Ruby Gem Documentation</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Any details about any limitations of your solution.</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Please note, we&#39;re judging this competition not just on the code, but also on the quality of the documentation, test coverage, and ease of use.</p>\n\n<h4 dir=\"ltr\"><strong><u>References</u></strong></h4>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><a href=\"http://www.greenbuttondata.org/espi/access_tokens/\">http://www.greenbuttondata.org/espi/access_tokens/</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/\">http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><a href=\"http://www.greenbuttondata.org/build/\">http://www.greenbuttondata.org/build/</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/\">energyos.github.io/OpenESPI-GreenButton-API-Documentation/</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Green Button API test access tokens and sandbox: <a href=\"http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/\">http://energyos.github.io/OpenESPI-GreenButton-API-Documentation/API/</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">Sample data:</p>\n\n\t<p>&nbsp;</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Generic:<a href=\"http://services.greenbuttondata.org/sample-data.html\"> http://services.greenbuttondata.org/sample-data.html</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Pacific Gas &amp; Electric:<a href=\"http://energy.gov/downloads/green-button-sample-data-pge\"> http://energy.gov/downloads/green-button-sample-data-pge</a> use file:</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><a href=\"http://energy.gov/sites/prod/files/pge_electric_interval_data_2011-03-06_to_2012-04-06%20E1%20Residential%20Large%20Usage.xml_1.zip\">pge_electric_interval_data_2011-03-06_to_2012-04-06 E1 Residential Large Usage.xml_1.zip</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>&nbsp;</span><span>San Diego Gas &amp; Electric:</span> <a href=\"http://www.sdge.com/sites/default/files/documents/SDGEElectricIntervalDataFeb12011toJan312012.xml?nid=2945\" style=\"line-height: 1.6;\">http://www.sdge.com/sites/default/files/documents/SDGEElectricIntervalDataFeb12011toJan312012.xml?nid=294</a></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n",
  "digitalRunPoints": 720,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30049435",
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "finalFixEndDate": "2015-04-02T15:05:00.000Z",
  "finalSubmissionGuidelines": "<h1 dir=\"ltr\">Deliverable</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">All source code files and scripts that address the challenge requirement.</p>\n\t</li>\n\t<li dir=\"ltr\">Detailed readme file as clarified above.</li>\n</ul>\n",
  "forumId": 28736,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=28736",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 25,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Specification Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-03-22T12:38:00.000Z",
      "actualStartTime": "2015-03-22T12:38:00.000Z",
      "scheduledEndTime": "2015-03-22T12:41:00.000Z",
      "actualendTime": "2015-03-22T12:41:00.000Z",
      "_id": "581dbc8a550dfb3b52be0472"
    },
    {
      "type": "Specification Review",
      "status": "Closed",
      "scheduledStartTime": "2015-03-22T12:41:00.000Z",
      "actualStartTime": "2015-03-22T12:41:00.000Z",
      "scheduledEndTime": "2015-03-22T18:41:00.000Z",
      "actualendTime": "2015-03-22T18:41:00.000Z",
      "_id": "581dbc8a550dfb3b52be0471"
    },
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-03-23T03:00:00.000Z",
      "actualStartTime": "2015-03-23T03:00:00.000Z",
      "scheduledEndTime": "2015-03-26T03:01:00.000Z",
      "actualendTime": "2015-03-26T03:01:00.000Z",
      "_id": "581dbc8a550dfb3b52be0470"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-03-23T03:05:00.000Z",
      "actualStartTime": "2015-03-23T03:05:00.000Z",
      "scheduledEndTime": "2015-03-28T03:05:00.000Z",
      "actualendTime": "2015-03-28T03:05:00.000Z",
      "_id": "581dbc8a550dfb3b52be046f"
    },
    {
      "type": "Screening",
      "status": "Scheduled",
      "scheduledStartTime": "2015-03-28T03:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-03-28T15:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be046e"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2015-03-28T15:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-03-30T15:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be046d"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2015-03-30T15:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-03-31T15:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be046c"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2015-03-31T15:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-04-01T03:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be046b"
    },
    {
      "type": "Aggregation",
      "status": "Scheduled",
      "scheduledStartTime": "2015-04-01T03:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-04-01T15:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be046a"
    },
    {
      "type": "Final Fix",
      "status": "Scheduled",
      "scheduledStartTime": "2015-04-01T15:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-04-02T15:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be0469"
    },
    {
      "type": "Final Review",
      "status": "Scheduled",
      "scheduledStartTime": "2015-04-02T15:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-04-03T03:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be0468"
    },
    {
      "type": "Approval",
      "status": "Scheduled",
      "scheduledStartTime": "2015-04-03T03:05:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-04-08T03:05:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be0467"
    },
    {
      "type": "Post-Mortem",
      "status": "Open",
      "scheduledStartTime": "2015-03-28T03:08:00.000Z",
      "actualStartTime": "2015-03-28T03:08:00.000Z",
      "scheduledEndTime": "2015-03-29T03:08:00.000Z",
      "actualendTime": null,
      "_id": "581dbc8a550dfb3b52be0466"
    }
  ],
  "platforms": [
    "Other"
  ],
  "postingDate": "2015-03-23T03:00:00.000Z",
  "prize": [
    1600,
    800
  ],
  "projectId": 8535,
  "registrants": [
    {
      "handle": "woodjhon",
      "reliability": "0%",
      "registrationDate": "2015-03-23T05:58:00.000Z",
      "submissionDate": null,
      "rating": "782",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be0465"
    },
    {
      "handle": "ahmed.seddiq",
      "reliability": "66%",
      "registrationDate": "2015-03-23T06:17:00.000Z",
      "submissionDate": null,
      "rating": "974",
      "colorStyle": "color: #00A900",
      "_id": "581dbc8a550dfb3b52be0464"
    },
    {
      "handle": "cmax",
      "reliability": "0%",
      "registrationDate": "2015-03-23T06:19:00.000Z",
      "submissionDate": null,
      "rating": "792",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be0463"
    },
    {
      "handle": "peakpado",
      "reliability": "20%",
      "registrationDate": "2015-03-23T07:29:00.000Z",
      "submissionDate": null,
      "rating": "1155",
      "colorStyle": "color: #00A900",
      "_id": "581dbc8a550dfb3b52be0462"
    },
    {
      "handle": "I_Igor",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T08:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0461"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T10:42:00.000Z",
      "submissionDate": null,
      "rating": "514",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be0460"
    },
    {
      "handle": "sapila",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T12:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be045f"
    },
    {
      "handle": "michael_tang",
      "reliability": "0%",
      "registrationDate": "2015-03-23T13:03:00.000Z",
      "submissionDate": null,
      "rating": "497",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be045e"
    },
    {
      "handle": "ohyan07",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T14:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be045d"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T14:47:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be045c"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T16:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be045b"
    },
    {
      "handle": "pvmagacho",
      "reliability": "20%",
      "registrationDate": "2015-03-23T16:29:00.000Z",
      "submissionDate": null,
      "rating": "785",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be045a"
    },
    {
      "handle": "pfilippi",
      "reliability": "0%",
      "registrationDate": "2015-03-23T18:28:00.000Z",
      "submissionDate": null,
      "rating": "1019",
      "colorStyle": "color: #00A900",
      "_id": "581dbc8a550dfb3b52be0459"
    },
    {
      "handle": "iCare",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T21:05:00.000Z",
      "submissionDate": null,
      "rating": "568",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be0458"
    },
    {
      "handle": "mo.sehsah",
      "reliability": "n/a",
      "registrationDate": "2015-03-23T21:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0457"
    },
    {
      "handle": "Luca",
      "reliability": "6%",
      "registrationDate": "2015-03-23T21:29:00.000Z",
      "submissionDate": null,
      "rating": "1387",
      "colorStyle": "color: #6666FF",
      "_id": "581dbc8a550dfb3b52be0456"
    },
    {
      "handle": "ValTrof",
      "reliability": "n/a",
      "registrationDate": "2015-03-24T01:37:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0455"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-03-24T08:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0454"
    },
    {
      "handle": "dexy",
      "reliability": "20%",
      "registrationDate": "2015-03-24T09:05:00.000Z",
      "submissionDate": null,
      "rating": "1739",
      "colorStyle": "color: #DDCC00",
      "_id": "581dbc8a550dfb3b52be0453"
    },
    {
      "handle": "muzehyun",
      "reliability": "0%",
      "registrationDate": "2015-03-24T13:41:00.000Z",
      "submissionDate": null,
      "rating": "672",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be0452"
    },
    {
      "handle": "monumahiya",
      "reliability": "n/a",
      "registrationDate": "2015-03-24T19:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0451"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-03-25T00:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be0450"
    },
    {
      "handle": "ifox",
      "reliability": "n/a",
      "registrationDate": "2015-03-25T05:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be044f"
    },
    {
      "handle": "SePulTribe",
      "reliability": "0%",
      "registrationDate": "2015-03-25T16:15:00.000Z",
      "submissionDate": null,
      "rating": "284",
      "colorStyle": "color: #999999",
      "_id": "581dbc8a550dfb3b52be044e"
    },
    {
      "handle": "roarky",
      "reliability": "n/a",
      "registrationDate": "2015-03-25T18:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc8a550dfb3b52be044d"
    }
  ],
  "registrationEndDate": "2015-03-26T03:01:00.000Z",
  "reliabilityBonus": 320,
  "reviewScorecardId": 30001470,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": 30000412,
  "submissionEndDate": "2015-03-28T03:05:00.000Z",
  "submissions": [],
  "technology": [
    "API",
    "HTML",
    "PostgreSQL",
    "REST",
    "Ruby",
    "Ruby on Rails",
    "SQL"
  ]
}