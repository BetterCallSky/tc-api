{
  "_id": 30051905,
  "_isComplete": true,
  "__v": 2440,
  "_lastUpdate": "2016-11-05T11:03:36.985Z",
  "appealsEndDate": "2015-11-23T07:15:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "SunShot - MySunBuddy Python Integration Code Challenge",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<p dir=\"ltr\"><span style=\"line-height:1.6\">MySunBuddy is a peer-to-peer platform to facilitate the purchase and selling of solar net metering credits.</span></p>\n\n<p dir=\"ltr\">In previous challenges we built the backend code and HTML &nbsp;prototype.</p>\n\n<p dir=\"ltr\">The scope of this challenge is to hook up the provided AngularJS HTML prototype with the provided python backend code.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<h2 dir=\"ltr\">Gitlab Repo</h2>\n\n<p dir=\"ltr\"><a href=\"https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy\">https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy</a></p>\n\n<p dir=\"ltr\">Please check challenge forums to get access.</p>\n\n<h2 dir=\"ltr\">Backend Code</h2>\n\n<p dir=\"ltr\">You are provided with a django REST Api application with sample demo pages that demonstrate the functionality we implemented.</p>\n\n<p dir=\"ltr\">You are encouraged to deploy the app, and play around with it, read the verification steps to understand the functionality/features we have implemented in the backend.</p>\n\n<p dir=\"ltr\">The source code is hosted in gitlab</p>\n\n<p dir=\"ltr\"><a href=\"https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/mysunbuddy-backend-app\">https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/mysunbuddy-backend-app</a></p>\n\n<h2 dir=\"ltr\">UI Prototype</h2>\n\n<p dir=\"ltr\">Available in gitlab</p>\n\n<p dir=\"ltr\"><a href=\"https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/prototype\">https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/prototype</a></p>\n\n<h2 dir=\"ltr\">Integration Note</h2>\n\n<p dir=\"ltr\">As part of this challenge, if there is any backend issue or bug or missing requirement, you will be required to address it.</p>\n\n<h2 dir=\"ltr\">Framework</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- We are using &nbsp;<a href=\"http://www.django-rest-framework.org/\">Django REST Framework</a> for the backend REST API</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- We are using AngularJS for the frontend.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Models Update</h2>\n\n<p dir=\"ltr\">There are new data to collect in the provided UI prototype that we did not currently catch in the provided backend application, you need to address this in this challenge.</p>\n\n<h3 dir=\"ltr\"><u>User Model</u></h3>\n\n<p dir=\"ltr\">Refer to the &ldquo;Signup&rdquo; section in Page and Functionality Requirement section for all required new fields.</p>\n\n<p dir=\"ltr\">The new fields are :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Name: This store the user full name.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- State: This will be a reference to a lookup table that store US states.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- City: This will be a reference to a lookup table that store US cities.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- HighEfficiencyPanels : This field read from &ldquo;Solar Production&rdquo; Tab, possible values are Yes/No.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Fields in &ldquo;Utility Information&rdquo; tab in SIgnup</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- UtilityInformation : possible values &ldquo;Residential&rdquo;/&rdquo;Commerical&rdquo;.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- UtilityProvider : string</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- UtilityBill : file</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Fields in &ldquo;Billing Information&rdquo;, you need to persist &ldquo;SameAsInformation&rdquo; as well in addition to the billing information fields. They are optional if &ldquo;SameAsInformation&rdquo; is &ldquo;yes&rdquo;.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Payment Method tab, the fields in backend can be a new model called &ldquo;PaymentMethod&rdquo; with following fields :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- &ldquo;UserId&rdquo; : referencing the user</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- &ldquo;PaymentMethod&rdquo; : Enum (Credit/Paypal/Wire)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- And other optional fields that cover all fields from the three payment methods, note that only fields from selected &ldquo;payment method&rdquo; will be filled when storing the information.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Mapping Model</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- price_per_kWh : represents a float value (i.e can be between 0.1 and 0.9)</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- ghg_factor : represents the greenhouse gas impact on co2 factor used to calculate the GHG impact.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Deal Model</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- saving : this is calculated saving in the deal.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- ghg_impact : this is the calculated GHG impact on co2</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- document_id : represents the signed docuSign id associated with the deal.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- start_date : represents the deal approval date.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- end_date : represents the deal end date.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>PaymentMethod</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &ldquo;UserId&rdquo; : referencing the user</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &ldquo;PaymentMethod&rdquo; : Enum (Credit/Paypal/Wire)</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- And other optional fields that cover all fields from the three payment methods in the registration flow, note that only fields from selected &ldquo;payment method&rdquo; will be filled when storing the information.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Partners Matching Job Scheduler Update</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- match_script.py is used to match partners.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- execute this script after each each new registration.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- for testing purpose, it is preferred you provide instruction how to create a cron job that execute the script every few minutes.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You need to do the following update to this job scheduler to calculate the new Deal fields:</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- saving field :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Formula : deal#quantity * mapping#price_per_kWh * DISCOUNT</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- DISCOUNT is configurable value, use 0.15 in this challenge.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- ghg_impact field :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Formula : deal#quantity * mapping#ghg_factor</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Deal Approval Logic</h2>\n\n<p dir=\"ltr\">In current python application the flow for approving a deal is as follow :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When deal status is &lsquo;PENDINGSELLER&rsquo; we display this in SELLER dashboard.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If Seller approve the sell the deal status get updated to &lsquo;PENDINGBUYER&rsquo;, the deal will no more appear in seller dashboard, but it get displayed in BUYER dashboard</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer will see the deal in her dashboard, if the buyer approves the deal, the deal status become &lsquo;APPROVED&rsquo;.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If Seller rejected a sell the deal status becomes &lsquo;DENYBYSELLER&rsquo;</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If buyer rejected a buy the deal status becomes &lsquo;DENYBYBUYER&rsquo;</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">The flow need to be changed as follow :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When deal status is &lsquo;PENDINGSELLER&rsquo; we display this in SELLER dashboard.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If Seller approve the sell the deal status get updated to &lsquo;PENDINGBUYER&rsquo;, the deal will no more appear in seller dashboard, but it get displayed in BUYER dashboard</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer will see the deal in her dashboard, if the buyer approves the deal, the deal status become &lsquo;PENDINGSELLERSIGN&rsquo;, this indicates that seller will need to sign docuSign document to proceed in transaction.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Seller will see &lsquo;PENDINGSELLERSIGN&rsquo; deal in her notification section.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Seller open the document and sign it, &nbsp;status become &ldquo;PENDINGBUYERGO&rsquo;, the signed docuSign id is stored in deal model for later retrieval.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer will see &lsquo;PENDINGBUYERGO&rsquo; deal in her dashboard.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Buyer can accept the deal and it becomes &lsquo;APPROVED&rsquo;, we store the current date in start_date and set end_date to (start_date + 6 months), we download docSign document and email it to configurable email address.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If Seller rejected a sell the deal status becomes &lsquo;DENYBYSELLER&rsquo;</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If buyer rejected a buy the deal status becomes &lsquo;DENYBYBUYER&rsquo;</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If seller rejected to sign it becomes &lsquo;DENYSELLERSIGN&rsquo;</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If buyer rejected the final transaction approve step the status become &ldquo;DENYBUYERGO&rsquo;</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">DocuSign Integration</h2>\n\n<p dir=\"ltr\">You are provided with a demo django application that demonstrate how to create a pdf document in docuSign, programmatically fill the document, render it in the page for user to sign, and download the document.</p>\n\n<p dir=\"ltr\">You will need to integrate this flow when SELLER click on &ldquo;Sign Utility Document&rdquo; in notification section in seller dashboard.</p>\n\n<p dir=\"ltr\">The Deny Approval Logic above explains the new flow, the docuSign integration part flow looks like this</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When SELLER click on &ldquo;Sign Utility Document&rdquo; we call backend to load the docuSign, prepopulated with seller information :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Refer to the DeploymentGuide document in provide demo app for sample json, you will pull the corresponding fields from sller user model to set the fields.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Render the docuSign for user in Dashboard to sign.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When signed, download the file, and send it via email to a configurable email address.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The file will be attached in email.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Template should be configurable.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- &ldquo;To&rdquo; and &ldquo;From&rdquo; email addresses should be configurable.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">The source code is hosted in gitlab</p>\n\n<p dir=\"ltr\"><a href=\"https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/docuSign-pdf-signing\">https://gitlab.com/tc-sunshot-r2/ss2-my-sun-buddy/tree/master/docuSign-pdf-signing</a></p>\n\n<h2 dir=\"ltr\">Pages and Functionality Requirement</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Landing Page</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Page : <a href=\"https://demo.topcoder.com/studio/sunshot2-my-sun-buddy/ff2/index.html#/Landing\">#/Landing</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This page will contain static content and mainly used to navigate to signup and signin.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Sign In Popup</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Clicking on Sign In on header will open up the Signin popup.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use /api/login endpoint to process login.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Forgot Password : </strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Clicking on &ldquo;Forgot Password&rdquo; in login popup will show this popup.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use /api/password/reset/ endpoint to reset password.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Reset Password</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use popup same as &ldquo;Forgot Password&rdquo; to allow user to reset their password.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- /api/password/change/ endpoint will be used after user provide valid password in the popup.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Signup : Seller Steps Wizard</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Page : <a href=\"https://demo.topcoder.com/studio/sunshot2-my-sun-buddy/ff2/index.html#/Sign_Up_Seller\">#/Sign_Up_Seller</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The registration wizard will collect all information then store it in backend when clicking on &ldquo;Next&rdquo; in &ldquo;Finish&rdquo; step.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use /api/register endpoint to register the user, refer to the backend to see what fields we are passing. Role to be passed in this flow is SELLER.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Under solar production tab change the following field :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Number of Panels should be &ldquo;Panel Type&rdquo;, this is a drop down field, the possible values are ModuleType enum where values should be user friendly (refer to models for more information)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Clicking on &ldquo;Calculate solar production&rdquo; button logic :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- The three fields top of the button must be provided otherwise show error.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Call GET api/credit/calculate to calculate solar production for the seller by passing the three fields values.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- When popup opens up, the 100% will present the total calculated value return from json, display the calculated value below the range field, user can change the range, value will be updated accordingly, when user close it the &ldquo;Net Credit to Sell&rdquo; % value will be updated to match the value selected.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Update backend to make the following fields configurable not requested from frontend and not persisted in database, they are used in POST api/credit/calculate endpoint:</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- losses</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- array_type</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- tilt angle</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- azimuth angle</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Signup : Buyer Steps Wizard</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Page : <a href=\"https://demo.topcoder.com/studio/sunshot2-my-sun-buddy/ff2/index.html#/Sign_Up_Buyer\">#/Sign_Up_Buyer</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The wizard is same as Seller Steps wizard, we collect few different fields/information, it will create user in &ldquo;Finish&rdquo; tab and will use same endpoint, except we will pass different fields as shown in backend, and role = BUYER.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Buyer Dashboard </strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Page : <a href=\"https://demo.topcoder.com/studio/sunshot2-my-sun-buddy/ff2/index.html#/Buyer\">#/Buyer</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Retrieve current user information from &ldquo;GET /api/account&rdquo; endpoint response when page loads.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Usage Section</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Usage : Use Dummy Data, assume it is 2.5KW.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Initial State : Use Dummy Data, assume it is 10KW<br />\n\t\t\t<img src=\"https://lh5.googleusercontent.com/4x_zSlpVPkJVsvjwZ43imUH8L7jPhGMT-Ax568MHXwha-rWEAd82D722Acnwx5OpkBxpFwSFOZDbD1_dhCzDizfpZb785ADbA49oScjvf_XK_fLJ8iVh_ZeHmVi2NJtw95X1hHnJ\" /></p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><strong>- Summary Tab</strong></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Summary section :<br />\n\t\t\t<img src=\"https://lh3.googleusercontent.com/g8CJC1O7OWPuL0CzdFpsyy5z0fM7R8ov5ZChaJrpjllAUYOOnETY2QEVodR920RSIRUHDzxo43RrSj0SZkaT38C9P-DtBQ2ri19Kh8lhL7QRIaDPKjLHwQjHVWKIyzeaMyNY0O3t\" style=\"height:103px; width:600px\" /></p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- We need to update the GET /api/account to include these three values in response.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Savings : should be aggregated deal#saving field from all completed deals of current user.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- GHG impact : should be aggregated deal#ghg_impact field from all completed deals of current user</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Purchased : should be aggregated deal#quantity from all completed deals of current user.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;We found X matches in your area&rdquo; section and table</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Endpoint to use will be /api/deals?&amp;pending=1</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Use &ldquo;count&rdquo; field from response to render &ldquo;X&rdquo; in &ldquo;We found X matches in your area&rdquo;.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For each record in table it will render &ldquo;items&rdquo;, the area should be scrollable, you need to make this update in UI :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Photo : palceholder for now.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Name : &lsquo;seller&rsquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Amount &nbsp;: set to &ldquo;price&rdquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- KW : set to &ldquo;quantity&rdquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Savings : &nbsp;set to &ldquo;saving&rdquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- GHG Impacts : set to &ldquo;ghg_impact&rdquo; json attribute.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Buy button : this one will call /api/deals/{id}/approve endpoint where id is the deal &ldquo;id&rdquo; json attribute.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- When need to integrate /api/deals/{id}/approve endpoint with DocuSign to allow user to sign a document :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- When user click &ldquo;Buy&rdquo; the backend will fill the PDF and render the document in the website to ask user to &ldquo;sign&rdquo; the document.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- When user sign the document, the backend should retrieve the signed documented from docuSign, then continue in current endpoint logic, and then send the document to a configurable email address.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Refer to &ldquo;DocuSign Integration&rdquo; section below for more information.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo; Google Map&rdquo; Section :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- The seller addresses will be retrieved from endpoint /api/deals/sellers</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Retrieve current user address from /api/account endpoint response.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Render the map same as currently done in the UI prototype using seller and buyer addresses.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;Current Percentage of your bill to buy.&rdquo; section :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- The large circle chart is set using &ldquo;credit_to_buy_percent&rdquo; json field from &nbsp;/api/account endpoint</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- kWh : Represents the monthly usage * credit_to_buy_percent value.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Monthly usage is a dummy value in this challenge as mentioned above.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Price : Represents kWh * the mapping#price_per_kWh of user load-zone/zipcode area.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- GHG Impact : Represents the kWh* mapping#ghg_factor of user load-zone/zipcode area.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Clicking &ldquo;Edit&rdquo; button will open up a popup to allow user to change their credit to buy :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- You need to return current active deals total kWh and prevent the range to go below that value the user is consuming.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- This will use &ldquo;PUT /api/account/edit&rdquo; to update the value.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Three circles below the range field update via JS when the range value changed, calculation is same as mentioned above.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><strong>- MySunBuddy Buyer Tab</strong></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- The table is loaded using deals?limit=10&amp;offset=0 endpoint, pagination should be passed, clicking on &ldquo;load more&rdquo; will load more records, so it is progressive loading ajax.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Response is array from endpoint, each item will be rendered in a record as follow :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Photo : placeholder for now</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- SellerName : is the &ldquo;seller&rdquo; json attribute</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- &ldquo;Dollar Amount&rdquo; : is the &ldquo;price&rdquo; json attribute</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- GHG impact : is the &lsquo;ghg_impact&rsquo; json attribute.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Savings : is the &lsquo;savings&rsquo; json attribute.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Days Left : Depends on start/end dates.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Start Date : is the &lsquo;start_date&rsquo; json attribute.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- End Date : is the &lsquo;end_dae&rsquo; json attribute.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Status : Active or Finished depends on start/end dates.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><strong>- Notifications Section</strong></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- This section will list all actions done in the deals between buyer and sellers.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- JS frontend code should use interval to keep refreshing this section.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Create new endpoint &ldquo;GET /api/buyer/actions/&rdquo;</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- It pulls all deals of last 30 days sorted by transaction_date of status :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- APPROVED</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- DENYSELL</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- DENYSELLSIGN</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- PENDINGBUYERGO</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For approved deal we show the deal information.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For DENYSELL and DENYSELLSIGN deal display &ldquo;Seller &lt;seller-name&gt; cancelled the deal&rsquo; and we display the available information deal information.</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- For PENDINGBUYERGO deal we display &ldquo;Seller &lt;seller-name&gt; approved transaction and waiting your confirmation&gt;&rdquo; and we display the available deal information.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Call /api/deals/{id}/approve if user clicked Confirm</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Call /api/deals/{id}/deny if user clicked Deny</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><strong>- &ldquo;Edit Account&rsquo; button</strong></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- This will open up a popup that will be populated with user account.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Updated information will be passed to backend using &ldquo;PUT /api/account/edit&rdquo; endpoint.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- You need to add &lsquo;password&rsquo; field in Account Info section and it must be required before submitting the form, it is used to verify that user is owner of the profile.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Seller Dashboard</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Page : <a href=\"https://demo.topcoder.com/studio/sunshot2-my-sun-buddy/ff2/index.html#/Seller\">#/Seller</a></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Retrieve current user information from &ldquo;GET /api/account&rdquo; endpoint response when page loads.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Usage section :<br />\n\t\t<img src=\"https://lh6.googleusercontent.com/OwsqH9uGRzRUpcf0Q8X-u5v8ihCVSHAu5I9DnImi-FY0Q0E5mDyR3cH8324Y7qg8lFje1R-ld6TgvPFHV6iHQWhcM7zvi4Duo1l5cDDYxugtr8WviT6brG7xGVzFlNVywZX8Nq2E\" /></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;Left&rdquo; value represents the remaining solar power to be sold this month. This can be calculated by subtracting the credit to sell from all approved transactions of current month.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;Contracted&rdquo; value represents the total solar power of approved transactions of current month.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Update &ldquo;GET /api/account&rdquo; endpoint to calculate the above two values and set them in response.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><strong>- Summary Tab</strong><br />\n\t\t<img src=\"https://lh6.googleusercontent.com/pn3xK3l3-i7o41o7xVqqEf6U4e40P_OPZKf4utl2mfsx71McbaB36j9mOIuccxrr6IGsK089bV9zvbhJ7PTqKlCqTOCeR4YbA1zqcKFbMwG-5zJeqX3E2JtPs0gw0sXPX-vCJHyL\" style=\"height:101px; line-height:1.6; width:600px\" /></p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><strong>- Earning Section</strong></p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">The values map as follow :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t<p dir=\"ltr\">- &ldquo;Pending value of monetary credits&rdquo; : represents the total (deal#price) active transactions of current month.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t<p dir=\"ltr\">- Earning to date : this should aggregate the total deal#price of completed deals.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t<p dir=\"ltr\">- Capacity Sold : this should aggregate total solar power &lsquo;deal#quantity&rsquo; sold in all completed deals.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Update &ldquo;GET /api/account&rdquo; endpoint to aggregate the above three values and set them in response.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><strong>- &ldquo;We found X matches in your area&rdquo; section and table</strong></p>\n\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- Endpoint to use will be /api/deals?&amp;pending=1</p>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- Use &ldquo;count&rdquo; field from response to render &ldquo;X&rdquo; in &ldquo;We found X matches in your area&rdquo;.</p>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- For each record in table it will render &ldquo;items&rdquo;, the area should be scrollable, you need to make this update in UI :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t<p dir=\"ltr\">- Photo : palceholder for now.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Sell button : this one will call /api/deals/{id}/approve endpoint where id is the &ldquo;id&rdquo; json attribute.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- KW : set to &ldquo;quantity&rdquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Amount &nbsp;: set to &ldquo;price&rdquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Name : &lsquo;buyer&rsquo; json attribute</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><strong>- &ldquo; Google Map&rdquo; Section :</strong></p>\n\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- We need to implement an endpoint similar to &ldquo;GET /api/deals/sellers&rdquo; to retrieve buyers of current month for logged in user.</p>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- Retrieve current user address from /api/account endpoint response.</p>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- Render the map same as currently done in the UI prototype using seller and buyer addresses.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><strong>- &ldquo;Current Percentage of solar production to sell&rdquo; section :</strong></p>\n\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- The large circle chart is set using &ldquo;credit_to_sell_percent&rdquo; json field from &nbsp;/api/account endpoint</p>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<p dir=\"ltr\">- Clicking &ldquo;Edit&rdquo; button will open up a popup to allow user to change their credit to sell :</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t<p dir=\"ltr\">- This will use &ldquo;PUT /api/account/edit&rdquo; to update the value.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- MySunBuddy Seller Tab</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The table is loaded using deals?limit=10&amp;offset=0 endpoint, pagination should be passed, so it is progressive loading ajax.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Response is array from endpoint, each item will be rendered in a record as follow :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Photo : placeholder for now</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- BuyerName : is the &ldquo;buyer&rdquo; json attribute</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;Dollar Amount&rdquo; : is the &ldquo;price&rdquo; json attribute</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- &ldquo;KW&rdquo; &nbsp;: is the &ldquo;quantity&rdquo; json attribute.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Days Left : Depends on start/end dates.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Start Date : is the &lsquo;start_date&rsquo; json</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- End Date : is the &lsquo;end_date&rsquo; json</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Status : Active or Finished depends on start/end dates.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Notifications Section</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This section will list all actions done in the deals between seller and buyers.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- JS frontend code should use interval to keep refreshing this section.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Create new endpoint &ldquo;GET /api/ctions/seller&rdquo;</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- It pulls all deals of last 30 days sorted by transaction_date of status :</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- APPROVED</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- DENYBUY</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- DENYBUYGO</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- PENDINGSELLERSIGN</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- For approved deal we show the deal information.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- For DENYBUY and DENYBUYGO deal display &ldquo;Buyer &lt;buyer-name&gt; cancelled the deal&rsquo; and we display the available information deal information.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- For PENDINGSELLERSIGN deal we display &ldquo;Buyer &lt;buyer-name&gt; want to allow a transaction and waiting your confirmation&gt;&rdquo; and we display the available deal information.</p>\n\n\t\t\t<ul>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- When user click sign utility document we take display docuSign document to sign. On successful sign we complete the deal flow as explained in &ldquo;Deal Approval Logic&rdquo; section above.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t\t<p dir=\"ltr\">- Refer to DocuSign Integration section above for more information.</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- Call /api/deals/{id}/deny if user clicked Decline.</p>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- &ldquo;Edit Account&rsquo; button</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will open up a popup that will be populated with user account.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Updated information will be passed to backend using &ldquo;PUT /api/account/edit&rdquo; endpoint.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- You need to add &lsquo;password&rsquo; field in Account Info section and it must be required before submitting the form, it is used to verify that user is owner of the profile.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">General Note</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Logging, validation, error handling must be properly implemented.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- All sensitive information, and environment specific information should be configurable.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Hosting</h2>\n\n<p dir=\"ltr\">It is preferred if you host your solution in Heroku.</p>\n\n<h2 dir=\"ltr\">Python Framework</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use <a href=\"http://www.django-rest-framework.org/\">Django REST Framework</a> to build the REST API backend.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use ORM module for database, either django rest one or <a href=\"http://www.sqlalchemy.org/\">sqlalchemy</a>.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Technology</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Python version 3.x running on Ubuntu</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Postgres 9.4</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Django 1.8.x</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- AngularJS</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Bootstrap</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Abstracting and Design Patterns</h2>\n\n<p dir=\"ltr\">Please make sure to create helper/interface to include the common code/functionality.</p>\n\n<p dir=\"ltr\">Also please make sure your design is flexible, use facade design pattern and adapter design pattern (and any other proper design pattern) to enable future extensibility of the solution.</p>\n\n<h2 dir=\"ltr\">Coding Standard</h2>\n\n<p dir=\"ltr\">Follow python coding best practices : <a href=\"http://www.python.org/dev/peps/pep-0008/\">PEP 8</a> for the main text, and<a href=\"http://www.python.org/dev/peps/pep-0257/\"> PEP 257</a> for docstring conventions</p>\n\n<h2 dir=\"ltr\">Documentation</h2>\n\n<p dir=\"ltr\">Your solution must be well documented.</p>\n\n<h2 dir=\"ltr\">Readme</h2>\n\n<p dir=\"ltr\">Provide a detailed readme file using Markdown language with following information :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Overview</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Setup Prerequisites</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Configurations</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Deployment</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Any details about any limitations of your solution.</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">Please note, we&#39;re judging this competition not just on the code, but also on the quality of the documentation, and ease of use.</p>\n\n<h1 dir=\"ltr\">&nbsp;</h1>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30051905",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<h1 dir=\"ltr\">Deliverable</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Git patch file of changes.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Deployment document with verification steps</p>\n\t</li>\n</ul>\n",
  "forumId": 31017,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=31017",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 26,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-11-14T19:14:00.000Z",
      "actualStartTime": "2015-11-14T19:14:00.000Z",
      "scheduledEndTime": "2015-11-19T19:15:00.000Z",
      "actualendTime": "2015-11-19T19:15:00.000Z",
      "_id": "581dbc88550dfb3b52be01e8"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-11-14T19:19:00.000Z",
      "actualStartTime": "2015-11-14T19:19:00.000Z",
      "scheduledEndTime": "2015-11-19T19:15:00.000Z",
      "actualendTime": "2015-11-19T19:15:00.000Z",
      "_id": "581dbc88550dfb3b52be01e7"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-19T19:15:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-21T19:15:00.000Z",
      "actualendTime": null,
      "_id": "581dbc88550dfb3b52be01e6"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-21T19:15:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-22T19:15:00.000Z",
      "actualendTime": null,
      "_id": "581dbc88550dfb3b52be01e5"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-22T19:15:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-23T07:15:00.000Z",
      "actualendTime": null,
      "_id": "581dbc88550dfb3b52be01e4"
    }
  ],
  "platforms": [
    "Heroku"
  ],
  "postingDate": "2015-11-14T19:14:00.000Z",
  "prize": [
    1800,
    900
  ],
  "projectId": 9156,
  "registrants": [
    {
      "handle": "Luca",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T19:38:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01e3"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T22:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01e2"
    },
    {
      "handle": "son4moon",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T23:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01e1"
    },
    {
      "handle": "vvvpig",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T00:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01e0"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T01:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01df"
    },
    {
      "handle": "cjalmeida",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T02:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01de"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T03:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01dd"
    },
    {
      "handle": "kumar.dh246",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T04:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01dc"
    },
    {
      "handle": "deedee",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T05:51:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01db"
    },
    {
      "handle": "ptarunn",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T07:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01da"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T09:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d9"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T09:47:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d8"
    },
    {
      "handle": "ananthhh",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T11:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d7"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T14:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d6"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T00:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d5"
    },
    {
      "handle": "billthu",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T08:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d4"
    },
    {
      "handle": "agus.mw",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T08:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d3"
    },
    {
      "handle": "vimrc",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T12:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d2"
    },
    {
      "handle": "jaindsonvs",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T11:32:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d1"
    },
    {
      "handle": "jorje.b",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T14:45:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01d0"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2015-11-17T06:24:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01cf"
    },
    {
      "handle": "wangke",
      "reliability": "n/a",
      "registrationDate": "2015-11-18T01:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01ce"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2015-11-18T17:31:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01cd"
    },
    {
      "handle": "zaixiang",
      "reliability": "n/a",
      "registrationDate": "2015-11-19T01:25:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01cc"
    },
    {
      "handle": "harsh157",
      "reliability": "n/a",
      "registrationDate": "2015-11-19T10:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01cb"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2015-11-19T11:32:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbc88550dfb3b52be01ca"
    }
  ],
  "registrationEndDate": "2015-11-19T19:15:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-19T19:15:00.000Z",
  "submissions": [],
  "technology": [
    "API",
    "Angular.js",
    "CSS",
    "HTML",
    "JavaScript",
    "PostgreSQL",
    "Python"
  ]
}