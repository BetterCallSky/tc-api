{
  "_id": 30051616,
  "_isComplete": true,
  "__v": 0,
  "_lastUpdate": "2016-10-27T17:51:08.792Z",
  "appealsEndDate": "2015-11-13T05:35:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "SunShot - Bright Harvest - NodeJS REST API Code Challenge",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p dir=\"ltr\">Bright Harvest web app will provide our clients with flexible residential solar designs, faster turnaround, time and lower cost of delivering our innovative precision remote PV design services.</p>\n\n<p dir=\"ltr\">The goal of this challenge is to build a REST API backend for the web application.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<p dir=\"ltr\">You will address the following in this challenge:</p>\n\n<h3 dir=\"ltr\"><u>NodeJS Framework and Modules</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You will use MySQL, NodeJS, ExpressJS, and AngularJS stack in this challenge.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You are required to use open source node module such as <a href=\"https://github.com/caolan/async\">async</a> to deliver a high quality, well organized code.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use passportjs to implement google login/signup.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Third party code must not have GPL or AGPL license. MIT and Apache licenses are acceptable.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Entity Models and Database Schema</u></h3>\n\n<p dir=\"ltr\">Provided in challenge forums the Database schema document, please follow it to build the models and database schema</p>\n\n<p dir=\"ltr\">Note the following :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- If the field of any object is required unless it has (optional) label.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- primary Ids will be auto generated, not passed to endpoints.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Auditing fields will be set in backend not passed to endpoints</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- if access_token is passed to the endpoint, then createdUserId/modifiedUserId will be set to that user.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- created field will set to current date.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- modified field will set to modified date.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Validation</u></h3>\n\n<p dir=\"ltr\">Perform the following validation in each API endpoint :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Validate access token for API endpoints that require access_token</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Path parameters :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- They usually represents the ID of existing objects, a validation should be done that the entity with ID exists, otherwise return error.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Required input parameters in create endpoints must be present. For update endpoints we can pass only the fields that should be updated.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Required input parameters should be validated against their expected type.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Optional input parameters should be validated against their expected type if provided.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Foreign keys must be validated.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Validation between callbacks must be performed.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Errors should be in json format with three fields :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- code : http status code</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- status : success/failed</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- message : reason of failure</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Logging</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Add proper logging for method entry, method exit at INFO level.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Add proper logging for input parameters, and return parameters at DEBUG level.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Add proper logging for errors in ERROR level.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use watson for logging, make the logging level configurable, and preferred to separate log files by level.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Request and Response</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- GET endpoints parameters will accept parameters as query strings, in key/value format.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Create/Update endpoint parameters will accept input as JSON format.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Exclude file upload endpoints which cannot work with application/json content type.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Response should be in json format always.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Role Based Authorization</u></h3>\n\n<p dir=\"ltr\">Currently we have only two roles : admin and client roles.</p>\n\n<p dir=\"ltr\">You need to apply authorization per role, here is a breakdown by table for what each role can do what in the application :</p>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">users: Client can create a new record and edit only their own record. Admin has full access to any record (CRUD).</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">companies: Client has no access except to read (but not edit) which company they are a member of. Admin has full access.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">projects: Client can create a record. Client can edit record but only if clientStatus is &quot;In queue&quot;, &quot;Hold&quot;, &quot;Payment pending&quot; or &quot;Revision requested&quot;. In all other cases, client has read only permissions. We don&#39;t want to allow the client to change the parameters of the order after we have started working on it. Admin has full access.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">siteModels: Client has read only access. Admin has full access.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">layouts: Client has read only access to layouts created by BHS Admin (the UI is not clearly defined for this case). Client has read/write (but not delete) to layouts created by any other Client who has access to the same layout. BHS Admin has full access.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">notes: Client can only create new notes (no edit or delete) and has read access to all notes attached to the project except internal notes. BHS Admin has full access.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">attachments: Client and BHS Admin both have full access.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>REST API Endpoints</u></h3>\n\n<p dir=\"ltr\">You will implement basic CRUD API endpoints for all the tables in addition to authorization endpoints, here are a breakdown of the requirements : &nbsp;</p>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>Login</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Route : POST /login</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Request body parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- username (required)</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- password (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It returns output as json object :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- access_token : should be used in all secured api endpoints</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- user_role : this is the user role</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- user_name : the user name</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Create New User</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Route : POST /users</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Headers parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- access_token (optional) : if passed it should be for an admin role.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Request body parameters - Should be the users table fields excluding auditing fields,</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Note that the following are set only if the caller is an admin</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- role</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- initials</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The endpoint will create a new User record in database with role &lsquo;client&rsquo; if the creator is not &lsquo;admin&rsquo;.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Send email to user :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Send welcome email if user registered manually.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Send notification email to notify the user she was added to the application.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Both email templates should be configurable.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It returns 200 success response with users object as response.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Register/Login with Google</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Route: GET /login/google and GET /login/google/callback</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use passportjs to implement login with google</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The GET /login/google endpoint will use the passportjs to create the authorization url to google, response will be the authorization url.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The GET /login/google/callback will handle the callback from google</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- it will check if user with email already exists, if yes, then it will connect user with google account and login the user</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- If no user with email exists then return error that &ldquo;user with email does not exist. you should register first&rdquo;</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be a json object same as the one return from login endpoint.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Forgot password</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : POST /forgotpassword</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameter is :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>email address (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoint logic :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- validate the email address using regex</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- check if there is a user with email, if not, return error</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- create a reset password link with expiration date</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- send reset password email to user</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- the email template should be configurable</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\">- the from email should be configurable</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Response should be json with &lsquo;success&rsquo; : true value on success, or success : false with message field set for reason of failure.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Reset User Password</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /resetpassword</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters are the query string parameters constructed in Forgot Password endpoint.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>response will be same as Forgot Password response, it should be a &lsquo;success&rsquo; attribute with true/false depends on the execution result, with &lsquo;message&rsquo; attribute if it is a failure.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Update User</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: PUT /user/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Id : represents users object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters are :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Users fields to be updated.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint will update the users object with provided new information</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>It should add additional validation :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>username/email should be unique so we need to validate that the new username/email don&rsquo;t already taken by another user</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>It returns 200 success response with user object as response.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET User</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /user/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the users object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the users object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete User</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /user/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the users object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Users list </strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /users</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint return list of User objects</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>offset (optional) - default to 0</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>limit (optional) - default to 10</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_column (optional ) - default to modified field.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_direction (optional) - default to desc, from newest to oldest.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Using the pagination and sorting information retrieve the users objects with following fields:</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>userId</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>userName</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>fullName</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>email</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>role</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>created</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>modified</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Companies List</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /companies</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint return list of &ldquo;companies&rdquo; objects.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>offset (optional) - default to 0</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>limit (optional) - default to 10</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_column (optional ) - default to Modified date</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_direction (optional) - default to desc, from newest to oldest.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Using the pagination and sorting information retrieve the &ldquo;companies&rdquo; objects, and for each companies object in result calculate members count using companiesUsers table and set it in the companies object json object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Create New Company</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: POST /companies</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoints is to create new company</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input body parameters are</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>all companies table fields excluding auditing fields.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>array of member ids to associate with it. (optional)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Create new company entity and associate passed members with the company entity in usersCompanies table.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the created companies object with members as child array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Update Existing Company</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: PUT /company/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoints is to update existing company</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the companies object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input body parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>companies fields to be updated.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>array of member ids to associate with it. (optional)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Update company entity and associate passed members with the passed in information.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the updated companies object with members as child array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET Company</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /company/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the companies object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the companies object with members as child array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete Company</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /company/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the companies object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Projects Lists</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /projects</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoint return list of projects.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>clientStatus - represents projects.clientStatus</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>offset (optional) - default to 0</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>limit (optional) - default to 10</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_column (optional ) - default to Modified date for client role, default to Due date for admin role.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>sort_direction (optional) - default to desc, from newest to oldest.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>If the user is admin then search all projects, if the user is client then search only projects for companies the user belongs to.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Using the provided input parameters to retrieve the projects objects with only the following fields to be returned:</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectId</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectName</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectAddress</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>created</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>modified</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>clientStatus</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>bhsStatus</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>For each project pull the most recent note associated. (if exists)</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the objects.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Search Projects</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /projects/search</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoint return list of projects that match the search criteria</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>keyword (required) : represents the text to search Projects documents.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>If the user is admin then search all projects, if the user is client then search only projects for companies the user belongs to.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The search logic will search projectName and projectAddress for matches</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Response will be array of Project json objects with following attributes:</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectName</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectId</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>projectAddress</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Project</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /project/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint is used to retrieve Project of the provided identifier</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the project document identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return project object of the provided id in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- New Project</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: POST /projects</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoint creates new project.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input body parameters will be :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>the projects table fields excluding auditing fields, clientStatus and bhsStatus.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>list of attachment ids</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Add proper validation for input parameters</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Insert new Project record using the provided input parameters.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>clientStatus: default is &quot;Payment pending&quot;. If company.creditAccount == true, default is &quot;In queue&quot;</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>bhsStatus: default is &quot;Not started&quot;</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Update attachments records of the passed ids to reference the created projects record.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>It returns 200 success response. with project object as response.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Update Project</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : PUT /project/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The endpoint creates new project.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>{id} represents the project id</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input body parameters will be :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>the projects table fields excluding auditing fields.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>list of attachment ids</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Update the existing project with provided parameters</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>There are several automatically triggered transitions:</p>\n\n\t\t\t<ol>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>clientStatus = &quot;Canceled&quot; then change bhsStatus to &quot;Canceled&quot;</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>If BHS Admin changes bhsStatus to &quot;Modeling&quot;, &quot;Ready for PV&quot;, &quot;Adding PV&quot;, &quot;In review&quot;, &quot;QA revision&quot;, &quot;Updated&quot; or &quot;Approved&quot;, clientStatus should be automatically changed to &quot;In progress&quot;</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>If bhsStatus is &quot;Approved&quot; and deliveryTime of the most recently added siteModel is less than current time, the clientStatus and bhsStatus should be changed to &quot;Delivered&quot;</p>\n\t\t\t\t</li>\n\t\t\t\t<li dir=\"ltr\">\n\t\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>If clientStatus = &quot;Request revision&quot; then change bhsStatus to &quot;Not started&quot;</p>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Update attachments records of the passed ids to reference the created projects record.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>It returns 200 success response. with project object as response.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete Project</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /project/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the projects object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Company Users</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /company/{id}/users</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the company identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint returns the users of the passed in company from companiesUsers table.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be array of user objects in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Create New Site Model</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : POST /siteModel</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>input parameters will be the siteModels table fields excluding auditing fields.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be the created siteModels record.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Update Site Model</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : PUT /siteModel/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the siteModels record id.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>input parameters will be the siteModels input parameters to be updated excluding auditing fields.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be the created siteModels record.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Projects SiteModels</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /project/{id}/siteModels</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the projects identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint returns the siteModels of the passed in project id.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be array of siteModels objects in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET SiteModels</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /siteModel/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the siteModels object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the siteModels object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete SiteModels</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /siteModel/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the siteModels object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Create New Layout</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : POST /layouts</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters will be the layouts table fields excluding siteModels repeated fields and auditing fields.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>When creating the new record we pull the siteModels of passed siteModels id, and populate the repeated fields with the passed input parameters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Add validation for input parameters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be the created layouts record.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Update Existing Layout</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : PUT /layout/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>{id} - represents the layouts parameter.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Input parameters will be the layouts table fields excluding auditing fields.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>When updating we only update the fields of the passed input parameters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Add validation for input parameters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be the updated layouts record.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get SiteModel Layouts</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /siteModel/{id}/layouts</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the siteModels identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint returns the layouts of the passed in siteModel id.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be array of layouts objects in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- GET Layout</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /layout/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the layout object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the layouts object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete Layout</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /layout/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the layouts object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- New Note</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">Route : POST /notes</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The input parameters are the notes table fields.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>add proper validation.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>insert new notes record in database.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Note</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /Note/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the note object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the note object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Project Notes</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /project/{id}/notes</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the project identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint returns the notes of the passed in project id.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be array of notes objects in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Delete Note</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : DELETE /Note/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the notes object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Perform a hard delete of the record of the passed ID.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Upload files</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: PUT /files</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- this is used to upload files, it should return unique identifier of the file to be used or associated with the project</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- it should accept multiple files upload</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Upload file to Google Cloud Storage via API</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- you can use this library <a href=\"https://github.com/GoogleCloudPlatform/gcloud-node\">https://github.com/GoogleCloudPlatform/gcloud-node</a></p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- create new attachments records in database, it should reference the google cloud uploaded file.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- projectId will be set to null for newly uploaded files.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- response will be json array of attachment ids.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get File</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /file/{id}</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Path parameters :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the file object identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Headers</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Return the file object from google cloud.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Get Project Files</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route: GET /project/{id}/files</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>headers :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>access_token (required)</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>path parameter :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\"><span>-&nbsp;</span>id : represents the project identifier</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This endpoint returns the attachments records of the passed in project id.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>The response will be array of attachments in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Role Lookup</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route GET /roles</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This returns list of roles</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>This is public endpoint</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Response will be list of role mongo documents in json format.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><strong>- Timezones Lookup</strong></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Route : GET /timezones</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Lookup endpoint to get list of timezones supported in the system</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>Response is array of id and display fields</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Postman Client JSON</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>Create postman json file listing all calls and sample data.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>Provide description for endpoints (recent postman version support endpoint descriptions)</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>Get Started with Postman : <a href=\"http://www.getpostman.com/\">http://www.getpostman.com/</a></p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Hosting</u></h3>\n\n<p dir=\"ltr\">It is preferred if you provide scripts and steps to deploy the application in google cloud platform</p>\n\n<p dir=\"ltr\"><a href=\"https://cloud.google.com/nodejs/\">https://cloud.google.com/nodejs/</a></p>\n\n<h3 dir=\"ltr\"><u>Documentation</u></h3>\n\n<p dir=\"ltr\">Provide a detailed README documentation for how to setup and configure the application.</p>\n\n<h3 dir=\"ltr\"><u>Configurations</u></h3>\n\n<p dir=\"ltr\">You are expected to use environment variables to store sensitive information and environment-specific configurations. &nbsp;&nbsp;&nbsp;</p>\n\n<h2 dir=\"ltr\">Folder Structure and Configuration</h2>\n\n<p dir=\"ltr\">Follow this folder structure :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>config/&nbsp;&nbsp; &nbsp;</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span>-&nbsp;</span>config.js &nbsp;&nbsp;&nbsp;</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>app.js</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>controllers/</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>models/</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>services/</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>helpers/</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>README.md</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>env-sample (don&#39;t include .env in your submission)</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span>-&nbsp;</span>.. other files if needed</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">For configuration, we expect routes and other sensitive config will be configured in config/config.js, we prefer if you use<a href=\"https://github.com/lorenwest/node-config\"> node-config</a> module for that. but We will leave it up to you to use the proper approach.</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30051616",
  "finalSubmissionGuidelines": "<h1 dir=\"ltr\">Deliverable</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- All source code that implement the requirement.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- README in markup language</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Verification document contains steps to verify your solution.</p>\n\t</li>\n\t<li dir=\"ltr\">- Sample input file.</li>\n</ul>\n\n<h1 dir=\"ltr\">&nbsp;</h1>\n",
  "forumId": 30728,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=30728",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 32,
  "numberOfSubmissions": 2,
  "postingDate": "2015-11-02T13:39:00.000Z",
  "projectId": 9158,
  "registrationEndDate": "2015-11-07T14:38:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-07T14:39:00.000Z",
  "submissions": [
    {
      "handle": "spanhawk",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 91.88,
      "finalScore": 95,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2015-11-07T14:32:00.000Z",
      "_id": "58123e8ce0be5f30ae56467f"
    },
    {
      "handle": "peakpado",
      "placement": 2,
      "screeningScore": null,
      "initialScore": 82.5,
      "finalScore": 85,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2015-11-07T12:15:00.000Z",
      "_id": "58123e8ce0be5f30ae56467e"
    }
  ],
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-11-02T13:39:00.000Z",
      "actualStartTime": "2015-11-02T13:39:00.000Z",
      "scheduledEndTime": "2015-11-07T14:38:00.000Z",
      "actualendTime": "2015-11-07T14:38:00.000Z",
      "_id": "58123e8ce0be5f30ae56467d"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-11-02T13:44:00.000Z",
      "actualStartTime": "2015-11-02T13:44:00.000Z",
      "scheduledEndTime": "2015-11-07T14:39:00.000Z",
      "actualendTime": "2015-11-07T14:39:00.000Z",
      "_id": "58123e8ce0be5f30ae56467c"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2015-11-07T14:39:00.000Z",
      "actualStartTime": "2015-11-07T14:39:00.000Z",
      "scheduledEndTime": "2015-11-11T17:23:00.000Z",
      "actualendTime": "2015-11-11T17:23:00.000Z",
      "_id": "58123e8ce0be5f30ae56467b"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2015-11-11T17:23:00.000Z",
      "actualStartTime": "2015-11-11T17:23:00.000Z",
      "scheduledEndTime": "2015-11-12T17:24:00.000Z",
      "actualendTime": "2015-11-12T17:24:00.000Z",
      "_id": "58123e8ce0be5f30ae56467a"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2015-11-12T17:24:00.000Z",
      "actualStartTime": "2015-11-12T17:24:00.000Z",
      "scheduledEndTime": "2015-11-13T05:35:00.000Z",
      "actualendTime": "2015-11-13T05:35:00.000Z",
      "_id": "58123e8ce0be5f30ae564679"
    }
  ],
  "registrants": [
    {
      "handle": "diogenesjcs",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T23:55:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564678"
    },
    {
      "handle": "hash3r",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564677"
    },
    {
      "handle": "spanhawk",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:05:00.000Z",
      "submissionDate": "2015-11-07T14:32:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564676"
    },
    {
      "handle": "phead",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:11:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564675"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564674"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:37:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564673"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T15:45:00.000Z",
      "submissionDate": "2015-11-07T12:15:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564672"
    },
    {
      "handle": "code56Life",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T16:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564671"
    },
    {
      "handle": "pfilippi",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T16:47:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564670"
    },
    {
      "handle": "sah2ed",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T17:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466f"
    },
    {
      "handle": "571555",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T17:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466e"
    },
    {
      "handle": "son4moon",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T17:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466d"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T20:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466c"
    },
    {
      "handle": "gondzo",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T20:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466b"
    },
    {
      "handle": "panoptimum",
      "reliability": "n/a",
      "registrationDate": "2015-11-02T22:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56466a"
    },
    {
      "handle": "dpebble",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T00:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564669"
    },
    {
      "handle": "renqingwei123",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T00:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564668"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T01:09:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564667"
    },
    {
      "handle": "Luckyodell",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T01:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564666"
    },
    {
      "handle": "serfire",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T04:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564665"
    },
    {
      "handle": "ananthhh",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T04:33:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564664"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T04:44:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564663"
    },
    {
      "handle": "dima_pp",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T07:29:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564662"
    },
    {
      "handle": "DHEERAJSONI",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T09:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564661"
    },
    {
      "handle": "jaindsonvs",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T11:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564660"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T16:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465f"
    },
    {
      "handle": "notpad",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T16:29:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465e"
    },
    {
      "handle": "vimrc",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T01:44:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465d"
    },
    {
      "handle": "meganie",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T10:12:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465c"
    },
    {
      "handle": "java1980",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T12:04:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465b"
    },
    {
      "handle": "Sky_",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T01:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae56465a"
    },
    {
      "handle": "prafullakiran",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T05:28:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e8ce0be5f30ae564659"
    }
  ],
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "prize": [
    1500,
    800
  ],
  "technology": [
    "MySQL",
    "Node.js",
    "REST"
  ],
  "platforms": [
    "NodeJS"
  ]
}