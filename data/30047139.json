{
  "_id": 30047139,
  "_isComplete": true,
  "__v": 2452,
  "_lastUpdate": "2016-11-05T11:07:42.935Z",
  "appealsEndDate": "2014-11-22T06:23:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "WCS - Update UI Prototype with AngularJS and connect to NodeJS server (Part 2)",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-11-18T18:23:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -62012599,
  "currentStatus": "Cancelled - Zero Submissions",
  "detailedRequirements": "<p><strong>Project Overview</strong></p>\n\n<p>We are building a web based application that allows Construction Project Managers to track tasks and the number of hours spent on each task, their costs, materials and equipment.</p>\n\n<p>Currently, they are using a legacy Powerbuilder application along with emails and spreadsheets to track their progress. With this project, we are seeking to modernize this by building a HTML5 based web application.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Challenge Overview</strong></p>\n\n<p>We have a UI Prototype for the front end of the challenge. In addition to the front end, we have a back end written in Node.js.</p>\n\n<p>This challenge deals with updating the UI Prototype to use AngularJS and connect the prototype with Node.js backend.</p>\n\n<p>This is the second challenge in a series of WCS challenges. The first challenge can be found <a href=\"http://community.topcoder.com/tc?module=ProjectDetail&amp;pj=30046849\">here</a><strong>. </strong>This challenge deals with a new set of pages that need to be updated using Angularjs.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Message for participants</strong></p>\n\n<p>Note that the requirements are as detailed as possible. However, the functions that are required themselves are minimal.</p>\n\n<p>We already have the submission from the first challenge - this contains directives and code common for the application which reduces your effort for the current challenge drastically.</p>\n\n<p>Although we are using SQL Server for the backend, the same is easy to set up and configure by following the deployment guide (let us know if you run into any trouble). There is already code to carry out CRUD operations on the database.</p>\n\n<p>Thus, even if you know Angularjs and Nodejs, you should be comfortable working on this challenge. Don&#39;t be deterred by the length of the requirements. You can reuse much of the existing code and need not have to create all of it from scratch.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Challenge Details</strong></p>\n\n<p>After registration, you will be provided with the UI Prototype files and the Node.js backend application. This will be available in the challenge forums.</p>\n\n<p>Install the backend application using the deployment guide. Carry out this step carefully and verify that you have installed it correctly - see the verification section in the deployment guide.</p>\n\n<p>From the first challenge, we already have completed converting some pages to use AngularJS. You should be able to see the same in the application files.</p>\n\n<p>&nbsp;</p>\n\n<p>For this challenge, we outline the page(s) of the UI Prototype that you need to be converted to AngularJS. &nbsp;You may have to create any additional routes or enhance existing ones in the Node.js server to provide the data for this application.</p>\n\n<p>Use the code of the first challenge and enhance it with the pages mentioned.</p>\n\n<p>&nbsp;</p>\n\n<p>You will notice that there are two variations of each page.&nbsp;</p>\n\n<p>One for &quot;Admin&quot; users and one for &quot;Superintendent&quot; users. These are the only two user roles for this application.</p>\n\n<p>Depending on the role of the user logged in, show the appropriate page.</p>\n\n<p>&nbsp;</p>\n\n<p>You will get the list of pages and changes to make in the challenge forum (shown only after registration).</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Offline Web Application</strong></p>\n\n<p>&nbsp;</p>\n\n<p>Certain pages are available in the offline mode. This means that once a user logs in, the user is able to navigate through these pages without the need to have an internet connection. Update the Node.js server to provide a manifest file of the available offline web pages.</p>\n\n<p>Other than the&nbsp;schedule-list-current-superintendent.html /&nbsp;schedule-list-current-admin.html pages, none of the pages mentioned in this challenge should be available in offline mode.</p>\n\n<p>If the user tries to create / edit a schedule while offline, show an error message about the same.</p>\n\n<p>Note that the code from the first challenge already has this feature included. Don&#39;t make any changes here. Just reuse it.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Backend Node.js application</strong></p>\n\n<p>Currently the Node.js application has routes to access the database and also provides both HTTP and HTTPS server. It currently serves the pages of the first front end challenge.</p>\n\n<p>There are two types of routes - one for the database and one for the web application. However, the web application routes do not follow the DRY principle.</p>\n\n<p>Hence, create new routes in the config/routes.js and create appropriate controllers, if needed. See how the database table CRUD routes are configured to get examples.</p>\n\n<p>DO NOT use the generic CRUD routes. Instead make use of the routes dedicated to that table. If one does not exist, create it.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Materials Provided</strong></p>\n\n<ol>\n\t<li>UI Prototype</li>\n\t<li>Node.js Application</li>\n\t<li>Winning submission of the First Challenge in the series.</li>\n\t<li>SQL Server Database Backup (Import this into your database)</li>\n\t<li>List of pages of the UI Prototype that are in scope for this challenge</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>Points to Note</strong></p>\n\n<p>Use the latest Angularjs version - version 1.3. You have to update the application to use the latest version.</p>\n\n<p>Use AngularJS partials. Do no use Angular UI Bootstrap. Angular UI Router is allowed. Follow the DRY principle.</p>\n\n<p>Use the new operator :: of Angularjs wherever appropriate. Reduce the number of watchers created through this operator. Your submission shoud not have performance issues.</p>\n\n<p>Access to routes is restricted based on user role and authentication. Use the appropriate middlewares to carry out the same. See how the existing code handles this.</p>\n\n<p>Follow the existing application&#39;s coding style.</p>\n\n<p>If we have requested to &quot;hide&quot; a feature keep the corresponding HTML tags of the prototype but do not show it in the UI - hide the elements through CSS.</p>\n\n<p>In the above pages, any links that exist that navigate to other pages not part of this challenge - make them dummy links.</p>\n\n<p>Although the prototype contains two variations of a page for each the two user roles, you need to have only one AngularJS partial for that page. Depending on the user logged in, show / hide the UI elements. See how the minimalist web application does this.</p>\n\n<p>Create RESTful routes for the actions, if does not exist. For example, in the User Interface, if we delete a row, it should actually delete the row from the database. Although not explicitly mentioned for each pages, it is understood that you need to make calls to the server to carry the actions out.</p>\n\n<p>Finally note that you need to use the winning submission of the First Challenge and enhance it with the above pages. The submission already includes directives for common elements./ Re-use them and don&#39;t attempt to create them from scratch.</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30047139",
  "event": {
    "id": 3442,
    "description": "2015 topcoder Open",
    "shortDescription": "tco15"
  },
  "finalSubmissionGuidelines": "<p>Ensure that you have updated the Deployment guide, if required.</p>\n\n<p>Compress your application into a .zip file and submit it through the Submit and Review utility.</p>\n\n<p>Your submission must include both the Updated AngularJS prototype and the updated backend.</p>\n",
  "forumId": 26618,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=26618",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 13,
  "numberOfSubmissions": 0,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2014-11-13T18:23:00.000Z",
      "actualStartTime": "2014-11-13T18:23:00.000Z",
      "scheduledEndTime": "2014-11-18T18:23:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7e550dfb3b52be57c2"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-11-13T18:28:00.000Z",
      "actualStartTime": "2014-11-13T18:28:00.000Z",
      "scheduledEndTime": "2014-11-18T18:23:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7e550dfb3b52be57c1"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-18T18:23:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-20T18:23:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7e550dfb3b52be57c0"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-20T18:23:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-21T18:23:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7e550dfb3b52be57bf"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2014-11-21T18:23:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2014-11-22T06:23:00.000Z",
      "actualendTime": null,
      "_id": "581dbd7e550dfb3b52be57be"
    }
  ],
  "platforms": [
    "NodeJS"
  ],
  "postingDate": "2014-11-13T18:23:00.000Z",
  "prize": [
    1000,
    500
  ],
  "projectId": 7143,
  "registrants": [
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T00:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57bd"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T03:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57bc"
    },
    {
      "handle": "googlesmkm",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T04:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57bb"
    },
    {
      "handle": "kaiGG",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T07:55:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57ba"
    },
    {
      "handle": "misaxi",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T10:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b9"
    },
    {
      "handle": "esteer",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T13:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b8"
    },
    {
      "handle": "nghi85",
      "reliability": "n/a",
      "registrationDate": "2014-11-14T14:09:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b7"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2014-11-15T02:15:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b6"
    },
    {
      "handle": "moulyg",
      "reliability": "n/a",
      "registrationDate": "2014-11-16T05:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b5"
    },
    {
      "handle": "anupam293",
      "reliability": "n/a",
      "registrationDate": "2014-11-16T08:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b4"
    },
    {
      "handle": "savon_cn",
      "reliability": "n/a",
      "registrationDate": "2014-11-17T02:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b3"
    },
    {
      "handle": "glint",
      "reliability": "n/a",
      "registrationDate": "2014-11-17T03:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b2"
    },
    {
      "handle": "Abhijeet.Das",
      "reliability": "n/a",
      "registrationDate": "2014-11-17T10:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "581dbd7e550dfb3b52be57b1"
    }
  ],
  "registrationEndDate": "2014-11-18T18:23:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2014-11-18T18:23:00.000Z",
  "submissions": [],
  "technology": [
    "Angular.js",
    "HTML5",
    "Node.js",
    "SQL Server"
  ]
}