{
  "_id": 30055732,
  "_isComplete": true,
  "__v": 2403,
  "_lastUpdate": "2016-11-28T17:28:30.845Z",
  "appealsEndDate": "2016-11-25T16:34:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Hercules Fog Recorder - Document bitrate adjustment changes",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p>The Fog recorder application is a C++ application that allows a user to schedule recordings for TV shows and record live TV. We use this project to test certain functionality of client applications, which are external to just the recorder.</p>\n\n<p>The recorder is a Mac application that can be opened and run in XCode, and it includes Makefiles that can be used on Linux, and there are also ways to build for Windows.<br />\n<br />\nThis challenge will implement some tests and document changes made to a specific class that encompasses an automatic bitrate switcher. &nbsp;This code is complex and has changed quite a bit, and it is going to go to a huge number of devices shortly, so we want to make sure we fully test and understand the most recent fixes.<br />\n<br />\n<strong>VERSION</strong><br />\n<br />\nWe maintain two separate branches of the codebase for this project. &nbsp;This code challenge applies to <strong>master</strong>. &nbsp;Do&nbsp;<strong>not</strong>&nbsp;use the new_build branch. &nbsp;<br />\n<br />\n<strong>CODE</strong></p>\n\n<p>The existing code is here:</p>\n\n<p><a href=\"https://gitlab.com/hercules-fog/Fog-CLI\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); background: 0px 0px; text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word;\">https://gitlab.com/hercules-fog/Fog-CLI/</a></p>\n\n<p>A link will be provided in the forum where you will be able to get access.<br />\n<br />\n<strong>Make sure to use the &quot;master&quot; branch!<br />\n<br />\nLinux</strong><br />\n<br />\nFor this challenge, we will target Linux for compilation and unit testing, since that will be the nearest to the deployment environment of the actual production app.<br />\n&nbsp;</p>\n\n<h3><strong>Submission</strong></h3>\n\n<p>Your submission to OR should be a Git patch file that can be applied to see the fixes. Here is documentation on how to generate a Git patch file:</p>\n\n<p><a href=\"https://ariejan.net/2009/10/26/how-to-create-and-apply-a-patch-with-git/\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); background: 0px 0px; text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word;\">https://ariejan.net/2009/10/26/how-to-create-and-apply-a-patch-with-git/</a></p>\n\n<h3><strong>Requirements</strong></h3>\n<br />\nWe have implemented a number of changes to the application recently, to deal with automatic bitrate switching when network conditions change, particularly to the ABRManager class. &nbsp;This challenge will implement tests and documentation for the changes to the ABRManager class at commit hash&nbsp;e1debfd7ddf5fc7420f449af6cae3abab577ee5f vs the current commit hash of&nbsp;c5ed76c216420c8954c551d5b837f113164cae4b.<br />\n<br />\nFor each change, we need:<br />\n<br />\n1. A unit test proving that the change doesn&#39;t break anything. &nbsp;If a unit test isn&#39;t feasible, we need to ensure we document a way to at least manually test the code.<br />\n2. Documentation of at least a paragraph describing the change and why it was a good change<br />\n<br />\n<strong>Graph generation:</strong><br />\n<br />\nTo help show the improvement to the original algorithm, we want to add the ability, through a small program or script, to generate graphs based on the log output of the Fog client before the changes and the Fog client after. &nbsp;Below is a description of what changes were made and what the observations should be. &nbsp;We want to ensure that we have a way to graphically show to the client how these changes affect the performance of the app for the better. &nbsp;You can recommend Linux libraries to use for bandwidth throttling to test the switching.<br />\n<br />\nPlease target Linux for this generation.&nbsp;&nbsp;<br />\n<br />\nIn summation, what we are really looking for here is a graph generated based on the logs that shows the current bitrate through time, with automated throttling applied and removed at the same point in each recording. &nbsp;We want to be able to compare these to show that our new implementation ramps up more quickly and stays at a higher bitrate (which is preferred), and that it ramps down more quickly when needed.<br />\n&nbsp;\n<p><span style=\"font-family:courier new,courier,monospace\">The original bitrate switching improvement uses level shift and outlier detection. &nbsp;</span><span style=\"font-family:courier new,courier,monospace\">Decreasing the bitrate is done based on the sink buffer length. In original player code the sink buffer length is how many miliseconds of video we have buffered. &nbsp;</span><span style=\"font-family:courier new,courier,monospace\">Fog uses 4*targetDuration - (the number of seconds of video currently being downloaded) as the sink buffer length. &nbsp;</span><span style=\"font-family:courier new,courier,monospace\">In simplification, the bandwidth tracker algorithm decreases the bitrate if the sink buffer is too small. &nbsp;</span><span style=\"font-family:courier new,courier,monospace\">The bandwidth measurements are only used when considering&nbsp;</span><em>increasing</em><span style=\"font-family:courier new,courier,monospace\">&nbsp;the download bitrate. That is, if the sink buffer is large enough, and we consistently measure that we have enough network bandwidth, we try increasing the bitrate.</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">With the recent changes you should be able to observe this behaviour:</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">Observe in the logs (fog standard output) when the Level shift and outlier detection works. There should be lines like<br />\nlevel shift: 2144600, 2239702, 2306102, 2382648, 2382648, | 1491369, 1491369</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">outliers: 2200496, 2229564, 2048783, 2351722, &lt;3113618&gt;, 2545440,</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">This means that Fog will discard the measurements 2144600, 2239702, 2306102, 2382648, 2382648 in the first case, and 3113618 in the second case.</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">* Observe how when you disable bandwidth throttling, fog detects a level shift, and robustly switches to a higher bitrate stream.</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">* Observe that when you enable bandwidth throttling, fog robustly switches to a lower bitrate stream.</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">* Observe that for fog configured for MODERATE bitrate switching policy, Fog does not immediately go to the lowest bitrate, and instead robustly uses the initially chosen bitrate.</span></p>\n\n<p><span style=\"font-family:courier new,courier,monospace\">* Observe how Fog bases the choice of initial bitrate of a TSB recording on the bandwidth of the previous TSB recording that was being played. That is:</span></p>\n\n<p>* Configure Fog for moderate bitrate switching policy.<br />\n* Start a TSB recording, allow the bitrate to stabilize.<br />\n* Stop the recording, start a new TSB recording<br />\n* Observe how Fog bases the choice of initial bitrate used based on the bandwidth that was availiable in the previous TSB recording. <span style=\"font-family:courier new,courier,monospace\">&nbsp;</span></p>\n\n<ol>\n\t<li>\n\t<ul>\n\t</ul>\n\t</li>\n</ol>\nThe graph generation must take in raw log files from Fog - please don&#39;t expect the person generating the images to do any additional data manipulation.<br />\n&nbsp;",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055732",
  "event": {
    "id": 3447,
    "description": "2017 TopCoder(R) Open",
    "shortDescription": "tco17"
  },
  "finalSubmissionGuidelines": "Please see above",
  "forumId": 34450,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34450",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 20,
  "numberOfSubmissions": 1,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2016-11-15T14:00:00.000Z",
      "actualStartTime": "2016-11-15T14:00:00.000Z",
      "scheduledEndTime": "2016-11-20T14:01:00.000Z",
      "actualendTime": "2016-11-20T14:01:00.000Z",
      "_id": "583c693e10a1db09a4cfbdb1"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2016-11-15T14:06:00.000Z",
      "actualStartTime": "2016-11-15T14:06:00.000Z",
      "scheduledEndTime": "2016-11-20T14:01:00.000Z",
      "actualendTime": "2016-11-20T14:01:00.000Z",
      "_id": "583c693e10a1db09a4cfbdb0"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2016-11-20T14:01:00.000Z",
      "actualStartTime": "2016-11-20T14:01:00.000Z",
      "scheduledEndTime": "2016-11-24T12:44:00.000Z",
      "actualendTime": "2016-11-24T12:44:00.000Z",
      "_id": "583c693e10a1db09a4cfbdaf"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2016-11-24T12:44:00.000Z",
      "actualStartTime": "2016-11-24T12:44:00.000Z",
      "scheduledEndTime": "2016-11-25T12:45:00.000Z",
      "actualendTime": "2016-11-25T12:45:00.000Z",
      "_id": "583c693e10a1db09a4cfbdae"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2016-11-25T12:45:00.000Z",
      "actualStartTime": "2016-11-25T12:45:00.000Z",
      "scheduledEndTime": "2016-11-25T16:34:00.000Z",
      "actualendTime": "2016-11-25T16:34:00.000Z",
      "_id": "583c693e10a1db09a4cfbdad"
    }
  ],
  "platforms": [
    "Linux"
  ],
  "postingDate": "2016-11-15T14:00:00.000Z",
  "prize": [
    1200,
    600
  ],
  "projectId": 9391,
  "registrants": [
    {
      "handle": "Ksys",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T18:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbdac"
    },
    {
      "handle": "mhykol",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T14:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbdab"
    },
    {
      "handle": "code_now",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T15:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbdaa"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T18:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda9"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T21:19:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda8"
    },
    {
      "handle": "zybjtu",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T02:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda7"
    },
    {
      "handle": "tongkunvwang",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T23:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda6"
    },
    {
      "handle": "saeidh",
      "reliability": "n/a",
      "registrationDate": "2016-11-15T23:44:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda5"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T01:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda4"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T03:04:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda3"
    },
    {
      "handle": "greg4612",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T03:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda2"
    },
    {
      "handle": "billsedison",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T11:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda1"
    },
    {
      "handle": "penpo",
      "reliability": "n/a",
      "registrationDate": "2016-11-16T11:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbda0"
    },
    {
      "handle": "asteroidiv",
      "reliability": "n/a",
      "registrationDate": "2016-11-17T02:06:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9f"
    },
    {
      "handle": "mehblahwhatever",
      "reliability": "n/a",
      "registrationDate": "2016-11-17T13:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9e"
    },
    {
      "handle": "persistnow",
      "reliability": "n/a",
      "registrationDate": "2016-11-17T14:34:00.000Z",
      "submissionDate": "2016-11-20T13:56:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9d"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-11-17T15:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9c"
    },
    {
      "handle": "amber.j",
      "reliability": "n/a",
      "registrationDate": "2016-11-18T00:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9b"
    },
    {
      "handle": "khareldilip",
      "reliability": "n/a",
      "registrationDate": "2016-11-18T03:45:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd9a"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2016-11-20T11:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "583c693e10a1db09a4cfbd99"
    }
  ],
  "registrationEndDate": "2016-11-20T14:01:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-11-20T14:01:00.000Z",
  "submissions": [
    {
      "handle": "persistnow",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 90,
      "finalScore": 90,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-11-20T13:56:00.000Z",
      "_id": "583c693e10a1db09a4cfbdb2"
    }
  ],
  "technology": [
    "C++"
  ]
}