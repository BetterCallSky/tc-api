{
  "_id": 30055289,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T09:53:49.386Z",
  "appealsEndDate": "2016-09-22T17:20:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Cloud Hub - Timeline report edits",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2016-10-22T14:28:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -501869,
  "currentStatus": "Completed",
  "detailedRequirements": "** We ran this challenge earlier, and I will add the winning patch. It gets us close, but I forgot a couple details. **<br />\n<br />\nCloud Hub has a reporting endpoint that will return the number of apps and spend data for each month for the last 12 months. Today that is calculated from events inside elasticsearch. We are seeing the need to calculate this data on the fly instead of elasticsearch, since edits are made inbetween the time the month ends and today. This task would be modifying this function and making the query against data inside postgres.&nbsp;<br />\n<br />\n<strong>Project Overview</strong><br />\nCloud Hub is trying to help their client solve the problem of knowing what software applications they are spending the most money on over time. Cloud Hub will take in data from credit cards and other sources and attempt to show what software the client has purchased and who is using the applications the most.<br />\n<br />\n<strong>Requirements</strong><br />\n1. Update getCompanyAppHistory inside companyAppService to use postgres queries.&nbsp;<br />\n2. Update spend number to be the spending for that month, this is done correctly in patch file.<br />\n3. Update the apps number to be the number of applications created on or before the end of the month. This number should keep increasing using the demo data. Example: January 1 apps, Feburary 2 apps. March would have 3 apps even if no new apps were added in March.<br />\n4. If a month doesn&#39;t have data, it should still exist with 0 for apps and spend. We always want to see 12 months of data.<br />\n5. Update any tests that might have changed.",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055289",
  "finalSubmissionGuidelines": "1. Any additions or modifications to the code project pass on &quot;npm run lint&quot;. Any modifications to the base project needs to pass the tests, npm run test.<br />\n2. Please include a git patch for easier integration of changes.<br />\n3. The bulk of your documentation should be in the Readme.md and you should assume that this will be open source so make sure you cover all the steps to set up, &nbsp;If you have specific information that should not be included in a public readme (like links to your video) put them in a file called submission.txt and they will be omitted from the project if it is open sourced.",
  "forumId": 34069,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34069",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 3,
  "numberOfSubmissions": 2,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2016-09-22T14:28:00.000Z",
      "actualStartTime": "2016-09-22T14:28:00.000Z",
      "scheduledEndTime": "2016-10-22T14:28:00.000Z",
      "actualendTime": null,
      "_id": "5813202d550dfb3b52b2955a"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2016-09-22T16:01:00.000Z",
      "actualStartTime": "2016-09-22T16:01:00.000Z",
      "scheduledEndTime": "2016-09-22T17:20:00.000Z",
      "actualendTime": "2016-09-22T17:20:00.000Z",
      "_id": "5813202d550dfb3b52b29559"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2016-09-22T14:33:00.000Z",
      "actualStartTime": "2016-09-22T14:33:00.000Z",
      "scheduledEndTime": "2016-10-22T14:33:00.000Z",
      "actualendTime": null,
      "_id": "5813202d550dfb3b52b29558"
    }
  ],
  "platforms": [
    "NodeJS"
  ],
  "postingDate": "2016-09-22T14:28:00.000Z",
  "prize": [
    125
  ],
  "projectId": 9430,
  "registrants": [
    {
      "handle": "akinwale",
      "reliability": "n/a",
      "registrationDate": "2016-09-22T14:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813202d550dfb3b52b29557"
    },
    {
      "handle": "utkarshkukreti",
      "reliability": "n/a",
      "registrationDate": "2016-09-22T14:58:00.000Z",
      "submissionDate": "2016-09-22T16:54:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813202d550dfb3b52b29556"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-09-22T17:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813202d550dfb3b52b29555"
    }
  ],
  "registrationEndDate": "2016-10-22T14:28:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-10-22T14:33:00.000Z",
  "submissions": [
    {
      "handle": "utkarshkukreti",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-09-22T16:01:00.000Z",
      "_id": "5813202d550dfb3b52b2955c"
    },
    {
      "handle": "utkarshkukreti",
      "placement": null,
      "screeningScore": null,
      "initialScore": null,
      "finalScore": null,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-09-22T16:54:00.000Z",
      "_id": "5813202d550dfb3b52b2955b"
    }
  ],
  "technology": [
    "Node.js"
  ]
}