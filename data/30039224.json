{
  "_id": 30039224,
  "_isComplete": true,
  "__v": 0,
  "_lastUpdate": "2016-10-27T17:49:32.717Z",
  "appealsEndDate": "2013-11-03T08:00:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Google Glass prototype with Brivo Labs Node.js App",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<div>\n\t<strong>Prereqs</strong></div>\n<ul><li>\n\t\tGoogle Mirror API Project Credentials are only available to Glass Explorers. ����<strong>It is likely that you are not, and that&#39;s OK, but����</strong>you may have to rely only����on documentation, examples, and mock services to work on this challenge.</li><li>\n\t\tStart with the Brivo Labs SAM API source code����</li><li>\n\t\t(see Additional Information section below)</li></ul>\n<div>\n\t<strong>Requirements</strong></div>\n<div>\n\tFirst, provide a new model �������Glass������� used to configure our application with the ncesssary keys to authenticate to a particular Glass device through the Mirror API. ����<br>\t<br>\tProvide necessary RESTful endpoints for Glass (This is a prototype, so nothing fancy here, just a basic CRUD support)</div>\n<div>\n\t#1 POST /glass</div>\n<ul><li>\n\t\tid (not supplied in insert, auto-generated and returned in response)</li><li>\n\t\tclientId</li><li>\n\t\tclientSecret</li></ul>\n<div>\n\t#2 Provide an endpoint for the Authentication flow using OAuth /glass/oauth</div>\n<ul><li>\n\t\tsee more details: https://developers.google.com/glass/authorization</li></ul>\n<div>\n\t#3 Provide the primary testing endpoint POST /glass/:id/visitor which expects the following</div>\n<ul><li>\n\t\timageURL (url to an image file)</li><li>\n\t\tdoorId (string)</li></ul>\n<div>\n\tWhen the application receives a POST to /glass/:id/visitor, <a href=\"https://developers.google.com/glass/v1/reference/timeline/insert\" target=\"_blank\">a timeline item will need to be inserted</a> for the glass user specified. ����The POST to the mirror API ����should be structured as follows:</div>\n<ul><li>\n\t\tkind = mirror#timelineItem</li><li>\n\t\ttitle = New Door Entry Request</li><li>\n\t\thtml = &lt;article class=\\&quot;photo\\&quot;&gt;\\n ����&lt;img src=\\&quot;{imageURL}\\&quot; width=\\&quot;100%\\&quot; height=\\&quot;100%\\&quot;&gt;\\n ����&lt;div class=\\&quot;photo-overlay\\&quot;/&gt;\\n ����&lt;section&gt;\\n ���� ����&lt;p class=\\&quot;text-auto-size\\&quot;&gt;Entry Request for Door {doorId}&lt;/p&gt;\\n ����&lt;/section&gt;\\n&lt;/article&gt;\\n</li><li>\n\t\tmenuItems[]</li><li>\n\t\tOBJ\n\t\t<ul><li>\n\t\t\t\t.id = APPROVE</li><li>\n\t\t\t\t.action = CUSTOM</li><li>\n\t\t\t\t.values[]\n\t\t\t\t<ul><li>\n\t\t\t\t\t\t.displayName = Allow</li><li>\n\t\t\t\t\t\t.state = DEFAULT</li></ul>\n\t\t\t</li><li>\n\t\t\t\t.removeWhenSelected = TRUE</li></ul>\n\t</li><li>\n\t\tOBJ\n\t\t<ul><li>\n\t\t\t\t.id = DENY</li><li>\n\t\t\t\t.action = CUSTOM</li><li>\n\t\t\t\t.values[]\n\t\t\t\t<ul><li>\n\t\t\t\t\t\t.displayName = Deny</li><li>\n\t\t\t\t\t\t.state = DEFAULT</li></ul>\n\t\t\t</li><li>\n\t\t\t\t.removeWhenSelected = TRUE</li><li>\n\t\t\t\tnotification.level = DEFAULT</li></ul>\n\t</li></ul>\n<div>\n\t<br>\tNext, through the Mirror API, Insert a new <a href=\"https://developers.google.com/glass/v1/reference/subscriptions/insert\" target=\"_blank\">Subscription</a>:</div>\n<ul><li>\n\t\tkind = mirror#subscription</li><li>\n\t\tcollection = timeline</li><li>\n\t\tcallbackUrl = https://{domain}/glass/{id}/callback</li><li>\n\t\tverifyToken</li><li>\n\t\tuserToken</li></ul>\n<div>\n\t#4 Build a REST service (<strong>/glass/:id/callback</strong>)that will consume the payload of the Subscription notification. ����For now, it can just write a log message containing the payload.</div>",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30039224",
  "finalSubmissionGuidelines": null,
  "forumId": null,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=null",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 8,
  "numberOfSubmissions": 2,
  "postingDate": "2013-10-26T23:30:00.000Z",
  "projectId": 7282,
  "registrationEndDate": "2013-10-31T08:00:00.000Z",
  "reviewScorecardId": 30001540,
  "reviewType": null,
  "screeningScorecardId": null,
  "submissionEndDate": "2013-10-31T08:00:00.000Z",
  "submissions": [
    {
      "handle": "Applications",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 83.75,
      "finalScore": 83.75,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2013-10-26T21:48:00.000Z",
      "_id": "58123e2ce61fd730185a3a51"
    },
    {
      "handle": "Applications",
      "placement": 2,
      "screeningScore": null,
      "initialScore": 75.75,
      "finalScore": 75.75,
      "points": 0,
      "submissionStatus": "Completed Without Win",
      "submissionDate": "2013-10-26T21:48:00.000Z",
      "_id": "58123e2ce61fd730185a3a50"
    }
  ],
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2013-10-26T23:30:00.000Z",
      "actualStartTime": "2013-10-26T23:30:00.000Z",
      "scheduledEndTime": "2013-10-31T08:00:00.000Z",
      "actualendTime": "2013-10-31T08:00:00.000Z",
      "_id": "58123e2ce61fd730185a3a4f"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2013-10-26T23:30:00.000Z",
      "actualStartTime": "2013-10-26T23:30:00.000Z",
      "scheduledEndTime": "2013-10-31T08:00:00.000Z",
      "actualendTime": "2013-10-31T08:00:00.000Z",
      "_id": "58123e2ce61fd730185a3a4e"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2013-10-31T08:00:00.000Z",
      "actualStartTime": "2013-10-31T08:00:00.000Z",
      "scheduledEndTime": "2013-11-03T08:00:00.000Z",
      "actualendTime": "2013-11-03T08:00:00.000Z",
      "_id": "58123e2ce61fd730185a3a4d"
    }
  ],
  "registrants": [
    {
      "handle": "ohyan07",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a4c"
    },
    {
      "handle": "paso84",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a4b"
    },
    {
      "handle": "JeffreyTaylor",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a4a"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": "2013-10-26T21:48:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a49"
    },
    {
      "handle": "yash123",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a48"
    },
    {
      "handle": "Sky_",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a47"
    },
    {
      "handle": "gfhuertac",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": "2013-10-26T21:48:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a46"
    },
    {
      "handle": "billthu",
      "reliability": "n/a",
      "registrationDate": "2013-10-26T21:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58123e2ce61fd730185a3a45"
    }
  ],
  "event": {},
  "prize": [
    900,
    500
  ],
  "technology": [
    "CoffeeScript",
    "Google API",
    "JavaScript"
  ],
  "platforms": [
    "Heroku",
    "Google",
    "Brivo Labs"
  ]
}