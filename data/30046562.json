{
  "_id": 30046562,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T09:54:32.843Z",
  "appealsEndDate": "2014-10-23T22:55:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Extend Node Based Middleware with Additional REST Calls - 1",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2014-11-19T01:00:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -61293193,
  "currentStatus": "Completed",
  "detailedRequirements": "<h2 dir=\"ltr\"><span><strong>Overview</strong></span></h2>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">In this challenge, we&rsquo;re looking to add an additional controller to an existing node.js code base. We have a single controller right now that handles access related to &ldquo;projects&rdquo;. We need additional controllers for access to additional data. This is #1 of 4 total F2F challenges running in parallel - each challenge adds a single additional controller. If you do one, you can probably knock out the other three pretty quickly!</span></span></p>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>Goal</strong></span></h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Create </span><em>controllers/schedules.js</em><span style=\"background-color:transparent\"> in the same style as controllers/projects.js</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Update </span><em>config/routes.js</em><span style=\"background-color:transparent\"> as appropriate for the new calls</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Provide a complete Postman collection for this new controller, demonstrating all functionality working correctly</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>Overall Notes</strong></span></h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Please ask questions in the forums if anything is not clear!</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Please follow the same approach / style / form used in </span><em>controllers/projects.js</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">For all requests utilizing a request body, the request body will contain JSON formatted data - follow the same expected format used in </span><em>controllers/project.js</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">All responses will be in JSON format - follow the same format and structure used in </span><em>controllers/projects.js</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">See </span><em>sql/howto.txt</em><span style=\"background-color:transparent\"> for notes on the SQL files format</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Use the </span><em>build*Sql()</em><span style=\"background-color:transparent\"> functions in </span><em>helpers/dbHelper</em><span style=\"background-color:transparent\"> to do the substitution in the SQL files</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Some of the URIs are a bit strange / long, this is because several DB tables use a composite key consisting of </span><em>projnum</em><span style=\"background-color:transparent\">, </span><em>schedtype</em><span style=\"background-color:transparent\">, and </span><em>rev</em><span style=\"background-color:transparent\">.</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Choose sensible filenames for the SQL statement files</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Do not modify other areas of the project beyond the new module and the </span><em>config/routes.js</em><span style=\"background-color:transparent\"> file (if you feel this is needed, post a question in the forums)</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>Environment Setup</strong></span></h2>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">The recommended environment for this challenge is Windows 7 or above with .NET 4.5.2 and SQL Server 2012 Express. Several other configurations will work as well, but if you don&#39;t already have an environment, this will probably be the fastest setup. Please use the </span><em>testfiles/db.bak </em><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">file attached to this challenge (in the forums). This can be restored to SQL Server Express 2012 (or 2008).</span></span></p>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>API Calls for </strong><em>controllers/schedules.js</em></span></h2>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Get all schedules for a specific project (GET)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: GET </span><em>/schedules/{projnum}</em><span style=\"background-color:transparent\"> </span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: </span><em>select schdtype, rev, location, projstartdate, projenddate, awarddate, facilitytype, contractor, contractortype, projmanager, fieldsuper, contractno, spread, defaulthrs, currdate, currbin, maxbins, createdate, finalissue, cs_mod_pw, cs_input_pw, fcast_from_rev from dbo.project where %WHEREVALUES%</em></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Get all data for a specific schedule (GET)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: GET </span><em>/schedules/{projnum}/schedule_types/{schdtype}/rev/{rev}</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: </span><em>select * from dbo.schedules where %WHEREVALUES% </em></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Create a new schedule &nbsp;for a specific project (POST)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: &nbsp;POST</span><em> /schedules/{projnum}</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: </span><em>insert into dbo.project (%FIELDS%) values (%VALUES%)</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Note: This one uses the project table, that&rsquo;s not a typo</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The request body may contain a some or all of the possible fields</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">All possible input fields must be validated</span></span></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Reference the corresponding database table for the field names, the type (</span><em>String</em><span style=\"background-color:transparent\"> or </span><em>Number</em><span style=\"background-color:transparent\">), and if it&rsquo;s required (table field will have &ldquo;Allow Nulls&rdquo; checked if it&rsquo;s not required)</span></span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The fields passed in the URI will not be passed in the request body</span></span></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Create a new task for a specific schedule (POST)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: POST </span><em>/schedules/{projnum}/schedule_types/{schdtype}/rev/{rev}</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: insert into dbo.schedules (%FIELDS%) values (%VALUES%)</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The request body may contain a some or all of the possible fields</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">All possible input fields must be validated</span></span></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Reference the corresponding database table for the field names, the type (String or Number), and if it&rsquo;s required (table field will have &ldquo;Allow Nulls&rdquo; checked if it&rsquo;s not required)</span></span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The fields passed in the URI will not be passed in the request body</span></span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Use a loop for addDefIfPresent() for the bin1 - bin208 fields</span></span></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Update a task for a specific schedule (PUT)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: PUT </span><em>/schedules/{projnum}/schedule_types/{schdtype}/rev/{rev}/{level1}/{level2}/{level3}/{level4}/{level5}/{level6}/{schdactbase}/{percenthrs}</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: </span><em>update dbo.schedules set %SETVALUES% where %WHEREVALUES%</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The request body may contain a some or all of the possible fields</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">All possible input fields must be validated</span></span></p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Reference the corresponding database table for the field names, the type (</span><em>String</em><span style=\"background-color:transparent\"> or </span><em>Number</em><span style=\"background-color:transparent\">), and if it&rsquo;s required (table field will have &ldquo;Allow Nulls&rdquo; checked if it&rsquo;s not required)</span></span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">The fields passed in the URI will not be passed in the request body</span></span></p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Use a loop for </span><em>addDefIfPresent()</em><span style=\"background-color:transparent\"> for the </span><em>bin1</em><span style=\"background-color:transparent\"> - </span><em>bin208 </em><span style=\"background-color:transparent\">fields</span></span></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:15px\">Delete a task in a schedule (DELETE)</span></span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">URL: DELETE </span><em>/schedules/{projnum}/schedule_types/{schdtype}/rev/{rev}/{level1}/{level2}/{level3}/{level4}/{level5}/{level6}/{schdactbase}/{percenthrs}</em></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">SQL: delete from dbo.schedules where %WHEREVALUES%</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">There is not a reusable example for this one in </span><em>controllers/projects.js </em><span style=\"background-color:transparent\">(because for </span><em>project</em><span style=\"background-color:transparent\">, delete was a special case) - so this one will need to be written from scratch</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Use </span><em>buildDeleteSql()</em><span style=\"background-color:transparent\"> to parse the SQL statement (the same way </span><em>buildUpdateSql()</em><span style=\"background-color:transparent\"> is used)</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>Related Challenges</strong></span></h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><a href=\"http://www.topcoder.com/challenge-details/30046562/?type=develop&amp;noncache=true\" style=\"text-decoration:none;\"><u>Extend Node Based Middleware with Additional REST Calls - 1</u></a></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><a href=\"http://www.topcoder.com/challenge-details/30046563/?type=develop&amp;noncache=true\" style=\"text-decoration:none;\"><u>Extend Node Based Middleware with Additional REST Calls - 2</u></a></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><a href=\"http://www.topcoder.com/challenge-details/30046564/?type=develop&amp;noncache=true\" style=\"text-decoration:none;\"><u>Extend Node Based Middleware with Additional REST Calls - 3</u></a></span></p>\n\t</li>\n\t<li dir=\"ltr\"><span><a href=\"http://www.topcoder.com/challenge-details/30046565/?type=develop&amp;noncache=true\" style=\"text-decoration:none;\"><u>Extend Node Based Middleware with Additional REST Calls - 4</u></a></span></li>\n</ul>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30046562",
  "finalSubmissionGuidelines": "<h2 dir=\"ltr\"><span><strong>Submission Deliverables</strong></span></h2>\n\n<p dir=\"ltr\">&nbsp;</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">New </span><em>controllers/schedules.js</em><span style=\"background-color:transparent\"> file, &nbsp;updated </span><em>config/routes.js</em><span style=\"background-color:transparent\"> file, and Postman collection</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h2 dir=\"ltr\"><span><strong>Code Aesthetics</strong></span></h2>\n\n<p dir=\"ltr\">&nbsp;</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent\">Code must be clean (no non-applicable comments, unused variables etc), tidy (consistent indents) and well commented</span></span></p>\n\t</li>\n\t<li dir=\"ltr\"><span><span style=\"background-color:transparent\">Clear and purposeful naming for variables, classes etc.</span></span></li>\n</ul>\n",
  "forumId": 26157,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=26157",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 13,
  "numberOfSubmissions": 7,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2014-10-20T01:00:00.000Z",
      "actualStartTime": "2014-10-20T01:00:00.000Z",
      "scheduledEndTime": "2014-11-19T01:00:00.000Z",
      "actualendTime": null,
      "_id": "58132058550dfb3b52b2b516"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-20T10:56:00.000Z",
      "actualStartTime": "2014-10-20T10:56:00.000Z",
      "scheduledEndTime": "2014-10-21T21:25:00.000Z",
      "actualendTime": "2014-10-21T21:25:00.000Z",
      "_id": "58132058550dfb3b52b2b515"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2014-10-20T01:05:00.000Z",
      "actualStartTime": "2014-10-20T01:05:00.000Z",
      "scheduledEndTime": "2014-11-19T01:05:00.000Z",
      "actualendTime": null,
      "_id": "58132058550dfb3b52b2b514"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-21T21:27:00.000Z",
      "actualStartTime": "2014-10-21T21:27:00.000Z",
      "scheduledEndTime": "2014-10-22T21:43:00.000Z",
      "actualendTime": "2014-10-22T21:43:00.000Z",
      "_id": "58132058550dfb3b52b2b513"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-22T21:44:00.000Z",
      "actualStartTime": "2014-10-22T21:44:00.000Z",
      "scheduledEndTime": "2014-10-23T15:27:00.000Z",
      "actualendTime": "2014-10-23T15:27:00.000Z",
      "_id": "58132058550dfb3b52b2b512"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-23T15:28:00.000Z",
      "actualStartTime": "2014-10-23T15:28:00.000Z",
      "scheduledEndTime": "2014-10-23T22:44:00.000Z",
      "actualendTime": "2014-10-23T22:44:00.000Z",
      "_id": "58132058550dfb3b52b2b511"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-23T22:45:00.000Z",
      "actualStartTime": "2014-10-23T22:45:00.000Z",
      "scheduledEndTime": "2014-10-23T22:49:00.000Z",
      "actualendTime": "2014-10-23T22:49:00.000Z",
      "_id": "58132058550dfb3b52b2b510"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2014-10-23T22:50:00.000Z",
      "actualStartTime": "2014-10-23T22:50:00.000Z",
      "scheduledEndTime": "2014-10-23T22:55:00.000Z",
      "actualendTime": "2014-10-23T22:55:00.000Z",
      "_id": "58132058550dfb3b52b2b50f"
    }
  ],
  "platforms": [
    "NodeJS"
  ],
  "postingDate": "2014-10-20T01:00:00.000Z",
  "prize": [
    250
  ],
  "projectId": 7143,
  "registrants": [
    {
      "handle": "talesforce",
      "reliability": "n/a",
      "registrationDate": "2014-10-22T06:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b50e"
    },
    {
      "handle": "spanhawk",
      "reliability": "n/a",
      "registrationDate": "2014-10-23T05:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b50d"
    },
    {
      "handle": "mavlarn",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T02:07:00.000Z",
      "submissionDate": "2014-10-20T12:04:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b50c"
    },
    {
      "handle": "Ganjhorn",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T01:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b50b"
    },
    {
      "handle": "okuni",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T01:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b50a"
    },
    {
      "handle": "TMALBONPH",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T02:52:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b509"
    },
    {
      "handle": "renqingwei123",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T03:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b508"
    },
    {
      "handle": "kiri4a",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T06:33:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b507"
    },
    {
      "handle": "BharathMG",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T07:35:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b506"
    },
    {
      "handle": "general7078",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T08:41:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b505"
    },
    {
      "handle": "vvvpig",
      "reliability": "n/a",
      "registrationDate": "2014-10-20T10:21:00.000Z",
      "submissionDate": "2014-10-22T01:57:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b504"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2014-10-21T00:30:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b503"
    },
    {
      "handle": "gpbencke",
      "reliability": "n/a",
      "registrationDate": "2014-10-21T12:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132058550dfb3b52b2b502"
    }
  ],
  "registrationEndDate": "2014-11-19T01:00:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2014-11-19T01:05:00.000Z",
  "submissions": [
    {
      "handle": "vvvpig",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-20T11:24:00.000Z",
      "_id": "58132058550dfb3b52b2b51d"
    },
    {
      "handle": "vvvpig",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-20T11:24:00.000Z",
      "_id": "58132058550dfb3b52b2b51c"
    },
    {
      "handle": "vvvpig",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-20T10:55:00.000Z",
      "_id": "58132058550dfb3b52b2b51b"
    },
    {
      "handle": "vvvpig",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-20T11:37:00.000Z",
      "_id": "58132058550dfb3b52b2b51a"
    },
    {
      "handle": "mavlarn",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2014-10-20T12:04:00.000Z",
      "_id": "58132058550dfb3b52b2b519"
    },
    {
      "handle": "mavlarn",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2014-10-20T11:52:00.000Z",
      "_id": "58132058550dfb3b52b2b518"
    },
    {
      "handle": "vvvpig",
      "placement": null,
      "screeningScore": null,
      "initialScore": null,
      "finalScore": null,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2014-10-22T01:57:00.000Z",
      "_id": "58132058550dfb3b52b2b517"
    }
  ],
  "technology": [
    "API",
    "Node.js"
  ]
}