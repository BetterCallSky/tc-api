{
  "_id": 30053546,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T12:14:57.518Z",
  "appealsEndDate": "2016-03-31T22:21:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Data Caching For Python Recommendation Engine F2F",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2016-04-27T22:53:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -15859237,
  "currentStatus": "Completed",
  "detailedRequirements": "<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Topcoder recently developed a </span><a href=\"http://www.topcoder.com/challenge-details/30052933/?type=develop&amp;noncache=true\" style=\"text-decoration:none;\"><u>Recommendation Engine</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"> for a client by implementing &nbsp;&nbsp;Collaborative Filtering based on Apache Spark using a Python interface. &nbsp;We received a number of very impressive submissions. &nbsp;We also developed a visualization on top of the basic recommendation engine to provide some intuition about the viewing habits of our client&rsquo;s customers and can illustrate how programs are related by common groups of viewers. &nbsp;However, our recommendation engine has an issue. &nbsp;In current form, the engine responds too slowly to make it a useable backend for our visualization. &nbsp;User interaction with the underlying model isn&rsquo;t really realistic. &nbsp;One solution to our issue would be to deploy the recommendation engine to more substantial hardware and recompile the solution with native software components which can process matrix algebra much more quickly. &nbsp;Another option is to cache the results of the recommendation engine in a local database and use that more readily accessible data to drive our visualizations. We&rsquo;re going to try option #2.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">For this challenge, you should write an Python application which makes API calls for each of the endpoints listed below and stores the responses in a MySQL or MongoDB database.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The recommendation engine currently supports the following endpoints:</span></span></p>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-family:times new roman; font-size:16px\">/reports/top-programs-by-potential-viewers?limit=1334</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-family:times new roman; font-size:16px\">/reports/top-programs-by-actual-viewers?limit=1334 </span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">/job/:jobId</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">/reports/related-programs-by-potential-viewers/:programId?limit=100</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">/reports/related-programs-by-actual-viewers/:programId?limit=100</span></span></p>\n\t</li>\n</ol>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">You&rsquo;ll need to create the following tables in MySQL or MongoDB to store the data responses</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Jobs -- tracks the asynchronous queries being made to the python web service exposed by the recommendation engine. &nbsp;</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Top_Programs_Potential_Viewers</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Top_Programs_By_Actual_Viewers</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Related_Programs_By_Potential_Viewers</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Related_Programs_By_Actual_Viewers</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Programs -- this can just be loaded from the csv file provided.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The columns for each database table will correspond to the fields in the Job Result json responses. &nbsp;Each job result returned by the service will be a row one of the tables provided above. &nbsp;For endpoints #1 and #2. &nbsp;We&rsquo;ll only need to execute these endpoints once each. &nbsp;All the data from the engine can be collected in a single response. &nbsp;&nbsp;For endpoints #4 and #5, you&rsquo;ll need to execute those endpoints for each of our 1334 program ids. &nbsp;Also in the tables Related_Programs_By_Potential_Viewers and Related_Programs_By_Actual_Viewers you will need to actually store the program id from the request in the response records so that the responses can be tracked against the request records.</span></span></p>\n\n<p><strong>Setting up the Recommendation Engine:</strong></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The source code, documentation, and docker files for the recommendation engine can be found here: &nbsp;<a href=\"https://github.com/cloudspokes/recommendation_engine\">https://github.com/cloudspokes/recommendation_engine</a>. &nbsp;You&#39;ll need to request access to the repository in the forums attached to this challenge by providing your GitHub User Id.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">For the most part the configuration of the system is dockerized. &nbsp;Here are steps you should follow to get both the python recommendation engine and REST API up and running along with the NodeJS server:</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">1. &nbsp;Install Docker it by following the appropriate instructions in the Docker website:</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"https://docs.docker.com/engine/installation/\" style=\"text-decoration:none;\"><u>https://docs.docker.com/engine/installation/</u></a></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">2. &nbsp;Download the data files zip from the Topcoder Code Documents forum. &nbsp;Unzip this and put the 3 data files - view.csv, viewers.csv, and programs.csv into the project-root/input folder.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">3. &nbsp;Navigate to the project root. &nbsp;Inside this folder, run the following command to build a docker image name pyrec:</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">$ docker build -t pyrec .</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">4. &nbsp;Start an interactive shell in the image. &nbsp;Note that the string &quot;56c4c54897c7&quot; below is the container id. &nbsp;This will change every time you create a new container. &nbsp;The -m 6g paramter indicates that you&#39;re starting a container with six gigabytes of RAM. &nbsp;Note that if you run Docker from a Mac you&#39;ll actually be starting up a Virtual Machine which hosts your Docker containers. &nbsp;The -P parameter exposes the ports required to access the docker container from outside the container itself. </span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">$ docker run -t -i -p 3000:3000 -p 5555:5555 -m 6g pyrec /bin/bash</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">root@56c4c54897c7:/opt/pyrec#</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">5. &nbsp;You&#39;ll need 1 more shell to run the tests on a running server. On the other terminal window, exec a second bash session by running:</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">$ docker exec -t -i &lt;container_id&gt; /bin/bash</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">root@56c4c54897c7:/opt/pyrec#</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&ldquo;56c4c54897c7&rdquo; is the container id. &nbsp;Note on a Mac you can bring up a Docker Quickstart terminal from your Applications-&gt;Docker folder to access the Docker daemon. &nbsp;</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">6. &nbsp;You&#39;re ready to start the verification of the system. &nbsp;From here you should refer to the verification steps in section 8 the docs/Deployment-Guide.doc. &nbsp;&nbsp;There are some API calls -- the ones using potential viewers -- that take some time to execute.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">7. &nbsp;Accessing the Docker containers from outside Docker can be a little tricky on Mac environment. &nbsp;You can see all the docker-machine instances by executing the following command:</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Wards-MacBook-Pro:recommendation_engine Ward$ docker-machine ls</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:10.6667px\">NAME &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACTIVE &nbsp;&nbsp;DRIVER &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STATE &nbsp;&nbsp;&nbsp;&nbsp;URL &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SWARM &nbsp;&nbsp;DOCKER &nbsp;&nbsp;&nbsp;ERRORS</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:10.6667px\">default &nbsp;&nbsp;* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;virtualbox &nbsp;&nbsp;Running &nbsp;&nbsp;tcp://192.168.99.100:2376 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v1.10.3 &nbsp;&nbsp;</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">8. &nbsp;Then you you need to find the port of the docker container. &nbsp;You can do this by using the following command: </span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Wards-MacBook-Pro:recommendation_engine Ward$ docker ps</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:10.6667px\">CONTAINER ID &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COMMAND &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CREATED &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STATUS &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PORTS &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:10.6667px\">f4c148a5aaf6 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pyrec &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;/bin/bash&quot; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7 days ago &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up 6 days &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:3000-&gt;3000/tcp, 0.0.0.0:5555-&gt;5555/tcp &nbsp;&nbsp;high_joliot</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">9. &nbsp;In my case, I can access the REST service in the container by combining the ip from the Docker Machine with the port from the container. &nbsp;The web app can be accessed at: &nbsp;</span></span></p>\n\n<p dir=\"ltr\"><span><u><a href=\"http://192.168.99.100:5555/all-programs\" style=\"text-decoration:none;\">http://192.168.99.100:5555/all-programs</a></u></span></p>\n\n<div>&nbsp;</div>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30053546",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span>Python source code.</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span>Deployment guide describing how to build and execute the code. &nbsp;Please document library dependencies and install steps required (e.g. pip install &hellip;)</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span>DDL scripts for the MySQL database or database creation scripts for the MongoDB setup.</span></span></p>\n\t</li>\n\t<li dir=\"ltr\"><span><span>Export of data from your database. &nbsp;If this turns out to be more than 25MB, you may load this file into a </span></span>Google Drive or Dropbox folder and provide a link to it in a file labelled submission.txt which you should put the root directory of your submission zip. &nbsp;You must submit source code by the normal mechanism.</li>\n</ol>\n",
  "forumId": 32488,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=32488",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 36,
  "numberOfSubmissions": 2,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2016-03-28T22:53:00.000Z",
      "actualStartTime": "2016-03-28T22:53:00.000Z",
      "scheduledEndTime": "2016-04-27T22:53:00.000Z",
      "actualendTime": null,
      "_id": "58134141550dfb3b52be948a"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2016-03-30T22:21:00.000Z",
      "actualStartTime": "2016-03-30T22:21:00.000Z",
      "scheduledEndTime": "2016-03-31T18:09:00.000Z",
      "actualendTime": "2016-03-31T18:09:00.000Z",
      "_id": "58134141550dfb3b52be9489"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2016-03-28T22:59:00.000Z",
      "actualStartTime": "2016-03-28T22:59:00.000Z",
      "scheduledEndTime": "2016-04-27T22:59:00.000Z",
      "actualendTime": null,
      "_id": "58134141550dfb3b52be9488"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2016-03-31T22:18:00.000Z",
      "actualStartTime": "2016-03-31T22:18:00.000Z",
      "scheduledEndTime": "2016-03-31T22:21:00.000Z",
      "actualendTime": "2016-03-31T22:21:00.000Z",
      "_id": "58134141550dfb3b52be9487"
    }
  ],
  "platforms": [
    "Other"
  ],
  "postingDate": "2016-03-28T22:53:00.000Z",
  "prize": [
    750
  ],
  "projectId": 9454,
  "registrants": [
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T04:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9486"
    },
    {
      "handle": "franklij",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T01:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9485"
    },
    {
      "handle": "abhisingh3",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T01:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9484"
    },
    {
      "handle": "mulish",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T02:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9483"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T03:35:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9482"
    },
    {
      "handle": "Acyn",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T04:11:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9481"
    },
    {
      "handle": "linuxgeek",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T04:29:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9480"
    },
    {
      "handle": "riaz2012",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T04:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947f"
    },
    {
      "handle": "Thrishul",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T04:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947e"
    },
    {
      "handle": "vinoh",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T05:06:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947d"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T05:48:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947c"
    },
    {
      "handle": "acontry",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T06:16:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947b"
    },
    {
      "handle": "cjalmeida",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T06:40:00.000Z",
      "submissionDate": "2016-03-31T22:18:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be947a"
    },
    {
      "handle": "will_yu",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T07:42:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9479"
    },
    {
      "handle": "228313",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T07:57:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9478"
    },
    {
      "handle": "Stratocoder",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T08:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9477"
    },
    {
      "handle": "AleaActaEst",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T11:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9476"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T12:49:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9475"
    },
    {
      "handle": "r.nivedha1",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T16:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9474"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T17:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9473"
    },
    {
      "handle": "dwij",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T19:06:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9472"
    },
    {
      "handle": "Luca",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T19:51:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9471"
    },
    {
      "handle": "whitico",
      "reliability": "n/a",
      "registrationDate": "2016-03-29T23:04:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9470"
    },
    {
      "handle": "CrazyCoderLZB",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T00:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946f"
    },
    {
      "handle": "jcallow",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T01:44:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946e"
    },
    {
      "handle": "freegod",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T01:56:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946d"
    },
    {
      "handle": "genycopedison",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T03:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946c"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T04:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946b"
    },
    {
      "handle": "deedee",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T04:29:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be946a"
    },
    {
      "handle": "miuc",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T08:02:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9469"
    },
    {
      "handle": "penpo",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T17:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9468"
    },
    {
      "handle": "Eswar.Prasanth",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T18:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9467"
    },
    {
      "handle": "joet",
      "reliability": "n/a",
      "registrationDate": "2016-03-30T22:29:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9466"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2016-03-31T01:01:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9465"
    },
    {
      "handle": "hitesh212",
      "reliability": "n/a",
      "registrationDate": "2016-03-31T14:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9464"
    },
    {
      "handle": "lbotsch",
      "reliability": "n/a",
      "registrationDate": "2016-03-31T19:24:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58134141550dfb3b52be9463"
    }
  ],
  "registrationEndDate": "2016-04-27T22:53:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-04-27T22:59:00.000Z",
  "submissions": [
    {
      "handle": "cjalmeida",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 0,
      "finalScore": 0,
      "points": 0,
      "submissionStatus": "Failed Review",
      "submissionDate": "2016-03-30T22:19:00.000Z",
      "_id": "58134141550dfb3b52be948c"
    },
    {
      "handle": "cjalmeida",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-03-31T22:18:00.000Z",
      "_id": "58134141550dfb3b52be948b"
    }
  ],
  "technology": [
    "JSON",
    "MongoDB",
    "MySQL",
    "Python",
    "REST"
  ]
}