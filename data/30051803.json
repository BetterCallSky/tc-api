{
  "_id": 30051803,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T11:00:20.628Z",
  "appealsEndDate": "2015-11-12T09:20:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Managed Risk - Dashboard Page Frontend Code Challenge",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": null,
  "currentPhaseName": "Stalled",
  "currentPhaseRemainingTime": 0,
  "currentStatus": "Completed",
  "detailedRequirements": "<p dir=\"ltr\">The client is looking to build dynamic reports out of database tables of data. Their current tool allows these reports to be built by a developer, but this requires a normal development cycle to build, test, and release these reports. They would like to have a system in place that allows them to build these custom reports, joining multiple database objects (tables, views, stored procedures) if necessary, into dynamic data to populate different visualizations.</p>\n\n<p dir=\"ltr\">The closest system to equate it to would be Salesforce Reporting. In there, you can wire up multiple related objects into a grouped, filtered, and sorted data source. &nbsp;</p>\n\n<p dir=\"ltr\">The goal of this challenge is to integrate &ldquo;Dashboard&rdquo; page with backend, and implement the missing pieces to make that page functional</p>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\" style=\"margin-left: 40px;\"><img src=\"https://lh5.googleusercontent.com/jPNIWdafow7YF-DqMav3xoOZ-NcsjjOoBx6tW2CRR9qClQBLtMp56rUu4to4AIBOVBISUGJsELG_ToMN9o1lwVuJDgm8K3eZ3YD-ixhScsaH6-SFMgUmhzqIz6HI6N9wggGzV3yb\" style=\"height:223px; width:700px\" /></p>\n\n<h2 dir=\"ltr\">Challenge Requirements</h2>\n\n<h3 dir=\"ltr\"><u>Pages in Scope</u></h3>\n\n<p dir=\"ltr\">You will implement &ldquo;Dashboard&rdquo; page and all backend/frontend that support the functionality of this page.</p>\n\n<h3 dir=\"ltr\"><u>Architecture</u></h3>\n\n<p dir=\"ltr\">You are provided with an architecture documents, it in extensive implementation notes are provided at method documentation on UML Class Diagrams. Please follow them for implementing the required controllers if the controller is not already implemented from past challenges.</p>\n\n<p dir=\"ltr\">Please read the whole Application Design Specification first. All the details not mentioned in this specification are provided in that document.</p>\n\n<p dir=\"ltr\">Please note there may be some changes needed to backend in order to support the frontend features, these are in scope of this challenge as well.</p>\n\n<h3 dir=\"ltr\"><u>Authentication</u></h3>\n\n<p dir=\"ltr\">Authentication and authorization are out of scope for this project, the backend should expect network ID to be passed to the backend.</p>\n\n<p dir=\"ltr\">So in this challenge you need to enable windows authentication in IIS, and use that information to authorize the user.</p>\n\n<h3 dir=\"ltr\"><u>Front End Classes</u></h3>\n\n<p dir=\"ltr\">This code challenge is responsible for implementing all classes on class diagram &quot;Front End Class Diagram&quot; that will be needed to implement the frontend pages in scope of this challenge.</p>\n\n<p dir=\"ltr\">The REST API endpoints of the handlers are configured via web.config like below:</p>\n\n<p dir=\"ltr\">&lt;httpHandlers&gt;</p>\n\n<p dir=\"ltr\">&nbsp;&lt;add verb=&quot;supported http verbs&quot; path=&quot;path&quot; type=&quot;namespace.classname, assemblyname&quot; /&gt;</p>\n\n<p dir=\"ltr\">&lt;httpHandlers&gt;</p>\n\n<p dir=\"ltr\">The path is up to assemblers, it may be like &lt;base-url&gt;/&lt;handler-name&gt;.</p>\n\n<h3 dir=\"ltr\"><u>Rendering Report Charts</u></h3>\n\n<p dir=\"ltr\">You will reuse the same charts rendered in Report Details page and Preview step in Generate Report flow.</p>\n\n<p dir=\"ltr\">Refer to previous challenge specs &ldquo;Rendering Report Charts&rdquo; to understand how we implemented the charts.</p>\n\n<p dir=\"ltr\"><a href=\"https://www.topcoder.com/challenge-details/30050556/?type=develop&amp;noncache=true\">https://www.topcoder.com/challenge-details/30050556/?type=develop&amp;noncache=true</a></p>\n\n<h3 dir=\"ltr\"><u>Dashboard Page</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Note that charts are rendered in server side, and other content is managed in client side using REST API. When the page is rendered in server side, the charts are rendered as mentioned in &ldquo;Rendering Report Charts&rdquo; section.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When the page is rendered, retrieve report by id, if report.DisplayGraph is true, then the report graph should be shown, here is how to get charts to be added in dashboard:</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- // get user&rsquo;s dashboard reports</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Get reportService:IReportService from Unity;</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- string user = HttpContext.Current.User.Identity.Name;</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- IList&lt;long&gt; reportIds = reportService.GetUserDashboardReports(user);</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- IList&lt;Report&gt; reports = reportService.Get(reportIds);</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- For each report of reports</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- if report.DisplayGraph is true, then render it according to &ldquo;Rendering Report Charts&rdquo; section.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- if report.DisplayReportData is true, then show a table of the report, it calls SearchReportDataHandler to search data of a report.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When customizing key metrics, it calls GetUserKeyMetricsHandler to get user key metrics, calls SaveUserKeyMetricsHandler to save user key metrics, and calls GetUserKeyMetricsValuesHandler to get user key metrics values.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- For the Custom Reports section:</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Table Pagination and Sorting should be implemented server side.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It calls the SearchReportsHandler to search reports.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Clicking a report forwards user to the Custom Report Detail page.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The edit icon forwards user to the Custom Report Detail page.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The copy icon forwards user to the Generate Custom Reports page, with the selected report populated into the page. The copy is not done in server side yet, only after user modifies and saves the copied report, a new copied report will be created.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- It calls DeleteReportHandler to delete selected report.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The &ldquo;share report&rdquo; will trigger ShareReportHandler.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- For report export, it calls ExportReportHandler to do so.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The operations of the sections (Key Metrics, My Reports, Price Index Report Table) should be removed, the section titles are simply static labels. We should not have operations against the sections. We only manage section elements.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Assuming there are report A, B, C, D in the dashboard reports: A shows graph, B shows data, C shows graph, D shows data. Then the My Reports section shows graph of A and C; the below section shows tables of B and D.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Report Details Page</u></h3>\n\n<p dir=\"ltr\">Implement &ldquo;Add to Dashboard&rdquo; button, it will use AddUserDashboardReportHandler to add report to dashboard.</p>\n\n<h2 dir=\"ltr\">Technology overview</h2>\n\n<p dir=\"ltr\">- Windows Server</p>\n\n<p dir=\"ltr\">- SQL Server 2012</p>\n\n<p dir=\"ltr\">- Visual Studio 2012</p>\n\n<p dir=\"ltr\">- IIS 7</p>\n\n<p dir=\"ltr\">- C#</p>\n\n<p dir=\"ltr\">- .NET Framework 4.5</p>\n\n<p dir=\"ltr\">- ASP.NET</p>\n\n<p dir=\"ltr\">- Unity 3.5 <a href=\"http://unity.codeplex.com/\">http://unity.codeplex.com/</a></p>\n\n<p dir=\"ltr\">- Enterprise Library 6 Logging <a href=\"https://msdn.microsoft.com/en-us/library/ff648951.aspx\">https://msdn.microsoft.com/en-us/library/ff648951.aspx</a></p>\n\n<p dir=\"ltr\">- Quartz.NET 2.3.3 <a href=\"http://quartznet.sourceforge.net/\">http://quartznet.sourceforge.net/</a></p>\n\n<p dir=\"ltr\">- jQuery 1.11.3 <a href=\"http://jquery.com\">http://jquery.com</a></p>\n\n<p dir=\"ltr\">- Microsoft OpenXML SDK 2.5 <a href=\"https://msdn.microsoft.com/en-us/library/office/bb448854.aspx\">https://msdn.microsoft.com/en-us/library/office/bb448854.aspx</a></p>\n\n<p dir=\"ltr\">- DevExpress ASP.NET Chart Control <a href=\"http://demos.devexpress.com/XtraChartsDemos/Default.aspx\">http://demos.devexpress.com/XtraChartsDemos/Default.aspx</a></p>\n\n<h2 dir=\"ltr\">Existing Documents</h2>\n\n<p dir=\"ltr\">- Class Diagrams</p>\n\n<p dir=\"ltr\">- Sequence Diagrams</p>\n\n<p dir=\"ltr\">- Application Design Specification</p>\n\n<p dir=\"ltr\">- ERD</p>\n\n<p dir=\"ltr\">- Source Code that you will use as basis for your work.</p>\n\n<h1 dir=\"ltr\">GitLab Access</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You can get access to the Gitlab repo group in this tool <a href=\"http://tc-ragnar.herokuapp.com/ragnar/groups/5613f730d601610e000f21bd/290828\">http://tc-ragnar.herokuapp.com/ragnar/groups/5613f730d601610e000f21bd/290828</a> . &nbsp;If you are having trouble with the auto registration tool, please ask in the forums.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Once added to the team, fork the repository and work off this branch <a href=\"https://gitlab.com/aers-managed-risk/backend/tree/30051803-dashboard-page-frontend\">https://gitlab.com/aers-managed-risk/backend/tree/30051803-dashboard-page-frontend</a></p>\n\t</li>\n</ul>\n\n<h1 dir=\"ltr\">&nbsp;</h1>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30051803",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<h1><span style=\"line-height:1.2\">Submission</span></h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Upload documentation for how to run your submission</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Upload all your solution as git patch files.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Add&nbsp;elkhawajah&nbsp;as a member of your forked repository</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Winner will be required to submit a merge request on gitlab against the branch specified.</p>\n\t</li>\n</ul>\n\n<p><br />\n&nbsp;</p>\n",
  "forumId": 30908,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=30908",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 12,
  "numberOfSubmissions": 1,
  "phases": [
    {
      "type": "Registration",
      "status": "Closed",
      "scheduledStartTime": "2015-11-03T14:01:00.000Z",
      "actualStartTime": "2015-11-03T14:01:00.000Z",
      "scheduledEndTime": "2015-11-08T14:01:00.000Z",
      "actualendTime": "2015-11-08T14:01:00.000Z",
      "_id": "58132fc4550dfb3b52b8b010"
    },
    {
      "type": "Submission",
      "status": "Closed",
      "scheduledStartTime": "2015-11-03T14:06:00.000Z",
      "actualStartTime": "2015-11-03T14:06:00.000Z",
      "scheduledEndTime": "2015-11-08T14:01:00.000Z",
      "actualendTime": "2015-11-08T14:01:00.000Z",
      "_id": "58132fc4550dfb3b52b8b00f"
    },
    {
      "type": "Review",
      "status": "Closed",
      "scheduledStartTime": "2015-11-08T14:01:00.000Z",
      "actualStartTime": "2015-11-08T14:01:00.000Z",
      "scheduledEndTime": "2015-11-11T10:37:00.000Z",
      "actualendTime": "2015-11-11T10:37:00.000Z",
      "_id": "58132fc4550dfb3b52b8b00e"
    },
    {
      "type": "Appeals",
      "status": "Closed",
      "scheduledStartTime": "2015-11-11T10:37:00.000Z",
      "actualStartTime": "2015-11-11T10:37:00.000Z",
      "scheduledEndTime": "2015-11-12T07:43:00.000Z",
      "actualendTime": "2015-11-12T07:43:00.000Z",
      "_id": "58132fc4550dfb3b52b8b00d"
    },
    {
      "type": "Appeals Response",
      "status": "Closed",
      "scheduledStartTime": "2015-11-12T07:43:00.000Z",
      "actualStartTime": "2015-11-12T07:43:00.000Z",
      "scheduledEndTime": "2015-11-12T09:20:00.000Z",
      "actualendTime": "2015-11-12T09:20:00.000Z",
      "_id": "58132fc4550dfb3b52b8b00c"
    }
  ],
  "platforms": [
    "Other"
  ],
  "postingDate": "2015-11-03T14:01:00.000Z",
  "prize": [
    1400,
    700
  ],
  "projectId": 8923,
  "registrants": [
    {
      "handle": "NightWolf",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T14:18:00.000Z",
      "submissionDate": "2015-11-08T13:54:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b00b"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-03T20:59:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b00a"
    },
    {
      "handle": "gondzo",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T00:10:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b009"
    },
    {
      "handle": "jaindsonvs",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T13:53:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b008"
    },
    {
      "handle": "wsobolewski",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T17:15:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b007"
    },
    {
      "handle": "mac007",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T18:26:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b006"
    },
    {
      "handle": "zeasratwde",
      "reliability": "n/a",
      "registrationDate": "2015-11-04T22:23:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b005"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T02:09:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b004"
    },
    {
      "handle": "freelancebir",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T08:03:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b003"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2015-11-05T10:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b002"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-06T05:13:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b001"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2015-11-07T14:45:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58132fc4550dfb3b52b8b000"
    }
  ],
  "registrationEndDate": "2015-11-08T14:01:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-08T14:01:00.000Z",
  "submissions": [
    {
      "handle": "NightWolf",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 92.5,
      "finalScore": 92.5,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2015-11-08T13:54:00.000Z",
      "_id": "58132fc4550dfb3b52b8b011"
    }
  ],
  "technology": [
    ".NET",
    "ASP.NET",
    "C#",
    "JQuery",
    "SQL Server",
    "Windows Server"
  ]
}