{
  "_id": 30053780,
  "_isComplete": true,
  "__v": 1,
  "_lastUpdate": "2016-10-28T12:14:55.987Z",
  "appealsEndDate": "2016-04-17T16:07:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Create SOQL Code generator from AST generated by Peg parser",
  "challengeType": "First2Finish",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2016-05-15T10:04:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -14350175,
  "currentStatus": "Completed",
  "detailedRequirements": "<h3 dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(67, 67, 67); font-family:arial; font-size:18.6667px\">Requirements</span></span></h3>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">For a given SOQL Abstract Syntax Tree (AST), we should be able to generate valid SOQL code.</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">You should use the AST generated by the </span><a href=\"https://gitlab.com/financial-force-topcoder/financialforce_soql_pegjs_parser\" style=\"text-decoration:none;\"><u>FinancialForce SQOL parser</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"> (apply for access in the forums if you dont currently have access).</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Use the TreeWalker/AST Traverser available </span><a href=\"https://gitlab.com/financial-force-topcoder/financial_force_ast_walker\" style=\"text-decoration:none;\"><u>here</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"> (apply for access in the forums if you dont currently have access).</span></span></p>\n\n<h3 dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(67, 67, 67); font-family:arial; font-size:18.6667px\">Resources</span></span></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">Example :</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><a href=\"https://github.com/cucumber/gherkin/tree/master/javascript\" style=\"text-decoration:none;\"><u>the gherkin.js parser</u></a></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><a href=\"https://github.com/cucumber/gherkin/tree/master/testdata/good\" style=\"text-decoration:none;\"><u>Examples of the AST generated by the gherkin parser</u></a></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">If we take the Gherkin language as an example we can use the modified estraverse to help us generate code from the AST.</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">var GherkinGenerator = {};</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">GherkinGenerator.generate = function (ast) {</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;var gherkinGeneratedFeature = [];</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;TreeWalker.traverse(ast, {</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter : function (node, parent) {</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nodeText = GherkinGenerator[node.type + &#39;_enter&#39;](node, parent);</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodeText) gherkinGeneratedFeature.push(nodeText);</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leave : function (node, parent){</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nodeText = GherkinGenerator[node.type + &#39;_leave&#39;](node, parent);</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodeText) gherkinGeneratedFeature.push(nodeText);</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;});</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;return gherkinGeneratedFeature.join(&#39;&#39;);</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">};</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">GherkinGenerator.Feature_enter = function (node, parent) {</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;var Feature = &quot;&quot;;</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;Feature += &nbsp;node.keyword + &quot;:&quot; + node.name + NEWLINE;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;if(node.description)</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feature += node.description;</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;return Feature;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">};</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">GherkinGenerator.Scenario_enter = GherkinGenerator.ScenarioOutline_enter = function (node, parent) {</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;var Scenario = &quot;&quot;;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;Scenario += &nbsp;node.keyword + &quot;:&quot; + node.name + NEWLINE;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;if(node.description)</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scenario += NEWLINE + node.description;</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;return Scenario;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">};</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">GherkinGenerator.Background_enter = function (node, parent) {</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;var Background = &quot;&quot;;</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;Background += TAB + node.keyword + &quot;:&quot; + node.name;</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;return Background;</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">};</span><br />\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">// No-op when we leave the node.</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">GherkinGenerator.Feature_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.Scenario_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.ScenarioOutline_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.Background_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.Step_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.DocString_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.Tag_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.DataTable_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.TableRow_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.TableCell_leave =</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp;GherkinGenerator.Examples_leave = function(){};</span></span></p>\n\n<p dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We would then pass the JSON AST to GherkinGenerator.generate and we get back a string which would be the regenerated code.</span></span></p>\n\n<h3 dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(67, 67, 67); font-family:arial; font-size:18.6667px\">Repo/Housekeeping</span></span></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">You will need to base your work off the git repository provided.</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">You will be required to handle any merge issues that occur from your submission.</span></span></p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><span><span style=\"background-color:transparent; color:rgb(67, 67, 67); font-family:arial; font-size:18.6667px\">Coding Standards</span></span></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">All code should be fully unit tested and documented. Please use best practise here (you do not need to document getters and setters, etc)!</span></span></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span style=\"background-color:transparent; font-size:14.6667px\">All existing tests should be fully maintained (ie if you make a change to the existing functionality that breaks a test you need to fix that).</span></span></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30053780",
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "finalSubmissionGuidelines": "<div class=\"previewMask\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); font-family: 'Source Sans Pro', Arial, Helvetica, sans-serif; line-height: normal; font-size: 12px !important;\">\n<p dir=\"ltr\"><span><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Code</span></span></span></p>\n\n<p><span>&nbsp;</span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span><span style=\"background-color:transparent; font-size:14.6667px\">All source code must be well commented and following JavaScript best practices</span></span></span></p>\n\t</li>\n</ul>\n\n<p><span>&nbsp;</span></p>\n\n<p dir=\"ltr\"><span><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Video</span></span></span></p>\n\n<p><span>&nbsp;</span></p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\"><span><span><span style=\"background-color:transparent; font-size:14.6667px\">Please provide a demo video covering both a functional demo as well as code walkthrough of your parser implementation</span></span></span></p>\n\t</li>\n</ul>\n\n<p><span>&nbsp;</span></p>\n\n<p dir=\"ltr\"><span><span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Documentation</span></span></span></p>\n\n<p><span>&nbsp;</span></p>\n\n<ul>\n\t<li dir=\"ltr\"><span><span><span style=\"background-color:transparent; font-size:14.6667px\">Please provide a Deployment Guide containing configuration, installation and verification information as a Word document.</span></span></span></li>\n</ul>\n\n<p><span style=\"color:rgb(102, 102, 102); font-family:lucida grande,helvetica,arial,sans-serif; font-size:12px\">Any submissions which do not include any of the above artefacts will be outrightly rejected.</span></p>\n\n<div>&nbsp;</div>\n</div>\n\n<p>&nbsp;</p>\n",
  "forumId": 32686,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=32686",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 16,
  "numberOfSubmissions": 1,
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2016-04-15T10:04:00.000Z",
      "actualStartTime": "2016-04-15T10:04:00.000Z",
      "scheduledEndTime": "2016-05-15T10:04:00.000Z",
      "actualendTime": null,
      "_id": "5813413f550dfb3b52be924b"
    },
    {
      "type": "Iterative Review",
      "status": "Closed",
      "scheduledStartTime": "2016-04-16T03:36:00.000Z",
      "actualStartTime": "2016-04-16T03:36:00.000Z",
      "scheduledEndTime": "2016-04-17T16:07:00.000Z",
      "actualendTime": "2016-04-17T16:07:00.000Z",
      "_id": "5813413f550dfb3b52be924a"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2016-04-15T10:09:00.000Z",
      "actualStartTime": "2016-04-15T10:09:00.000Z",
      "scheduledEndTime": "2016-05-15T10:09:00.000Z",
      "actualendTime": null,
      "_id": "5813413f550dfb3b52be9249"
    }
  ],
  "platforms": [
    "Salesforce.com",
    "FinancialForce"
  ],
  "postingDate": "2016-04-15T10:04:00.000Z",
  "prize": [
    800
  ],
  "projectId": 7252,
  "registrants": [
    {
      "handle": "mhykol",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T11:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9248"
    },
    {
      "handle": "lanchongyizu",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T11:13:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9247"
    },
    {
      "handle": "vinoh",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T11:43:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9246"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T11:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9245"
    },
    {
      "handle": "Thinkle",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T12:03:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9244"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T12:36:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9243"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T13:21:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9242"
    },
    {
      "handle": "mekala.madhu",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T13:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9241"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T14:17:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9240"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T14:25:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923f"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T14:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923e"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T15:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923d"
    },
    {
      "handle": "jdrew1303",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T15:34:00.000Z",
      "submissionDate": "2016-04-16T03:36:00.000Z",
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923c"
    },
    {
      "handle": "wcheung",
      "reliability": "n/a",
      "registrationDate": "2016-04-15T23:24:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923b"
    },
    {
      "handle": "Bisunday",
      "reliability": "n/a",
      "registrationDate": "2016-04-17T10:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be923a"
    },
    {
      "handle": "Rakesh.Sa",
      "reliability": "n/a",
      "registrationDate": "2016-04-17T02:58:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "5813413f550dfb3b52be9239"
    }
  ],
  "registrationEndDate": "2016-05-15T10:04:00.000Z",
  "reviewScorecardId": 30001600,
  "reviewType": "INTERNAL",
  "screeningScorecardId": null,
  "submissionEndDate": "2016-05-15T10:09:00.000Z",
  "submissions": [
    {
      "handle": "jdrew1303",
      "placement": 1,
      "screeningScore": null,
      "initialScore": 100,
      "finalScore": 100,
      "points": 0,
      "submissionStatus": "Active",
      "submissionDate": "2016-04-16T03:36:00.000Z",
      "_id": "5813413f550dfb3b52be924c"
    }
  ],
  "technology": [
    "Google API",
    "JavaScript"
  ]
}