{
  "_id": 30052120,
  "_isComplete": true,
  "__v": 25124,
  "_lastUpdate": "2017-02-17T08:02:49.499Z",
  "appealsEndDate": "2015-11-22T02:30:00.000Z",
  "challengeCommunity": "develop",
  "challengeName": "Agon - Analytics Tool Integration NodeJS Code Challenge - REPOST",
  "challengeType": "Code",
  "checkpointSubmissionEndDate": null,
  "currentPhaseEndDate": "2015-11-18T14:30:00.000Z",
  "currentPhaseName": "Registration",
  "currentPhaseRemainingTime": -39461423,
  "currentStatus": "Cancelled - Client Request",
  "detailedRequirements": "<p dir=\"ltr\">The customer has an analytics tool that provides a filter focused UI and visualizations that map funding processes. The solution is a Windows desktop application that is being converted to become more web-based in a separate stream of work.</p>\n\n<p dir=\"ltr\">We are currently building a web front-end for our analytics tool. In the final version it should have dashboard-like behavior, as it should be able to place multiple visualizations of the same dataset on a single screen.&nbsp;</p>\n\n<p dir=\"ltr\">Besides these visualizations an important part of our analytic tool is the &#39;tv remote&#39; to navigate through the data. To filter data we use structured natural language queries (called filter). By stacking multiple of these queries, users can filter the data, on which visualizations are created. &nbsp;The client is also looking to include a visual programming editor that allows users to visually define/configure (template) sentences that specify refinements and metrics.</p>\n\n<p dir=\"ltr\">In this challenge you are updating the provided AngularJS/NodeJS application as outlined below.</p>\n\n<p dir=\"ltr\">The final deliverable solution will allow client perform the following :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Create/Edit/Delete/View a template</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- List/reorder/group templates</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Fill a template to generate filter</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Delete filter.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Reorder/Group filters.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Save/Update/Delete/Get Action trail</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Load/Group/Reorder action trails</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">If anything not clear in requirements please ask in forums.</p>\n\n<h1 dir=\"ltr\">Challenge Requirements</h1>\n\n<h2 dir=\"ltr\">Terms</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &ldquo;Template&rdquo; are structured natural language queries/sentences with dynamic/static variables used to create filters.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &ldquo;Filter&rdquo; is structured natural language queries/sentences, in the tool it is created from templates, user can fill template variables and save it as filter.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &ldquo;Action Trail&rdquo; is a group of filters.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">UI prototype and Application</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You are provided with updated HTML5 UI Prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You are provided with a nodejs application built in past challenge, the application was built using an old Angular/HTML prototype version and it only addressed part of the requirements. In this challenge you are replacing the existing angularjs/html frontend with the provided/updated HTML5 UI prototype.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">General Notes</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You will use NodeJS/Mongo/AngularJS/ExpressJS stack in this challenge.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You will update the existing NodeJS API to support the new functionality required in this challenge.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You are required to use open source node module such as <a href=\"https://github.com/caolan/async\">async</a> to deliver an organized code.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Backend will mainly have two models :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Template : created in Sentence/Template builder, represents a natural language query.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Filter : represents a filled template query, the query comes with variables, the user can fill the variables in the template and store it as filter.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Action Trial : represent a list of filters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The provided application don&rsquo;t have the &lsquo;filter&rsquo; object defined, it store it directly inside the actionTrail model in the &lsquo;data&rsquo; field.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Folder Collection</h2>\n\n<p dir=\"ltr\">We have new concept to create groups/folders to group templates, and action trails. We need to create new collection to support this new functionality.</p>\n\n<p dir=\"ltr\">Folder collection would have the following fields :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- id</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- name</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- type (actionTrail, template)</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- items : this should be array of target object ids</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- sortOrder</p>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">We need new api endpoints for this :</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- POST /api/folders</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- To create new folder.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Response should be created object.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- PUT /api/folder/:id</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Update folder name or sortOrder or items field.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- When updating sortOrder field, all the folders of same type should be sorted.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Response should be updated folder with items are populated with the actual template documents.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- PUT /api/folder/:id/position/:idx</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use this endpoint to change item position in a folder.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- PUT /api/oldFolder/:id/newFolder/:id/position/:idx</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use this endpoint to move item between folders.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Remove the item from old folder and add it to the new folder.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Idx represents the index to place item in the new folder items field/array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- DELETE /api/folder/:id</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use this endpoint to delete the folder and associated items.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p dir=\"ltr\">We need to have two default folders with name &ldquo;default&rdquo;, one type will be &lsquo;actionTrail&rsquo;, and the other is &lsquo;template&rsquo;. These be used to store the sort order of non grouped templates/actionTrails. These folders will not have a sortOrder they not visible in the template menu and it&rsquo;s items will always be displayed below the folders in menu.</p>\n\n<h3 dir=\"ltr\"><u>AngluarJS App Improvements</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- It is preferred to suggest better naming than the pages name in the provided UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The existing application provided is using OLD UI prototype, it should be completely replaced by the provided UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Add proper validation where needed in both frontend and backend when storing the data.</p>\n\t</li>\n</ul>\n\n<h3 dir=\"ltr\"><u>Consolidating Navigation</u></h3>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The current angularjs application in the UI prototype should be restructured to be a single page and multiple partials.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The navigation between partials should remain as currently done in the UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Whenever navigating between any page/partial, any open popup/flyout should be closed.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Any issue in current AngularJS app should be fixed in the scope of this challenge.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Templates Requirements</h2>\n\n<h3 dir=\"ltr\"><u>Template Builder</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Editor page <a href=\"https://dl.dropboxusercontent.com/u/9747230/agon_pv/action.html#/editor\">/action.html#/editor </a>called Sentence Builder or Template builder.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- To navigate to this page from menu :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- open /action.html</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Click on &lsquo;Refine Context&rsquo; button</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Click on filter icon next to &lsquo;Refine Traces&rdquo;</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- then select &ldquo;Create Template&rdquo;</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Refer to the Readme.txt in the provided UI prototype to understand how to construct sentences. Also screenshots under &lsquo;docs&rsquo; folder show you a detailed verification screenshots of the steps needed to build a sentence.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Template Model</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- template#data field might need to be updated to support multiple sentences.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Static/Dynamic Part :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- We added new option to mark a part in a sentence to be a static or dynamic. This update is made in UI prototype, you can construct a sentence and double click on any part to see that option in the #76c3bd (this is a color) popup</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Static: means that the selection made in the template can not be changed when the template is used in a later stage.</p>\n\t\t\t</li>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Dynamic: means that the selection made in the template can be swapped with other valid selections in a later stage.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Existing model store the static flag, you need to make sure it works as expected.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Saving Templates</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- After constructing valid template/sentences clicking &lsquo;Save&rsquo; will prompt user to provide a name for template, that should only happen if the user constructed a valid sentence successfully.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The template name is required.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Clicking &lsquo;save&rsquo; for existing template will prompt the template name popup with name populated, users can update the name if they want to.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- &lsquo;Validate&rsquo; button will validate the created sentence. It should follow the rules defined in the UI prototype for validation.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use &ldquo;POST /api/templates&rdquo; endpoint to store template with following information :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- title : the text provided when user click on &lsquo;Save&rsquo;</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- data : the sentences constructed in the editor</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- group field is no more needed, we are using the new folder collection.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- store the new template id in the &lsquo;default&rsquo; folder of type &lsquo;template&rsquo;, it should be stored in 0 index in the items array so that new item be displayed in top of the items.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- On successful execution the template editor will remain opened with title changed from &ldquo;New Template&rdquo; to the template name stored.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Inline template name editing should be supported same as done in &ldquo;Create Filter&rdquo; screen.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Display success/fail message depends on the save execution as done in UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use can edit existing template, use &ldquo;PUT /api/template/:id&rdquo; to update the template with new information.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Listing Templates</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Use GET /api/templates to get all templates, you need to do the following updates to this endpoint :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Retrieve all folder documents of type &lsquo;template&rsquo; sorted by &lsquo;sortOrder&rsquo;.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Construct the response as follow :</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- [<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&ldquo;folder&rdquo; : {<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;name&rdquo; : &lt;folder-name&gt;,<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;items&rdquo; : [<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;template-object&gt;, &lt;template-object&gt; .. etc sorted using the items array from &ldquo;folder&rdquo; document.<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br />\n\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, .. &lt;next folder&gt; .. etc .., &lt;default folder&gt;<br />\n\t\t\t&nbsp;]</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- &lsquo;default&rsquo; folder will be appended to end of the response array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Response templates will be listed in the left side menu as shown in the Editor page.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Templates in the list can be re-ordered as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;PUT /api/folder/:id/position/:idx&rdquo; endpoint.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- User can add folders by clicking on Filter icon next to &ldquo;Refine traces&rdquo;, menu will popup with &ldquo;create folder&rdquo; option, this will add entry to top of menu, user will provide valid name and click checkmark to save the group.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;POST /api/folders&rdquo; to create the new folder.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The folder should be placed in top of the folders order.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Templates can be grouped inside created/existing folder/group.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &rdquo;PUT /api/oldFolder/:id/newFolder/:id/position/:idx&rdquo; to update item grouping.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Right click on template will give two options :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Edit : will take user to edit the template in Sentence Editor.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Delete : will delete the item from backend</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- Use &ldquo;DELETE /api/template/:id&rdquo; to delete the item.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Right click on folder allows user to :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Delete folder : use &ldquo;DELETE /api/folder/:id&rdquo; to delete the folder.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Rename folder : use &ldquo;PUT /api/folder/:id&rdquo; to update the folder.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Open and fill in a single template</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- User can click on a template from template list menu to open and a fill template variables. Let&rsquo;s call it &ldquo;Create Filter&rdquo; screen.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The template will be loaded from backend using &ldquo;GET /api/template/:id&rdquo; endpoint.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Clicking on Edit in the template filler section will take user to edit template in Sentence Builder.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The template will be loaded from backend using &ldquo;GET /api/template/:id&rdquo; endpoint.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;PUT /api/template/:id&rdquo; to store the updated template.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The title in top of &ldquo;Create Filter&rdquo; screen should be inline editing as done in the UI prototype. &nbsp;No backend interaction here.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Filling a template should take into account static/dynamic option for each variable as explained above for static/dynamic concept. &nbsp;No backend interaction here.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Saving filled templates as a filter</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When a user completely filled in a template they can store the filter by clicking &ldquo;OK&rdquo;.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Filters will be stored in Action Trail.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Action Trail is an application-state storage for the currently opened set of filters.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- All created filters in current session will be stored using angularjs as local storage.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Action trail is the bottom left menu you see when opening &ldquo;Action.html&rdquo; page in UI prototype.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The user will be prompted with a form to fill the filter information :</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Name: Short name to be shown in listing of Action Trail</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Description: Longer text to give the user some room to comment on what the filter does and why it was added.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Sentence: This is the filled in template so we don&rsquo;t need it in form, so remove it.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- No Backend Interaction here.</p>\n\t</li>\n</ol>\n\n<h2 dir=\"ltr\">Action Trail Requirements</h2>\n\n<h3 dir=\"ltr\"><u>Action Trail menu in Action page</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- It is <a href=\"https://dl.dropboxusercontent.com/u/9747230/agon_pv/action.html\">Action.html</a> page in the provided UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The action trail menu is the one at bottom of the left side menu with Action Trial title, we can refer to it as Action Trail menu or Filters List menu.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- When opening the page it will loads the Action Trail stored in local storage of current session, you can use this module for this purpose <a href=\"https://github.com/grevory/angular-local-storage\">https://github.com/grevory/angular-local-storage</a></p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The red title in Action Trail menu represents the current Action Trail name.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- If action trail not stored in backend then user &lsquo;New Action Trail&rsquo; as title, double clicking on it will make it editable inline, user can change the name.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- We don&rsquo;t have the inline editing in this part of UI, you can reuse the same functionality as in Create Filter screen.</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Action Trail Model</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The current action trail model definition in the current application needs new field to store the order of templates.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The model definition will need update to support grouping filters and reordering.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- It is OK if you want to make changes to the model structure.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>List the filters in Action Trail</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The filters will be loaded from Action Trail stored in the browser local storage.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- 1st item is always &ldquo;Load business process&rdquo;, next items are loaded from angularjs local storage stored filters .</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- First line of a filter shows its name, second line its full sentence</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The percentages are placeholders, for now, use 100% everywhere.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Filters in the Action Trail can be re-ordered by drag/drop as done in the UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Filters in the Action Trail can be enabled/disabled by right click on the filter item.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Filters can be deleted from the Action Trial by clicking Right click and select Delete option.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- No backend interaction here.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Group filters in Action Trail</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Grouped filters will have a single name, but multiple sentences. Use the filters names combination to generate a name, i.e. add colon between original names.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- You can merge the groups by dragging filters to other filter or existing group.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Groups are recognized by the collapse/expand icon and &nbsp;&ldquo;group&rdquo; label above the name.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Groups can also be re-ordered using drag/drop</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Groups can be collapsed to hide sentences or expanded to show list of sentences as done in the UI prototype.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- No backend interaction here.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Save Action Trail to backend</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Right click on Action Trial title (in red) will show option &ldquo;Save to datastore&rdquo;, clicking on it will store the action trail with filters on backend. Display a popup to show successful storage if happened.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;POST /api/actionTrails&rdquo; to store the new actionTrails.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The action trail should be stored in &lsquo;default&rsquo; folder of type &lsquo;actionTrail&rsquo; with index = 0 in the items array.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The save operation will store the filters with the same order and grouping as it was displayed when user saved it.</p>\n\t</li>\n</ol>\n\n<h3 dir=\"ltr\"><u>Listing Action Trails from Backend</u></h3>\n\n<ol>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- The notification icon that has a number (5) in Action Trail menu section in UI prototype represents number of Action Trails available in backend, clicking on it will open up a flyout that list all Action Trails stored in backend.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;GET /api/actionTrails&rdquo; to retreive all action trails.</p>\n\n\t\t<ul>\n\t\t\t<li dir=\"ltr\">\n\t\t\t<p dir=\"ltr\">- You need to make changes to this endpoint same as the one done in &ldquo;GET /api/templates&rdquo; endpoint (see above).</p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The local storage action trail should be listed with the ones from backend, and should have (Local Storage) label, it will always be the first item of the action trail list.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- User can double click on Action Trail item to open and view associated filters in Action Trail listing menu.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- This will call &ldquo;GET /api/actionTrail/:id&rdquo; and read the response.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Red title will be updated to match the Action Trail &ldquo;name&rdquo; json field. Should be truncated if the name is long, tooltip should be added to Action Trial title.</p>\n\t\t</li>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- The filter list will be populated from the retrieved Action Trial &ldquo;data&rdquo; json array field.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- User can click on the gear icon in the flyout, it will give option to create folder same as we do for grouping in Template listing as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;POST /api/folders&rdquo; to store the folder.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Action trails can be reordered in the flyout by drag/drop as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;PUT /api/folder/:id/position/:idx&rdquo; to update the position of the item.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Action trails can be grouped into folders by drag/drop as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;PUT /api/oldFolder/:id/newFolder/:id/position/:idx&rdquo; to change item position.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Action trail item can be deleted by right click on an item, it will show delete option as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;DELETE /api/acionTrail/:id&rdquo; endpoint.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Folder can be deleted by right click on the folder, it will show delete option as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- USE &ldquo;DELETE /api/folder/:id&rdquo; to delete the folder and associated actionTrails.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Folder can be renamed by right click on folder, it will show rename option as shown in the UI prototype.</p>\n\n\t<ul>\n\t\t<li dir=\"ltr\">\n\t\t<p dir=\"ltr\">- Use &ldquo;PUT /api/folder/:id&rdquo; to update the folder name.</p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n<h2 dir=\"ltr\">Documentation</h2>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Provide a detailed README documentation for how to setup and configure the application.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Your code should be documented properly to be easily maintained by future developers.</p>\n\t</li>\n</ul>\n\n<h2 dir=\"ltr\">Supported browsers</h2>\n\n<p dir=\"ltr\">Your submission must work on the browsers listed below:</p>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- IE10+</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Safari latest version on Mac &amp; Windows</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Firefox latest version on Mac &amp; Windows</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Chrome latest version on Mac &amp; Windows</p>\n\t</li>\n</ul>\n\n<h1 dir=\"ltr\">&nbsp;</h1>\n",
  "digitalRunPoints": null,
  "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30052120",
  "finalSubmissionGuidelines": "<h1 dir=\"ltr\">Deliverable</h1>\n\n<ul>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- All source code that implement the above requirement.</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- README in markup language</p>\n\t</li>\n\t<li dir=\"ltr\">\n\t<p dir=\"ltr\">- Verification document contains steps to verify your solution.</p>\n\t</li>\n</ul>\n",
  "forumId": 30410,
  "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=30410",
  "numberOfCheckpointSubmissions": 0,
  "numberOfCheckpointsPrizes": 0,
  "numberOfRegistrants": 21,
  "numberOfSubmissions": 0,
  "postingDate": "2015-11-13T13:30:00.000Z",
  "projectId": 8856,
  "registrationEndDate": "2015-11-18T14:30:00.000Z",
  "reviewScorecardId": 30001610,
  "reviewType": "COMMUNITY",
  "screeningScorecardId": null,
  "submissionEndDate": "2015-11-18T14:30:00.000Z",
  "submissions": [],
  "phases": [
    {
      "type": "Registration",
      "status": "Open",
      "scheduledStartTime": "2015-11-13T13:30:00.000Z",
      "actualStartTime": "2015-11-13T13:30:00.000Z",
      "scheduledEndTime": "2015-11-18T14:30:00.000Z",
      "actualendTime": null,
      "_id": "58a6ae295d036c0bbdd5c96e"
    },
    {
      "type": "Submission",
      "status": "Open",
      "scheduledStartTime": "2015-11-13T13:35:00.000Z",
      "actualStartTime": "2015-11-13T13:35:00.000Z",
      "scheduledEndTime": "2015-11-18T14:30:00.000Z",
      "actualendTime": null,
      "_id": "58a6ae295d036c0bbdd5c96d"
    },
    {
      "type": "Review",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-18T14:30:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-20T14:30:00.000Z",
      "actualendTime": null,
      "_id": "58a6ae295d036c0bbdd5c96c"
    },
    {
      "type": "Appeals",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-20T14:30:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-21T14:30:00.000Z",
      "actualendTime": null,
      "_id": "58a6ae295d036c0bbdd5c96b"
    },
    {
      "type": "Appeals Response",
      "status": "Scheduled",
      "scheduledStartTime": "2015-11-21T14:30:00.000Z",
      "actualStartTime": null,
      "scheduledEndTime": "2015-11-22T02:30:00.000Z",
      "actualendTime": null,
      "_id": "58a6ae295d036c0bbdd5c96a"
    }
  ],
  "registrants": [
    {
      "handle": "smtryingcode",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T14:08:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c969"
    },
    {
      "handle": "testXuSanping",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T14:20:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c968"
    },
    {
      "handle": "panoptimum",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T14:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c967"
    },
    {
      "handle": "sidthekid",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T14:40:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c966"
    },
    {
      "handle": "michael_tang",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T15:02:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c965"
    },
    {
      "handle": "codingdrone",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T17:27:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c964"
    },
    {
      "handle": "kcchiu",
      "reliability": "n/a",
      "registrationDate": "2015-11-13T20:45:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c963"
    },
    {
      "handle": "ChenXiaoTemp",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T03:14:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c962"
    },
    {
      "handle": "mulish",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T06:15:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c961"
    },
    {
      "handle": "tuxing",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T15:07:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c960"
    },
    {
      "handle": "spanhawk",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T16:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95f"
    },
    {
      "handle": "peakpado",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T16:50:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95e"
    },
    {
      "handle": "alfiya_Zi",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T17:02:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95d"
    },
    {
      "handle": "Luca",
      "reliability": "n/a",
      "registrationDate": "2015-11-14T19:39:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95c"
    },
    {
      "handle": "blu3fox",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T03:54:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95b"
    },
    {
      "handle": "Amith",
      "reliability": "n/a",
      "registrationDate": "2015-11-15T14:05:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c95a"
    },
    {
      "handle": "sunbinbrother",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T00:34:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c959"
    },
    {
      "handle": "ananthhh",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T05:55:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c958"
    },
    {
      "handle": "Sky_",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T07:00:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c957"
    },
    {
      "handle": "e06widu",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T09:25:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c956"
    },
    {
      "handle": "karthikbalaji92",
      "reliability": "n/a",
      "registrationDate": "2015-11-16T10:18:00.000Z",
      "submissionDate": null,
      "rating": null,
      "colorStyle": "color: #000000",
      "_id": "58a6ae295d036c0bbdd5c955"
    }
  ],
  "event": {
    "id": 3446,
    "description": "2016 TopCoder(R) Open",
    "shortDescription": "tco16"
  },
  "prize": [
    1400,
    600
  ],
  "technology": [
    "Angular.js",
    "JavaScript",
    "MongoDB",
    "Node.js"
  ],
  "platforms": [
    "NodeJS"
  ]
}